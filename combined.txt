Contents of YouTube-Transcript/BEGINNER INTRODUCTION TO HOUDINI 20 TUTORIAL.txt:
# tactiq.io free youtube transcript
# BEGINNER INTRODUCTION TO HOUDINI 20 TUTORIAL ( Tools & User Interface)
# https://www.youtube.com/watch/uk21-YNhycY

00:00:00.040 so here we are inside of Houdini
00:00:02.719 20 before we start I'd just like to give
00:00:05.240 you a quick tip something that helped me
00:00:07.319 a lot I didn't implement it in the
00:00:09.440 beginning but I wish I did so I'd like
00:00:11.519 to share it with you and that is to just
00:00:14.360 get a piece of paper and a pen and write
00:00:17.199 down all the things that are going to
00:00:19.560 help you navigate through Houdini if you
00:00:23.199 don't want to do that I have a PDF on
00:00:25.680 patreon that you can just download for
00:00:28.080 five bucks it's not much and that will
00:00:31.119 help you just uh navigate your way
00:00:33.280 through and not forget certain keys so
00:00:35.760 you won't be in in a situation where
00:00:38.120 basically you'll be like oh what is that
00:00:39.760 key that I need how do I get back to
00:00:42.039 this viewport and essentially it will
00:00:44.680 just streamline your learning process
00:00:47.280 the one thing that you need to
00:00:48.719 understand is you're going to need to
00:00:50.559 learn the basics before you can get into
00:00:52.960 the cool stuff and unfortunately we all
00:00:55.879 had to do it but it is really worth
00:00:58.440 doing so let's get into it and let's
00:01:01.399 learn Houdini interface the first thing
00:01:04.040 you're going to be greeted with when you
00:01:05.680 open Houdini for the first time is these
00:01:09.479 three panels over here where you have
00:01:12.320 your main viewport over here and this is
00:01:14.799 going to be a visual representation of
00:01:17.159 all the things that you create inside of
00:01:20.159 your network view which you can find in
00:01:22.400 the bottom right hand corner and just
00:01:25.360 above that you are going to find all
00:01:27.920 your settings parameters is inside of
00:01:30.799 your parameter view which is your top
00:01:33.360 right hand corner over here so to best
00:01:36.040 explain this we are going to jump
00:01:37.880 straight in and we are going to create
00:01:40.079 our first piece of geometry inside of
00:01:43.320 Houdini to do that we can press either
00:01:46.360 tab or you can right click whichever one
00:01:49.040 is easier for you at the moment I'm just
00:01:51.159 going to click with my right Mouse
00:01:53.640 button and I'm just going to type goo
00:01:57.960 and that's going to give us a geom
00:01:59.920 ometry node so this geometry node is
00:02:03.560 essentially like a folder a placeholder
00:02:07.479 something that is used to work inside of
00:02:12.760 everything that we are going to create
00:02:15.319 is going to be inside of folders so it
00:02:17.959 doesn't matter if it's
00:02:19.480 geometry or if it's a camera or if it's
00:02:23.160 a light each one of them is going to
00:02:26.080 have a folder like this and it's going
00:02:29.120 to be inside of this network view over
00:02:32.840 here so if you created a camera at this
00:02:35.800 point in time it would create a camera
00:02:38.599 node so to get into this node what you
00:02:42.959 can press is you can press I and that is
00:02:45.519 going to go in or you can press the U
00:02:48.400 that's going to go up for example or you
00:02:51.159 can just double click on it or press
00:02:54.280 back so that's how you get in and out of
00:02:57.239 your noes we are going to double click
00:02:59.760 click on it jump inside and once again
00:03:03.280 either tab or right click and start to
00:03:06.840 type for example
00:03:09.120 box and that's going to give us our
00:03:11.920 first node that's going to actually
00:03:14.680 represent a geometry inside of our
00:03:18.440 viewport every time you create a new
00:03:20.760 node you are going to be given a choice
00:03:23.840 of what to do with it with these flags
00:03:27.360 and to best explain that I will just
00:03:30.599 create another node and as I did before
00:03:33.480 it's tab or right click and we are going
00:03:37.080 to
00:03:38.799 select
00:03:41.400 Mountain there we go and click over here
00:03:45.280 to connect the nodes we just click and
00:03:47.480 drag and that will connect the nodes but
00:03:50.239 now you see that for example nothing is
00:03:53.280 happening and why is nothing happening
00:03:56.079 the reason why nothing is happening is
00:03:58.239 because in houd you have to actually
00:04:00.920 specify for each node that you want to
00:04:03.959 view what it is actually doing so to do
00:04:07.879 that you need to click on this eyeball
00:04:10.519 over here or click on the blue flag on
00:04:14.079 the right hand
00:04:15.720 side so there we have a deformation
00:04:19.560 happening on top of our geometry and now
00:04:22.520 we see it because we have actually
00:04:25.120 enabled the display flag over here so
00:04:27.960 just to go through what all of the Flags
00:04:30.280 actually
00:04:31.320 do I will just add another
00:04:39.479 one and we'll just add that in there and
00:04:42.720 once again we are going to enable the
00:04:44.919 display flag over there and for that to
00:04:47.960 work we just need to add a few more
00:04:50.199 segments to our box over here so if we
00:04:53.199 just select our box and go to our
00:04:55.600 parameter view which is essentially our
00:04:57.720 settings for whichever node is selected
00:05:00.800 we can just add in there so we can go
00:05:04.639 20 20 and
00:05:08.440 20 and that is going to give us our
00:05:12.600 deformation over here and I'm just going
00:05:15.320 to you see when I selected this one it
00:05:17.560 gives me different settings so if I just
00:05:20.440 reduce the amplitude of that that is
00:05:22.840 going to give us our box and to get back
00:05:26.000 to what I was talking about earlier the
00:05:28.360 display Flags
00:05:30.319 we go over here and we just adjust this
00:05:34.880 so we know that it's working so if we go
00:05:37.919 back to our display flag over here it's
00:05:40.160 going to show us what this node is doing
00:05:43.000 and everything before it and if we click
00:05:46.479 over here it's going to show us what
00:05:48.440 this node is doing and everything before
00:05:50.639 it so if we go here for example we've
00:05:53.560 learned what the blue flag is and that's
00:05:55.919 the display flag and over here we have a
00:05:58.759 bypass for for example so when you
00:06:01.639 enable the bypass one it's going to
00:06:04.280 bypass this mountain node and it's going
00:06:06.800 to go straight into the bend node so
00:06:09.440 it's going to disregard it so if we
00:06:11.360 click on it you can see that the
00:06:14.400 mountain node has been disregarded and
00:06:16.759 we only have a bend that is affecting
00:06:19.560 our box so if we switch that off we go
00:06:23.720 back to that next thing over here we
00:06:26.240 have our information node and that is
00:06:28.599 used to
00:06:29.960 uh to find uh errors inside of our
00:06:33.759 geometry and give us information about
00:06:37.319 what is actually happening inside of our
00:06:41.440 node and what attributes are also
00:06:44.400 applied to this
00:06:45.960 node in addition we can also add a note
00:06:49.599 so for example you can say um this node
00:06:56.919 is not working
00:07:01.800 and explain what is going on with that
00:07:04.199 node and you can leave that for someone
00:07:06.360 else that's going to pick up your file
00:07:08.319 or you can leave it for yourself if you
00:07:11.280 come back to this project file in a few
00:07:14.400 months it's just a good way to explain
00:07:18.479 what's going on with each node so you
00:07:21.479 need to just enable this to show it next
00:07:23.759 to your node okay then we can go to this
00:07:28.080 freeze node and that is essentially just
00:07:31.160 like a merge down so if you've ever
00:07:34.240 worked in Photoshop you merge layers
00:07:36.680 down so if we came over here and we
00:07:41.080 detached this note for example and we
00:07:43.919 broke our Network and you can break your
00:07:47.800 network by either pressing Y and that's
00:07:51.199 going to give you these scissors and you
00:07:53.039 can just cut the network off or if you
00:07:57.000 reconnect it you can click on it it and
00:07:59.800 just shake it and that will also
00:08:02.280 disconnect the
00:08:03.960 nodes so you can see that when it was
00:08:07.400 disconnected nothing was visible because
00:08:09.759 the network was disconnected so if we
00:08:13.280 wanted for example just to keep this
00:08:15.440 node we could say lock and it's
00:08:19.240 essentially freezes this and merges
00:08:22.080 everything down and now when we detach
00:08:24.879 it it stays there you could
00:08:27.720 even delete is and you have everything
00:08:31.520 within one node so it's essentially
00:08:33.440 collapsing everything into one node so
00:08:36.159 if you just press control Z that will
00:08:38.320 undo that and we remove this press okay
00:08:43.559 and now it disappears because it's not
00:08:45.720 connected correctly so we can reconnect
00:08:48.360 that and now it's working
00:08:52.240 correctly finally we can have a template
00:08:56.720 so for example if we want want to see
00:08:59.880 what our Mountain was doing before we
00:09:03.160 can click on the template and that is
00:09:05.320 going to show us this node
00:09:09.519 before the bend was applied to it so
00:09:13.040 essentially if
00:09:15.160 we bypass this one now we don't see the
00:09:18.920 template because it's templated exactly
00:09:22.760 what we have over here okay so we'll
00:09:26.519 just switch that off so you can see
00:09:28.440 template is on there it just shows you
00:09:31.079 essentially a ghosted view of the
00:09:33.880 previous
00:09:35.079 node okay another good thing to know
00:09:38.040 inside of your network view is that if
00:09:41.640 everything gets messed up you can press
00:09:45.000 the L key and that will automatically
00:09:48.200 try to align everything that's inside of
00:09:51.519 your network view because sometimes it
00:09:53.440 can get really messy with you when you
00:09:55.320 have a lot of nodes and they're all in
00:09:57.560 different places gets crazy you can
00:10:00.480 literally just press the L key and that
00:10:03.839 will try to align everything nicely also
00:10:08.120 if you have everything like this and you
00:10:10.360 want it to align it vertically you can
00:10:13.200 select your nodes and press a and just
00:10:18.399 drag like that or drag them down and
00:10:22.680 that will align them vertically or
00:10:24.839 horizontally so that's just selecting
00:10:26.959 your not many many different notes you
00:10:29.360 can get an overview of what's going on
00:10:31.839 inside of your network View and that's
00:10:33.680 by pressing the o button that's just
00:10:35.839 going to give you an overview of what's
00:10:37.760 Happening inside so we'll switch that
00:10:40.240 off for the moment another thing that
00:10:41.959 you can do is you can also create some
00:10:45.800 Network boxes so essentially you can
00:10:48.360 have this by Alt click you can copy
00:10:51.839 these so you have a few different
00:10:54.720 networks that are going around and say
00:10:57.760 for instance you wanted to group group
00:10:59.360 them you can just come over here and you
00:11:02.959 create a network box and that way you
00:11:05.120 can move them all at
00:11:07.200 once and you can have change colors over
00:11:10.240 here you can add an image into the
00:11:13.079 background and just a few simple things
00:11:16.399 there but main thing that you need to
00:11:18.200 know is just that you can add a n to a
00:11:20.040 box you can rename it and that kind of
00:11:23.440 stuff what I'd like to show you now is
00:11:25.720 that in these
00:11:27.079 settings you can adjust the parameters
00:11:30.519 in a few different ways so you can
00:11:33.120 either select it and actually type
00:11:35.600 something in here or you can middle
00:11:39.720 click inside and that's going to give
00:11:41.440 you this ladder so essentially you can
00:11:44.120 adjust your geometry or any settings of
00:11:46.959 any node in the
00:11:49.440 increments of 10 or the power of 10
00:11:53.440 which you move left or right and that
00:11:57.440 will give you these adjust ments in
00:12:00.160 increments so essentially you use this
00:12:03.399 .1 for smaller increments and the powers
00:12:07.600 of 110 and 100 if you have something
00:12:11.200 large like a landscape or something
00:12:13.839 another good thing to remember is that
00:12:16.399 Houdini worked in meters so over here it
00:12:19.839 is 1 m 2 m 3 m and so on so it's just
00:12:24.160 good to know that you are actually
00:12:25.680 working in increments of one meter
00:12:30.360 okay so remember middle click ladder and
00:12:35.600 you can adjust your settings like that
00:12:39.240 next thing we're going to do is we are
00:12:40.920 going to figure out how we can move
00:12:44.079 around and select things okay so the
00:12:47.040 simple thing to do over here is just
00:12:49.519 left click and that allows you to Tumble
00:12:52.279 around anything that's inside of your
00:12:55.240 scene mle Mouse button pretty standard
00:12:59.000 zoom in zoom out and middle Mouse button
00:13:02.720 if you click it you can pan around your
00:13:07.000 object like that okay that's looking
00:13:10.760 good just in case you get into a
00:13:14.040 position where you are not happy with it
00:13:17.959 you can always press the G key and that
00:13:20.040 is going to bring you back to your
00:13:21.839 standard position so when you open
00:13:24.279 Houdini your viewport is always going to
00:13:26.639 be uh in this orientation also what you
00:13:29.680 can do is if you have something like
00:13:33.240 this you can hit space bar F and that is
00:13:37.079 going to frame whatever is uh selected
00:13:40.519 or in your scene and for example if you
00:13:43.639 have two things in your scene and we'll
00:13:46.800 just drop a merge in here one more
00:13:56.079 time so now we have two things in US
00:13:58.880 scene and we want to Center everything
00:14:01.160 that is in our scene we can just press
00:14:04.240 space bar and H and that is going to
00:14:07.839 bring us back to our home view but it's
00:14:10.320 got both things inside of our
00:14:14.079 viewport Okay so we've learned that so
00:14:17.279 we can just delete the second object
00:14:19.440 that we have over here and we are back
00:14:22.000 with our first one so once again if we
00:14:25.000 just want to view this one we can press
00:14:28.079 Base Bar F and is going to bring us back
00:14:30.680 there so over here on your left hand
00:14:32.800 side you can see that we have this
00:14:34.199 camera selected so when this camera is
00:14:36.720 selected you can move around by clicking
00:14:39.360 with your left Mouse button or your
00:14:42.040 middle Mouse button or the ones that we
00:14:44.079 learned before but if you press s or you
00:14:47.560 come to the selection icon over here and
00:14:50.839 you click on it when you do the same
00:14:53.240 thing now with your left Mouse button
00:14:56.720 you are actually selecting things
00:14:59.199 so you can't move around but if you are
00:15:03.560 in this mode and you still want to move
00:15:05.480 around you can still do that if you
00:15:07.240 press space bar so now we're pressing
00:15:09.759 space bar and you can see it it's coming
00:15:12.120 back to this camera icon so space bar
00:15:15.920 and now we can tumble around again and
00:15:18.560 use the movement controls
00:15:22.360 like
00:15:24.519 before okay so over here we have
00:15:27.800 essentially our selection option so this
00:15:30.040 is to select an entire object so you can
00:15:33.160 see the outline of an entire object and
00:15:36.199 then the next icon is to select certain
00:15:39.240 things like points edges Primitives
00:15:42.160 vertices so now if you select that you
00:15:44.279 can select just the polygons for example
00:15:47.120 so that's how you select either the
00:15:48.639 whole object or just certain things or
00:15:51.360 certain parts of one object the next
00:15:54.240 thing we are going to do is we are going
00:15:56.519 to explore these few things so these are
00:15:59.160 your movement icon where you can
00:16:01.880 basically just move anything over here
00:16:05.120 but don't forget that most of your
00:16:07.240 things you can just adjust over here so
00:16:10.120 you have your rotation your scale and
00:16:11.959 your translate controls over here and
00:16:15.759 that is exactly the same thing as you
00:16:18.079 have on this side so then we have our
00:16:22.560 rotation controls our scale
00:16:26.680 controls this is just rag do so that's
00:16:29.240 for example for animation when someone
00:16:31.880 has a character and they get shot and
00:16:34.519 they just fall down the stairs like a
00:16:36.600 rag doll so that's for that and then
00:16:38.880 over here we have an interesting thing
00:16:40.759 it is the combination of all three of
00:16:45.199 these so you have your movement your
00:16:47.680 rotation and your scale Allin one so you
00:16:51.079 can choose whether or not you want to
00:16:52.920 use that I don't really use it but you
00:16:56.759 might find a use for it okay and then
00:16:59.759 you have your snaps just like in any
00:17:02.279 other software it's good to know that
00:17:04.760 they there and they are very useful but
00:17:07.280 for the moment we're not going to use
00:17:08.760 them so we are going to jump back into
00:17:11.240 our camera by just click on the camera
00:17:13.760 and you are back inside of inside of
00:17:17.119 your movement options over here so s key
00:17:22.039 it takes you into selection mode and
00:17:24.559 this camera you are in your pan and
00:17:28.480 movement modes so as we move down we are
00:17:31.559 going to see that we have a animation
00:17:34.559 timeline at the bottom over here the
00:17:37.360 most important things you need to know
00:17:39.200 over here is just the basic uh play
00:17:42.679 buttons and stop and the standard stuff
00:17:47.120 but over here this real time toggle is
00:17:49.240 something that I think should be on by
00:17:51.440 default so this is essentially something
00:17:55.039 that allows you to play back your
00:17:57.440 animation in real real time and not at
00:18:00.960 full speed because if this is not uh
00:18:03.760 enabled your animation will play at the
00:18:06.760 fastest possible speed that the computer
00:18:09.080 can manage and if it is enabled it will
00:18:12.480 play it at 24 frames a second or as
00:18:14.880 close to 24 frames a second as the
00:18:17.240 computer can
00:18:18.559 calculate and the other stuff is just
00:18:20.760 standard stuff like uh simple settings
00:18:24.520 and sound settings but for the moment
00:18:26.720 you don't need to know the most
00:18:27.880 important things you need to know as a
00:18:29.679 beginner is just the basic settings here
00:18:32.960 and this clock because that's very
00:18:35.039 important also you can adjust your
00:18:38.760 timeline length over here so you just
00:18:41.600 drop in 150 and then you have 150 frames
00:18:45.600 over here is nothing too important you
00:18:49.880 can just sometimes if your animation is
00:18:54.360 continuously loading you can this a Able
00:18:58.720 Auto update and click on
00:19:01.559 manual so but that you'll learn once you
00:19:04.520 start to do different kinds of
00:19:07.840 simulations next thing we are going to
00:19:10.039 come up to is these settings over here
00:19:14.159 uh the first one is just the grid so you
00:19:16.159 can just switch the Grid on and off and
00:19:20.640 over here you have essentially it shows
00:19:23.320 you
00:19:24.400 what uh viewport you are in so at the
00:19:27.520 moment we are in inside of the
00:19:29.080 perspective
00:19:30.240 viewport and to change viewports all you
00:19:33.000 need to do is press 1 2 3 4 5 so if we
00:19:37.120 press one that keeps us inside of our
00:19:39.960 perspective viewport if we press two it
00:19:43.360 goes into the top view if we press three
00:19:46.240 front view four Right View and five the
00:19:49.799 UV view so one thing I just want to
00:19:52.760 point out is that if you go to say for
00:19:55.799 example number two and you click it
00:19:58.280 twice it's going to go to the opposite
00:20:00.440 view so if you press
00:20:02.520 two top bottom top bottom and that's
00:20:06.440 pressing the same key just pressing two
00:20:08.760 twice the same thing with number three
00:20:11.720 three so it's back front back front and
00:20:15.280 that's just pressing the same
00:20:17.760 key so that's how you change your
00:20:20.880 viewports and if you're not sure in
00:20:22.880 which viewport you are just come over
00:20:24.840 here and you'll know straight away
00:20:27.559 another thing that you can do is you can
00:20:29.679 work in a perspective viewport so if we
00:20:32.559 go and press one we are inside of our
00:20:35.240 perspective viewport I'm just going to
00:20:37.000 press G one more time to center it and
00:20:41.360 if we wanted to work in for example the
00:20:44.240 perspective View and a top view or a
00:20:47.520 side view left or right doesn't matter
00:20:50.360 what you can do is you can press control
00:20:52.760 2 and that's going to divide your
00:20:55.960 workspace into two separate viewports s
00:20:59.200 and inside of this one we have our
00:21:02.120 perspective and this one is our top so
00:21:05.200 when you inside of this view you can do
00:21:07.200 exactly the same thing you can press the
00:21:09.320 same buttons and that is going to set it
00:21:13.159 into the viewport of your choice so if
00:21:16.039 we press control 3 it's going to give us
00:21:18.320 three if it's four four and so on so
00:21:21.520 that's just something that's useful to
00:21:23.880 know we are going to just jump back to
00:21:26.080 our standard one view port for the
00:21:28.640 moment okay so another important thing
00:21:31.080 to know is how to create a
00:21:33.840 camera so so you just press control and
00:21:37.880 camera and that's going to create a
00:21:40.159 camera from the perspective viewport
00:21:44.000 okay one thing that you need to realize
00:21:46.520 so when the lock is on you'll be locked
00:21:49.360 inside of your camera and you can move
00:21:51.200 around inside of your
00:21:53.000 camera but if the lock is unlocked and
00:21:56.080 you pay attention to this uh little spot
00:21:58.840 over here you're going to be outside of
00:22:01.320 your camera you are essentially inside
00:22:03.600 of your perspective mode we can do the
00:22:06.880 same thing and create a light so if we
00:22:10.760 find an interesting spot we have our
00:22:12.919 camera over here and we want a backlight
00:22:16.200 that's lighting this geometry we can
00:22:18.960 press control and create a light okay so
00:22:22.240 that's how you create the camera and
00:22:24.039 lights and over here if you come up over
00:22:27.120 here you have just a few different
00:22:28.799 panels your render view this is where
00:22:30.840 you're actually going to be rendering
00:22:32.360 stuff if you render it inside of hudini
00:22:36.120 if not you'll be exporting it here by
00:22:39.039 via a limic file and you can render it
00:22:42.159 inside of any other
00:22:46.960 software so at the moment it doesn't
00:22:49.159 look really spectacular but I can assure
00:22:51.159 you that once we get into building
00:22:54.159 proper uh projects we will be creating
00:22:57.960 some really awesome stuff so here's just
00:23:00.600 composite motion effects View and
00:23:02.480 geometry spreadsheets for the moment you
00:23:04.480 don't need to worry about those things
00:23:07.240 uh we'll be learning them as we go along
00:23:10.520 one last thing is that when you're
00:23:12.080 inside of selection view once again by
00:23:14.360 pressing s and for example this you just
00:23:17.919 need to remember that inside of hini Y
00:23:20.880 is up because in for example 3ds Max Z
00:23:24.640 is up so it's just something to keep in
00:23:27.120 mind over here we have the overview just
00:23:31.480 press o to switch that off and we are
00:23:34.960 back over
00:23:36.480 here all right guys so that's more or
00:23:39.880 less Houdini interface in a nutshell
00:23:43.440 over here you just have a few uh
00:23:45.880 shortcuts
00:23:47.360 to simulations but you don't need to
00:23:50.480 know that for the
00:23:56.880 moment
00:24:00.159 all right guys so there's just one last
00:24:01.960 thing that we're going to go through and
00:24:04.120 this is this toolbar over here and it's
00:24:08.919 really quite simple it's just
00:24:11.240 essentially display options of how you
00:24:13.640 can display different things inside of
00:24:16.840 your
00:24:17.720 viewport and
00:24:20.200 it's you can just play around with it
00:24:22.799 going you don't even need to change
00:24:24.720 anything default settings are more than
00:24:27.399 enough but you can just explore what you
00:24:29.720 have over here one thing that I would um
00:24:34.039 like to talk about is just that you can
00:24:37.000 display the points you can display the
00:24:40.440 normals you can display Point Trails
00:24:43.399 this is when you have actually velocity
00:24:45.640 inside of your stuff and display Point
00:24:49.120 numbers and these kind of things but
00:24:51.960 this will kind of come into play once
00:24:54.159 we're doing different kinds of
00:24:56.080 simulations and that kind kind of stuff
00:24:58.919 so you can just kind of click on these
00:25:00.880 and just go through them but the as I
00:25:03.799 said the defaults are fine and I think
00:25:07.159 we've covered most of the things over
00:25:09.000 here you can just check out these
00:25:10.760 options but again those are not uh
00:25:14.640 critical um so feel free to go through
00:25:18.440 the interface like I showed you play
00:25:21.159 around drop a few notes in and I'll see
00:25:24.720 you in the next lesson thanks guys and
00:25:27.320 have a good good evening

----------------------------------------
Contents of YouTube-Transcript/Rendering with Karma in Houdini-Demystifying Render Settings.txt:
# tactiq.io free youtube transcript
# Rendering with Karma in Houdini (Demystifying Render Settings)
# https://www.youtube.com/watch/dgK5i0cex1Q

00:00:05.700 [Music]
00:00:10.800 hello everyone and welcome to rev away
00:00:13.280 my name is sabar chalasi and today we're
00:00:15.360 going to dive into karma and houdini 19
00:00:18.080 and cover in depth all the render
00:00:19.680 settings available and learn how to
00:00:21.439 efficiently tweak them to produce a fast
00:00:24.560 and high quality render so let's get
00:00:27.199 started so for me to be able to
00:00:29.199 communicate everything i know about
00:00:30.800 karma i've decided to create uh multiple
00:00:33.760 wedges many wedges testing every single
00:00:36.559 parameter available that has effect on
00:00:39.120 quality and render time uh obviously and
00:00:42.239 we're gonna go through every single one
00:00:44.079 of them that is driving the quality of
00:00:46.320 the
00:00:47.120 of the noise and the render time i'm
00:00:49.039 going to test it in a cohesive way and
00:00:51.120 then by looking at the final results
00:00:53.280 we're going to be able to make detection
00:00:54.879 and understand what each setting is
00:00:56.800 doing
00:00:57.600 to the render time and the quality now
00:01:01.280 i'm also going to explain how they work
00:01:03.440 and what they do in details and but this
00:01:06.159 workflow of wedging is something that we
00:01:08.640 always do with effects to learn about
00:01:10.960 something new or to learn how something
00:01:13.040 affects the sim the quality you just run
00:01:15.200 multiple wedges at different values and
00:01:17.520 let me show uh one quick example here
00:01:21.759 so this is a
00:01:23.600 one of the wedges
00:01:26.159 and in this case i'm
00:01:27.680 testing the first main control which is
00:01:29.920 the pixel sample so i have it go from 1
00:01:33.439 2 4 8 16 32 64 all the way to
00:01:39.119 2048
00:01:40.479 and i'm also i'm only rendering this
00:01:42.640 segment so instead of rendering the
00:01:44.640 whole image which i'm going to show on
00:01:46.479 in a second instead of rendering the
00:01:48.000 whole image
00:01:49.119 1920 by 1080 i just render a portion of
00:01:51.920 it and this will be enough for me to
00:01:53.759 judge
00:01:54.720 pretty much everything about the image i
00:01:56.320 don't need the remaining pixels and here
00:01:58.719 i've
00:01:59.680 gathered uh
00:02:01.680 all the data in nuke i put the stamps
00:02:04.799 uh on the on the images as well as the
00:02:07.439 render time and i will show this at the
00:02:10.160 end of the at the end of this video how
00:02:12.400 to stamp the data and i also
00:02:14.879 took a segment of the image and scaled
00:02:17.360 it up two and a half times just so that
00:02:19.280 we can see the noise pattern more
00:02:21.520 clearly so this is one example and by
00:02:24.080 just looking at this
00:02:25.599 we started a value of one
00:02:27.840 took six seconds
00:02:29.280 next it's gonna take 12 seconds i don't
00:02:32.239 think the render time matches here maybe
00:02:34.480 it's the same
00:02:35.760 and then as we go
00:02:37.440 you can see the quality is getting
00:02:38.879 better and better and the render time is
00:02:41.200 getting higher and higher and again i
00:02:43.120 want to point out that the
00:02:45.200 everything we're going to look at except
00:02:46.800 specific tests they are done at
00:02:49.280 different machines so
00:02:51.440 a single wedge is run on a separate
00:02:53.519 machine sometimes it has a 24 cores
00:02:56.879 sometimes it has 16 cores so the render
00:02:59.280 time per test is
00:03:01.519 run on the same
00:03:03.120 machine but between tests it can be run
00:03:05.920 on different ones except the final one
00:03:08.640 where
00:03:09.519 i need to wedge let's say 2k versus 4k
00:03:12.000 or 256 or three bounces i can specify
00:03:15.200 them to run on a specific machine so
00:03:17.360 this is one of the example and then
00:03:19.840 after learning after doing all these
00:03:22.560 wedges i can have a pretty good idea or
00:03:27.680 i can have a really good preset for what
00:03:30.159 the settings should be
00:03:31.680 and i know exactly that i'm not paying
00:03:33.920 anything else or i'm not doing any extra
00:03:36.799 calculations so this is one of the final
00:03:39.120 renders
00:03:40.159 obviously there's a few flickering but
00:03:42.640 looking at this coming from houdini with
00:03:44.799 three bounces and being able to render
00:03:47.440 this in hd i think it's pretty cool
00:03:49.599 there's also depth of field
00:03:51.599 happening here so there's lots of
00:03:53.360 potential in
00:03:54.959 in karma
00:03:56.159 all right so
00:03:57.599 that's that let's take a look at the
00:04:00.480 project in this list we will go over it
00:04:03.599 now you don't have to memorize it but
00:04:05.680 that's what we're going to be doing and
00:04:07.439 i'm going to go over each one of them
00:04:09.040 and take a look at
00:04:10.560 the settings so this is a project
00:04:13.439 and
00:04:14.720 this scene is from 3drender.com
00:04:19.440 it's called the natural museum
00:04:23.520 and this is how it looks like now i uh
00:04:27.440 took this team because it's a quite
00:04:29.199 complicated topic and it has
00:04:32.479 lots of opening so we're gonna have lots
00:04:35.199 of indirect illumination it's an
00:04:36.960 interior scene but it's not just a light
00:04:39.360 coming from a window it's coming from
00:04:41.680 many mini openings so for example all
00:04:43.840 this is open
00:04:45.919 and then there's other windows i took
00:04:48.080 off all the glass i just wanted to have
00:04:50.479 something with reflection and diffuse
00:04:53.840 so that's what we're going to be using
00:04:56.639 and then i have a camera
00:04:59.600 i think this is just repositioning
00:05:02.320 no i don't need this one
00:05:05.199 so this is the camera and then i have
00:05:06.960 two lights i believe this light is
00:05:10.400 just a constant and again
00:05:12.720 i
00:05:14.320 i've done many tests and we'll talk
00:05:15.840 about each one of them
00:05:17.520 i wanted to use the most simple
00:05:20.320 light rake available an hdr and a sun
00:05:22.880 light and if i can get those to render
00:05:25.840 in a clean way then pretty much all the
00:05:28.479 other
00:05:29.199 options are going to be able to
00:05:31.199 we're going to be able to render them
00:05:34.320 without any noise basically so i have
00:05:36.800 two uh two hdrs one with texture and one
00:05:40.240 without and the one that has texture i
00:05:42.560 clammed it to a value of ten instead of
00:05:45.120 zero to a hundred and i blurred the
00:05:47.360 pixel by two so it's not super sharp
00:05:50.000 because i need i don't need the direct
00:05:52.080 light to be coming from the hdr i just
00:05:54.080 need the diffuse illumination off of it
00:05:56.800 and then i have a sunlight
00:05:58.960 here
00:05:59.840 the material is very very simple i use
00:06:02.880 the material x
00:06:05.360 and i have two layers of reflection so
00:06:08.080 coat this is sharper and this is a
00:06:10.960 blurry reflection so two of them
00:06:13.520 and i have a diffuse with a diffuse
00:06:15.680 roughness of two
00:06:17.520 and that's all there is to the scene i
00:06:20.160 assigned all of that
00:06:22.479 and if i look through comma
00:06:24.720 this is what i have so far
00:06:27.039 and i'll be providing this along with
00:06:29.440 all the wedges and all the data needed
00:06:32.080 and let's start and look at the karma
00:06:35.520 settings okay so let's talk about the
00:06:38.639 settings and i'm going to create a karma
00:06:40.560 node just to start fresh
00:06:43.919 and
00:06:44.800 the camera is called that so i don't
00:06:46.560 need to change it in the final
00:06:47.840 resolution is 1920 by 1080
00:06:51.360 and what i'd like to do is i'd like to
00:06:54.400 change
00:06:55.599 this to go to mplay
00:06:57.520 so i can test it if i want to do
00:06:59.039 something live and also instead of
00:07:01.440 progressive i use bucket and i do
00:07:04.400 progressive pass
00:07:06.080 passes of one and i also remember that i
00:07:09.120 highly recommend watching the abstract
00:07:11.520 effects in houdini with karma video
00:07:14.080 before diving into this because that one
00:07:15.919 is like a it's more of an intro to karma
00:07:18.800 and solaris and this one is just going
00:07:20.720 to dive into karma settings so
00:07:22.319 definitely check that out i'll i'll have
00:07:24.160 it in the link but yeah
00:07:26.479 check that one before this one i don't
00:07:29.120 need the output checkout file
00:07:32.479 and i'm going to leave everything as the
00:07:34.240 default so the first
00:07:36.560 let's talk about the important parts the
00:07:39.440 important settings so we have pixel
00:07:41.039 sample that is the most important it's
00:07:42.880 going to drive the quality it has an
00:07:44.879 overall effect on the render time and
00:07:48.000 the quality of the noise and then we
00:07:49.680 have the min and max
00:07:52.160 and i
00:07:53.919 we're going to use variance because
00:07:55.280 that's
00:07:56.160 going to solve most of the noises most
00:07:59.360 of the noise types in specific scenarios
00:08:01.840 you may want to use
00:08:03.759 if you have a specific
00:08:06.000 type of gla of material that is across
00:08:08.240 the board and it's refractive for
00:08:10.479 example or reflective and refractive you
00:08:13.280 may want to use distributed and lower
00:08:15.199 the diffuse samples and only have
00:08:17.840 reflection samples and refraction higher
00:08:20.240 for me it's easier and better i think to
00:08:23.199 treat the noise as a uniform problem
00:08:25.360 especially with how karma is looking and
00:08:27.120 how it's functioning so we're going to
00:08:28.879 use variance so this is also going to
00:08:31.280 drive the uh the quality and this one
00:08:34.479 affects the pixel sample so each bucket
00:08:36.880 will be divided in more pixels this one
00:08:39.440 will affect how many rays get shot from
00:08:41.440 the shading point and the threshold is
00:08:44.240 driven by the noise level
00:08:46.720 so that's one setting that goes in
00:08:49.040 conjunction with this
00:08:50.959 the noise level here drives the min and
00:08:53.279 max so the finer the lower the value the
00:08:56.720 more
00:08:57.600 max pixel
00:08:58.880 max race we're gonna shoot if i set this
00:09:01.120 to three the image will never never
00:09:03.279 clear even even if i put this to
00:09:05.440 something really low we will never be
00:09:07.440 able to clean the image because there is
00:09:08.959 not enough rays we can also tell it to
00:09:11.360 shoot a minimum of three rays so if we
00:09:13.760 see lots of
00:09:15.519 uh
00:09:16.720 low noise
00:09:18.399 and not so much high frequency noise we
00:09:20.480 can start with three say i want the
00:09:22.480 array i know that the three is a minimum
00:09:25.040 value and set this to nine for example
00:09:27.600 and then lower the
00:09:29.040 noise threshold to zero zero six or test
00:09:31.120 the value and that will basically tell
00:09:33.600 karma to go between these two values
00:09:37.360 next is the light quality the light
00:09:39.279 quality here is a global multiplier it
00:09:41.839 depending on the scenario of the
00:09:43.440 lighting that you have you may want to
00:09:45.519 multiply the
00:09:47.040 light individual lights with higher
00:09:49.600 samples because
00:09:51.360 in this case if the noise was coming
00:09:53.040 from the sun for example which is not i
00:09:55.200 would go in and change the light the
00:09:57.279 sunlight which is this one go under
00:09:59.440 karma and increase the samples to 3 6 9
00:10:02.720 12 or something that gives me the result
00:10:05.360 i need
00:10:06.720 this one again is a global multiplier
00:10:11.279 yeah i didn't test the uniform method
00:10:13.839 but this is more memory efficient and
00:10:16.839 faster the this is for volume we don't
00:10:19.600 have any volumes at the moment then
00:10:21.600 we're going to test the diffuse limit
00:10:23.839 which is what i'm mainly interested in
00:10:25.760 in an interior scene you'd want to have
00:10:27.839 3 to 5 10 bounces we're going to see how
00:10:31.040 that affects the render time and quality
00:10:33.200 maybe
00:10:34.480 if we get a note to say increase the
00:10:37.040 bounces and after 10 after 10 bounces
00:10:39.839 there is no visual difference except the
00:10:42.160 render time maybe we shouldn't be
00:10:43.839 spending
00:10:44.800 putting this value higher than 10 if
00:10:47.519 five or six gives us the result that we
00:10:49.519 want we're going to see how that affects
00:10:53.200 the result then we're going to talk
00:10:54.880 about the russian roulette which will
00:10:57.120 affect the samples quite a bit
00:10:59.839 depth of field and mushroom blur we
00:11:01.440 don't need it we don't need this at the
00:11:03.200 moment
00:11:04.640 and then we're going to also talk about
00:11:06.480 this uh
00:11:08.399 information this control here the
00:11:10.399 off-screen quality
00:11:12.000 it only works it mainly works with
00:11:14.160 reflection with refractive and
00:11:16.240 reflection and displacement but i've
00:11:18.959 tried it in this case because i have
00:11:20.720 reflection and i have a lot of out
00:11:22.880 outside the frustum data i have a lot of
00:11:25.760 uh things that we don't see so maybe
00:11:28.000 this multiplier is affecting how noisy
00:11:30.640 the data is going to be outside
00:11:34.079 then we have
00:11:35.440 uh the noise which goes in conjunction
00:11:38.160 with the min and max and then we have
00:11:40.240 the
00:11:40.959 pixel article so this is again something
00:11:44.160 new and it's going to
00:11:46.800 if i set this to 128 it's going to use
00:11:49.279 the square root of this value to be the
00:11:51.279 minimum and this is also doing variance
00:11:53.920 on the pixel samples so
00:11:56.480 karma is deciding how much ways it
00:11:59.200 shoots
00:12:00.959 how many samples it puts per bucket
00:12:03.680 based on the noise level and the noise
00:12:06.399 level has been decided by the sea by the
00:12:08.800 beauty pass so depending on how your
00:12:10.880 image looks like it will use this
00:12:13.760 information to decide how many samples
00:12:16.399 it shoots
00:12:18.079 in some cases especially this one i
00:12:20.079 found out that it's better to have it
00:12:22.320 off but we're going to see that later we
00:12:24.160 don't know this yet we're going to see
00:12:25.839 how that affects the render time and the
00:12:28.399 quality and it also has a threshold so
00:12:30.800 we can say
00:12:32.240 it's 0 0
00:12:33.440 5 so it's very fine and we know that
00:12:35.920 it's going to be shooting 128 most cases
00:12:39.040 now i don't know
00:12:40.639 i haven't
00:12:42.079 talked to side effects yet but i don't
00:12:44.160 know if it's
00:12:45.760 increasing if it's starting at 11 and
00:12:48.480 then shooting
00:12:49.839 64 and then 96 and then 120 if it's
00:12:52.880 incredible incrementing i believe it is
00:12:55.120 because of the way
00:12:56.800 karma is progressing through the render
00:12:58.800 i believe it's doing that but it could
00:13:01.040 be
00:13:02.560 uh doing either 11 or 128. anyway we're
00:13:06.079 going to test that and see
00:13:07.839 you can also apply a
00:13:10.000 lookup table or a display view let's say
00:13:12.800 we're rendering in this color space but
00:13:14.560 the image i want the
00:13:17.519 this oracle algorithm to see the image
00:13:20.160 with 2.2 gamma so all these dark areas
00:13:24.000 i want them to be lifted so that i get
00:13:26.240 more samples they don't get ignored
00:13:28.079 because the variance will ignore darker
00:13:30.800 value it only puts
00:13:32.839 important
00:13:34.399 rays or care into the areas that are
00:13:36.560 visible which are brighter generally
00:13:39.440 so there's that and then what else do we
00:13:42.000 have
00:13:43.839 let me see
00:13:49.360 so the oracle we're going to test that
00:13:51.199 and then the number of gi bios is we're
00:13:53.199 going to see how the russian roulette
00:13:55.040 affects that because they are very
00:13:56.560 interconnected the off-screen and then
00:13:59.279 the denoise
00:14:01.680 uh noise options available and we're
00:14:04.079 gonna try some ideas using 4k 2k and
00:14:07.519 comparing 2k to 4k
00:14:10.240 and the render times i'm going to also
00:14:12.160 create a lighting that uses area lights
00:14:15.120 only because
00:14:16.639 in interior scenes it's best to have
00:14:18.800 area lights that are placed on the
00:14:20.399 windows to
00:14:22.399 make the render less noisy and more
00:14:24.639 efficient this is what you do with
00:14:26.720 these types of renders
00:14:28.399 having a dome light is really hard to
00:14:30.399 problem to solve and clean uh the noise
00:14:33.440 for if the if the light is coming from
00:14:36.160 everywhere so having it unified or
00:14:38.560 defined in certain areas
00:14:41.519 helps a lot so we're gonna do a test on
00:14:43.440 that and see how it affects the quality
00:14:45.920 we're going to take a look at a denoised
00:14:48.000 version of
00:14:49.600 a 4k denoised version a 2k and then a
00:14:52.240 quick test with gpu and then some
00:14:54.639 lighting techniques the upscale
00:14:56.240 technique which is linked to this as
00:14:57.839 well the denoise and the length shader
00:15:00.000 i'm going to show
00:15:01.199 all of that
00:15:02.320 all right that's that looks like another
00:15:04.399 overview but let's take a look at the
00:15:06.800 first parameter which is the uh
00:15:10.959 the pixel sample so
00:15:15.839 this is the first one
00:15:18.320 and we can see that starting with one we
00:15:20.959 have
00:15:21.839 six seconds
00:15:23.279 at two i believe it's 12 seconds or 9
00:15:25.920 seconds and then 4 11 seconds and as you
00:15:29.360 can as we go
00:15:32.000 we get
00:15:33.680 a more
00:15:35.279 basically cleaner and cleaner image
00:15:37.920 all the way to 1024 but
00:15:41.519 2048 and here's the other thing i wanted
00:15:44.560 to talk about i'm only rendering a
00:15:46.399 segment i don't want you guys to forget
00:15:48.160 this the render time here is only for a
00:15:51.040 third of the image and that is defined
00:15:53.680 here i'm just cropping the image output
00:15:56.560 under aspect ratio let us set this to
00:15:59.040 0.2
00:16:00.759 0.5
00:16:02.480 and 0.7 something like that and that
00:16:04.800 will just crop
00:16:06.320 the segment to be like this
00:16:08.720 now
00:16:09.680 one thing i noticed and i liked
00:16:12.480 is the change in this value versus the
00:16:15.279 render time so here we have four and
00:16:17.440 then it's eight and look at the render
00:16:19.440 time it's doubling
00:16:22.079 and again
00:16:23.759 from 22 to 44 and precisely
00:16:27.440 44
00:16:28.800 and then two times that
00:16:30.959 and then two times that
00:16:35.120 and it keeps going to increase
00:16:37.519 uh
00:16:38.399 following this scale and this is
00:16:40.480 something
00:16:41.519 really important because it's
00:16:43.360 predictable i can say at eight
00:16:46.720 pixel samples i get 22 minutes and then
00:16:50.240 for final quality it's going to be four
00:16:51.920 times that if i need 64 for example so
00:16:54.560 it's a very very uh
00:16:56.800 good thing to be able to predict the
00:16:58.399 render time and we're going to see other
00:17:00.320 benefits of this as well so it looks
00:17:02.639 like to me uh
00:17:04.480 that a pixel value of 64 maybe 128
00:17:08.160 produces a clean render but after that
00:17:10.559 the noise is not
00:17:13.039 it is getting better but maybe here and
00:17:15.439 here there's not so much difference 256
00:17:19.359 and
00:17:20.559 512 and then 1024
00:17:23.599 and 2048 so it looks like we're not
00:17:26.559 getting
00:17:27.919 bigger difference
00:17:30.400 with these values but the render time is
00:17:32.640 going so it's shooting
00:17:34.559 the rays it's doubling every time so the
00:17:37.120 rays are going up it's it's doing
00:17:39.039 something but the final result is not
00:17:40.880 changing so this is a great thing
00:17:43.440 because i know that 64 is going to be
00:17:45.440 enough maybe 128 and with this workflow
00:17:48.960 you definitely have to use the denoise
00:17:50.559 so 128 if we run it through the denoise
00:17:53.520 it's going to look
00:17:54.720 clean like i shown in the final round so
00:17:57.039 this is our first control and i'm hoping
00:18:00.799 that you guys learned something i'm
00:18:02.640 going to go over the remaining settings
00:18:05.200 a bit faster just so that we don't take
00:18:08.320 forever to finish this
00:18:10.559 okay so i've done another test and what
00:18:13.280 i've decided to do in this case is start
00:18:15.600 in the reverse and i've tweaked this
00:18:17.760 settings to give me a very clean render
00:18:20.799 and i've used the higher min and max i
00:18:22.640 believe it was not the same as the
00:18:24.320 previous example and just to clarify
00:18:27.520 these three points
00:18:29.440 are not a render
00:18:31.440 flicker it's not a firefly it's an
00:18:33.679 actual point in the render that came
00:18:35.760 with the mesh and i didn't delete it i
00:18:38.240 just thought at first it's it's a
00:18:40.240 firefly but it's not it's part of the
00:18:42.400 mesh so there's nothing
00:18:44.320 here that we have to fix with the
00:18:46.000 settings i just have to delete those
00:18:47.919 points
00:18:48.960 and what i've done in this test is i
00:18:51.200 cleaned the render as good as possible
00:18:53.200 and then i wanted to go backwards i
00:18:54.960 wanted to start lowering the samples
00:18:57.120 until i reached the point where it's
00:18:59.600 really bad and i have to go back it's
00:19:02.160 the same as the other one but this one i
00:19:04.640 started from a clean render versus
00:19:06.400 waiting it to go
00:19:07.919 uh to go up and then i work backwards i
00:19:10.960 also put the direct and indirect
00:19:13.679 passes here because it's very very
00:19:15.600 important
00:19:17.600 now in arnold and pr man and i believe
00:19:21.039 other engines as well
00:19:23.679 if your direct pass has noise the
00:19:26.080 indirect will always have noise and so
00:19:28.400 the first thing to do is to
00:19:30.880 turn off any indirect bounces and start
00:19:33.520 focusing on getting a clean as clean as
00:19:36.000 possible direct light because if this
00:19:38.080 pass let's say here has noise in the
00:19:41.280 shadow that noise then we have an
00:19:44.160 indirect bounce
00:19:45.679 the noise will simply explode it will
00:19:48.000 continue
00:19:49.039 spreading
00:19:50.320 in all the other passes and there's no
00:19:52.320 way to clean indirect illumination if
00:19:54.880 you don't have a clean path so i wanted
00:19:56.720 to show that here and it looks like at
00:19:58.720 this setting we have a nice clean direct
00:20:01.440 pass as well as a cleanish indirect
00:20:04.320 bands it's not perfect but it's good
00:20:06.880 and we are at 30 minutes render time and
00:20:09.840 then i started reducing this by
00:20:13.039 half like
00:20:14.320 instead of going the power of two i just
00:20:16.720 do the square root of that sorry
00:20:19.280 divided by two so 128
00:20:22.960 64 and i do feel that 64 may be
00:20:27.120 good enough for us to denoise it
00:20:30.240 and be able to use but 128 looks better
00:20:33.520 so i think at 10 minutes it's a good
00:20:36.320 render time and again this is only a
00:20:38.080 portion of the image
00:20:39.600 and you can see the direct is clean this
00:20:42.480 is clean
00:20:43.679 and then as we go lower and lower
00:20:47.039 you can see it's getting noisier and
00:20:48.400 noisier and in both of them the noise on
00:20:51.280 both passes the direct and indirect is
00:20:53.760 very very
00:20:54.799 linked
00:20:56.159 all right so the next option the next
00:20:58.400 setting we have is the
00:21:00.640 min and max so
00:21:03.120 the main ray let's take a look with on
00:21:06.240 the for the min first and what i do is i
00:21:08.799 lock all the other settings when i watch
00:21:10.960 a parameter when i change one i lock all
00:21:13.360 the other settings so in this case i
00:21:15.440 locked the samples at 64 i believe the
00:21:17.760 pixel sample and then the max ray at 10
00:21:20.880 and i only changed the min
00:21:23.280 value
00:21:24.320 and by doing so
00:21:26.000 i don't see
00:21:27.679 any change
00:21:29.440 happening
00:21:32.159 in the image and this was quite
00:21:33.840 surprising because i
00:21:35.919 i expected maybe there's a bug
00:21:38.720 in karma currently but i expected the
00:21:41.039 render to get cleaner and cleaner
00:21:43.360 based on how i think it's working
00:21:45.600 but it looks like even a value of min 10
00:21:48.799 is not
00:21:50.240 is not pushing
00:21:51.919 every point to use 10 and 10.
00:21:54.960 so
00:21:56.000 and i also use the 0.05
00:21:58.480 uh
00:21:59.200 noise
00:22:00.400 sorry i used a 0.01 noise threshold
00:22:03.280 which is the default so maybe that
00:22:05.120 affected it but it looks like i
00:22:07.440 find with one especially that the render
00:22:09.520 time is is the same so we'll just keep
00:22:11.679 it at one and that's what i've been
00:22:13.120 doing keep them in a way at one so let's
00:22:15.919 see how the max is going to affect the
00:22:18.720 the render time and the quality
00:22:22.559 so i increased the rate to three just to
00:22:26.080 have something higher than one to be
00:22:28.320 safe and then as we increase this as we
00:22:31.679 continue
00:22:32.960 increasing the value you can see the
00:22:34.400 render time is going up but it's not
00:22:37.200 going in a crazy way it's not exploding
00:22:41.600 going between
00:22:43.360 uh 12 to 16 the render time is not
00:22:46.640 exploding like two or three times so it
00:22:49.520 feels like this control is actually very
00:22:51.760 very safe even if we have a value of 12
00:22:56.000 1 and 12 the render time between
00:23:00.400 this and this
00:23:02.400 is not the difference the big of
00:23:04.720 different
00:23:05.600 if you look at how much
00:23:07.360 rays we're shooting
00:23:09.200 so
00:23:10.080 this is with 30 31 that's the maximum
00:23:14.000 but don't remember that we have the
00:23:16.159 pixel threshold so if let's say that
00:23:18.880 threshold is a threshold is met the ray
00:23:22.480 shooting would have stopped anyway even
00:23:25.120 if we have 60 because that threshold is
00:23:27.760 telling karma that's enough i'm
00:23:30.080 satisfied with the variance between the
00:23:31.840 pixels we're good stop shooting and uh
00:23:36.080 and it could be the case why this is so
00:23:38.880 safe and
00:23:40.000 it's not exploding so i think a value of
00:23:44.159 a value of nine maybe would be a good
00:23:47.679 point here and have more pixel samples
00:23:50.720 to clean this noise
00:23:52.240 but
00:23:53.120 the other thing that i realized when
00:23:55.039 doing this is that even if we go
00:23:57.440 to
00:23:58.159 all the way to 31 i still the render
00:24:01.200 time changed quite a bit but i still
00:24:03.520 feel that the image is not clean enough
00:24:05.520 i feel that the pixel samples are gonna
00:24:07.360 do most of the cleaning
00:24:10.080 so i uh what i did is i decided to use a
00:24:13.679 save value which is the default one to
00:24:16.000 nine or one to 7 and rely on the pixel
00:24:19.039 samples increasing the pixel samples and
00:24:21.679 playing with the thresholds to get the
00:24:23.440 render to clean
00:24:25.120 alright so then i did the other test
00:24:28.559 which is very similar
00:24:30.799 but it's reversed i know it it may not
00:24:33.520 make a lot of sense but it does
00:24:36.960 if you start with a clean and work
00:24:39.039 backwards you can see how
00:24:42.000 a very clean unoptimized
00:24:44.480 render
00:24:45.600 you can see how low you can go
00:24:49.200 and what kind of quality
00:24:51.120 you get the other one we're just relying
00:24:53.360 on that control to clean the image
00:24:55.760 whether it's going to clean it or not we
00:24:57.520 don't know but in this case i started
00:24:59.679 with a clean image so i've done probably
00:25:02.960 pixel samples is higher and i have all
00:25:04.880 the files for you guys to look at so you
00:25:06.559 can see the settings and i
00:25:09.200 included the av so i have the sun
00:25:11.279 separate and the sky dome it's not on
00:25:14.080 all the renders but it's when it's
00:25:15.840 available i put it here and this is just
00:25:18.159 auvs there's nothing here
00:25:20.000 and you can see with samples of 12 and
00:25:22.640 if we start going backwards
00:25:27.120 the difference between this and this
00:25:29.200 it's
00:25:30.159 not
00:25:31.200 that big in terms of noise but the
00:25:32.880 render time is quite different like from
00:25:35.120 now we're basically saving five minutes
00:25:38.159 so we can
00:25:40.000 we don't have to go all the way the
00:25:42.159 conclusion is we don't have to go all
00:25:44.159 the way to 12
00:25:45.679 to produce a clean render we can get
00:25:47.600 something clean maybe even seven is good
00:25:50.559 or eight
00:25:51.679 so that's why i do these reverse because
00:25:53.679 i start with a final result and then
00:25:55.440 they work backward
00:25:58.640 okay let's take a look at the next
00:26:01.039 important setting so we've done playing
00:26:03.360 with the min and max
00:26:06.080 and we've done some tests with the pixel
00:26:07.919 samples so the next thing that still
00:26:10.480 drives these two things is the noise
00:26:12.320 threshold and so what i've done is i
00:26:16.480 did the wedge obviously
00:26:18.400 and this is the min and max 3 to 12 i
00:26:21.440 just used a high range to give karma
00:26:24.080 enough room to go between these two
00:26:26.480 wrenches i didn't want to limit
00:26:28.799 limited and then 128 and the render time
00:26:32.480 at the moment is hun is eight minutes
00:26:34.720 and i lock these i don't change them
00:26:37.279 the noise threshold noise level is very
00:26:40.080 high zero one value is very very high
00:26:43.520 and the default is zero zero one but i
00:26:45.919 wanted to see how that affects pretty
00:26:48.559 much everything and as i start going
00:26:51.039 down
00:26:53.760 you can see between zero and zero one
00:26:57.679 let's see
00:26:59.600 sorry between zero and
00:27:01.760 zero one and zero zero two
00:27:04.640 there's no not so much difference
00:27:09.919 before we get here
00:27:13.440 all this is the same and the noise is
00:27:15.520 the same so
00:27:17.120 the threshold start this control is very
00:27:20.240 very fine so a value of
00:27:22.480 0 2
00:27:23.679 is very noisy you can see that already
00:27:25.919 then once we start going below that
00:27:28.640 again this is particular to the scene
00:27:30.480 once we start going below that you can
00:27:32.159 see the render time is exploding but
00:27:34.240 this is dangerous this is a dangerous
00:27:36.480 setting because
00:27:37.840 look
00:27:38.720 zero fifteen
00:27:40.559 and zero zero one and look at the render
00:27:42.640 time five minutes difference obviously
00:27:44.559 it's cleaner
00:27:46.399 but it's different and then beyond that
00:27:50.159 look now if we go
00:27:51.919 if we start going below the default
00:27:54.480 value in karma
00:27:56.240 you can see that the result is not
00:27:58.720 getting cleaner and cleaner and cleaner
00:28:00.799 it's not super super clean we are
00:28:04.799 grinding it like we're going super low
00:28:06.880 right now but all i see is the render
00:28:09.760 time exploding
00:28:12.159 so to me it feels like a value of zero
00:28:14.159 zero one maybe zero zero
00:28:16.880 six
00:28:18.799 tops
00:28:20.080 is a good range and again this value is
00:28:22.640 very uh very sensitive so
00:28:25.440 i think
00:28:26.880 one five
00:28:29.200 to zero six is a good range
00:28:32.880 but i was quite surprised that at this
00:28:34.880 level i'm not seeing any difference and
00:28:38.080 the reason for this
00:28:41.120 but me regardless of how low the value
00:28:43.600 is going to go
00:28:45.279 there's a max
00:28:46.559 there's a maximum of 12 samples that we
00:28:49.039 can shoot so even if karma is not
00:28:50.799 satisfied
00:28:52.080 with the variance it's not going to have
00:28:53.840 any race to shoot anymore so that's why
00:28:56.720 we're not seeing any difference and but
00:28:58.799 if i leave the room put this to 64 and
00:29:02.640 start going lower then we're gonna start
00:29:04.720 seeing the render time explode like
00:29:06.799 crazy so i think a zero one is a zero
00:29:10.159 zero one is a good start and maybe zero
00:29:12.960 zero one five is also good
00:29:15.840 but this was a very interesting test
00:29:18.480 to see
00:29:21.360 all right let's talk about the next
00:29:24.559 important section and which is the
00:29:27.679 article
00:29:28.799 the next important setting is the oracle
00:29:32.080 and this is something new in
00:29:34.480 karma and houdini 19 and what it does is
00:29:37.200 basically
00:29:39.279 switches the value of the pixel samples
00:29:41.360 based on the variance and this happens
00:29:43.600 when the render is still progressing
00:29:45.600 when the bucket when karma is still
00:29:47.600 refining the buckets uh over and over it
00:29:50.399 can play within min and max and so what
00:29:52.799 the way it works right now has this
00:29:54.559 expression that accomplished the square
00:29:56.559 root of this value so 128 the square
00:29:59.120 root of that is 11 and it's analyzing
00:30:02.080 the plane the beauty pass to determine
00:30:05.760 its noise threshold and it has a
00:30:09.039 variance value to tell it how sensitive
00:30:12.080 it's going to be similar to the noise
00:30:13.679 threshold so first of all the
00:30:16.720 i need to test
00:30:18.559 what this does
00:30:21.440 on and off first because we haven't we
00:30:23.600 can turn
00:30:24.720 it on and off so this is with it on the
00:30:28.320 render time is 11 57
00:30:30.960 and again i have direct and indirect
00:30:34.559 then
00:30:35.360 off it's 12
00:30:37.440 43
00:30:39.120 but it's it's a bit noisier not so much
00:30:42.240 so i'm not saving a lot
00:30:45.440 with this
00:30:46.480 and i think because uh
00:30:49.120 this scenario this lighting scenario is
00:30:52.159 quite complicated we have lots of
00:30:54.080 indirect lighting it's an interior scene
00:30:56.640 so
00:30:57.600 we don't have an area that is let's say
00:30:59.440 a flat wall with white texture on it
00:31:02.159 that is getting hit directly by the sun
00:31:04.640 and something else being shaded
00:31:07.120 so everything is being hit
00:31:10.159 by indirect rays
00:31:12.240 i think that's why the
00:31:13.840 uh the noises across the board so the
00:31:16.559 oracle algorithm is simply going to the
00:31:19.039 highest pixel samples
00:31:21.519 that's why the render
00:31:23.360 is not that different maybe this area is
00:31:26.720 treated as
00:31:28.240 clean like it doesn't have a lot of
00:31:29.600 samples because the brightness and
00:31:31.279 honestly it is the cleanest area but i
00:31:34.240 think it's because the direct light
00:31:36.320 is hitting here you can see it here is
00:31:37.840 cleaner as well
00:31:39.279 so
00:31:40.080 with it on and off not so much of a
00:31:42.320 difference but let's let's see i'm still
00:31:45.679 we need to test this more so what i've
00:31:47.440 done is i've tested the
00:31:50.000 threshold
00:31:52.240 and i kept the value between
00:31:56.080 11 and 128
00:31:58.720 and i decided to set the min and max to
00:32:01.360 four and four both of them so it's
00:32:03.600 locked i didn't want any variance uh
00:32:06.080 other variants i do think
00:32:08.240 it uh it's doing something that karma is
00:32:10.880 still deciding how many ways it shoots
00:32:12.799 because that my intention is to lock it
00:32:15.200 and only have the variance from the
00:32:16.880 pixel samples
00:32:18.240 so i started with a value of zero zero
00:32:20.480 two
00:32:21.519 and then i'm going to walk
00:32:23.120 uh
00:32:24.080 yeah work all the way down
00:32:26.720 to 0.001
00:32:29.840 and at this point
00:32:32.480 if i go all the way down first of all
00:32:34.720 looking at the quality not so much
00:32:36.799 difference
00:32:38.080 i don't see
00:32:39.360 let me show the
00:32:41.200 frame so i don't see a big difference in
00:32:43.840 the noise looking at specifically this
00:32:46.399 zoomed in section
00:32:48.960 nothing and then if i go to zero zero
00:32:51.039 one it's almost the same render time
00:32:54.559 as if
00:32:55.679 it's off
00:32:59.760 so here
00:33:01.039 well it's not the same this one has a
00:33:03.200 higher setting but i think
00:33:06.559 at this ratio it's almost as is as if
00:33:09.279 it's off so it it's only shooting
00:33:11.919 high
00:33:13.840 128
00:33:16.159 so i'm not sure
00:33:17.919 how
00:33:18.720 uh to use this control yet and where
00:33:21.679 it's going to be useful again this is a
00:33:23.600 very complex lighting scenario and
00:33:25.039 that's why i picked it because it will
00:33:27.360 push the render to its limit
00:33:29.760 but this
00:33:30.799 oracle i think the idea is very useful
00:33:33.519 but maybe not in this specific scenario
00:33:36.399 where we have lots of indirect if you
00:33:38.480 had a car for example in an exterior
00:33:40.799 scene and you have
00:33:42.960 you know everything is being hit
00:33:45.440 from the sun or
00:33:47.760 it has uniform textures or uniform
00:33:50.000 colors maybe this would be helpful like
00:33:52.159 you don't need lots of ways there and it
00:33:54.080 can skip tons of areas
00:33:56.320 quickly and then when it comes to the
00:33:57.919 shadow areas maybe you need more samples
00:34:00.159 there but again in this case that's what
00:34:02.399 happens with the oracle we can simply
00:34:04.399 have it off and just be safe that it's
00:34:06.720 not going to
00:34:07.679 make any cause any issues
00:34:10.800 all right so the next heading that we're
00:34:12.480 going to take a look at is the light
00:34:14.239 quality talk about it in this
00:34:17.119 video
00:34:18.320 so let me open it in rv and
00:34:22.399 digital
00:34:23.599 and
00:34:25.119 i set it i started with a value of zero
00:34:27.679 and you can see we have no indirect
00:34:30.399 illumination happening once i set it to
00:34:32.879 one it's the render is back to life so
00:34:35.760 the minimum value is one you can see the
00:34:37.679 render time is not changing really um
00:34:41.199 here and then i started increasing it
00:34:43.440 and i have the sun in the sky dome
00:34:46.960 and most renders they have a much easier
00:34:49.679 time solving noise on direct lights like
00:34:52.560 a point like area light uh
00:34:55.359 disk light in sun distant light
00:34:58.400 versus a sky dome sky dome is always
00:35:00.960 harder to solve the noise for especially
00:35:03.119 if it has a texture so let's keep going
00:35:06.160 and
00:35:07.760 i have a zoomed in section here and as
00:35:10.320 you can see even going all the way to 15
00:35:14.880 does not change anything other than the
00:35:17.119 render time
00:35:18.320 i don't see
00:35:20.480 this changing i think it's just the seed
00:35:23.920 changing
00:35:25.040 so if you if i pick between the first
00:35:27.040 and last i don't see a huge difference
00:35:29.280 other than the render time so i think
00:35:31.920 keeping it at the value of one and
00:35:33.839 trying to solve the noise with other
00:35:36.000 settings like the pixel samples and the
00:35:38.079 noise threshold is a safer route to go
00:35:41.200 through
00:35:42.320 there's also a very very important uh
00:35:46.079 parameter that may affect all our
00:35:49.040 testing that i'm going to talk about
00:35:50.400 later but more in the indirect lights so
00:35:53.040 it could be that all of this is coming
00:35:54.720 from the indirect light
00:35:56.480 and our direct light has always been
00:35:58.400 clean anyway
00:35:59.839 so yeah the light quality
00:36:01.839 not something to worry about so much but
00:36:04.800 we can always play with that a value
00:36:06.800 between one and three let's see
00:36:09.359 yeah one and three
00:36:11.520 is a safe value because the render time
00:36:13.200 is not changing and if we see
00:36:14.800 improvement on based on this control we
00:36:17.520 can uh
00:36:18.800 proceed based on that so just to go back
00:36:21.520 the very the oracle is here turning it
00:36:23.760 off by setting it to uniform and then
00:36:26.480 the light quality is this one
00:36:28.880 so that's the
00:36:30.400 setting we just talked about next we're
00:36:32.560 going to talk about the indirect guide
00:36:34.640 one of the new features of karma in
00:36:36.880 houdini 19 is this thing called indirect
00:36:39.280 guide and in a lot of in
00:36:41.839 interior scenes you would have sources
00:36:43.920 that are not visible to camera they are
00:36:45.839 far away you could have a very
00:36:48.240 long haul and you're at the end of it
00:36:50.320 and the light needs to bounces to reach
00:36:52.320 the final camera and in that case
00:36:54.400 it's
00:36:55.200 it would be very useful to tell the
00:36:57.280 shading point where to place the samples
00:36:59.440 where the light may be coming from to
00:37:01.440 guide it to direct it and this is
00:37:03.599 something that redshift has
00:37:06.560 v-ray has and i believe other engines as
00:37:08.800 well it's like a light cache pass that
00:37:11.520 runs before the render
00:37:14.320 and
00:37:15.359 karma can use that to determine
00:37:19.119 what is the most important place to
00:37:21.200 place the raise at like guided basically
00:37:24.960 and so that option can be found here
00:37:27.520 under
00:37:29.200 rendering sorry under advanced sampling
00:37:32.320 enable indirect guiding you can tell how
00:37:34.800 many passes
00:37:36.560 you can use and it will run as a
00:37:38.480 pre-pass before the render you'll have
00:37:40.320 its own progress you can see it in in
00:37:42.560 play
00:37:43.760 happening and then the render will start
00:37:45.920 so what i've done is i started with a
00:37:47.599 value of two
00:37:48.880 and then i started increasing it
00:37:51.440 all the way to 256
00:37:54.960 and
00:37:56.000 what i i first of all when it's at value
00:37:59.200 of 2 i did not see a big difference in
00:38:02.480 the quality so that's my main thing is
00:38:04.800 quality regardless of the render time
00:38:07.359 and so even a value of 512
00:38:10.240 the quality has not changed so this
00:38:12.320 indirect guide may not be ideal for
00:38:15.920 this type of scenario maybe it's best to
00:38:18.560 have like an interior scene with a
00:38:20.480 single
00:38:21.599 light source like a specific window open
00:38:24.160 this one is an interior but also
00:38:26.240 exterior like it's very open
00:38:28.960 that also has lots of windows so it's
00:38:30.800 very complicated maybe it's not ideal
00:38:33.040 for this but what we can see is
00:38:35.520 the samples can have a big effect on
00:38:38.240 render time so those samples it's not a
00:38:41.520 karma is not playing it's doing proper
00:38:43.119 calculation and it's expensive so
00:38:44.960 whatever we put there we have to be very
00:38:46.880 careful
00:38:48.160 as to how much we put and whether it's
00:38:50.079 affecting the
00:38:51.440 the quality or not
00:38:54.880 yeah so that's the uh one of the new
00:38:57.520 things in
00:38:58.720 the in karma i didn't use it in the
00:39:01.280 final render because as you guys see it
00:39:03.440 doesn't affect the font quality
00:39:05.760 so let's take a look at another setting
00:39:09.599 okay
00:39:10.400 the next important
00:39:12.480 control for me is the depth of
00:39:16.000 the indirect illumination
00:39:17.839 or the diffuse limit currently it's set
00:39:20.079 to one most test is the most of the
00:39:22.560 tests that we looked at have either
00:39:24.720 value of one or three
00:39:26.720 and i what i've decided to do is start
00:39:28.960 with zero see how much render time it's
00:39:31.680 gonna take and i kept all the other
00:39:34.079 settings locked i believe i have 64 on
00:39:36.480 the pixel samples or 32 and
00:39:39.520 one and six on the min and max but
00:39:42.079 that's not very important what i'm
00:39:43.599 looking at here is really the quality of
00:39:46.079 the image not the noise but the actual
00:39:48.480 lighting and likely you have both of
00:39:51.040 these
00:39:53.520 both of these
00:39:55.520 auvs so we can see how many
00:39:58.880 uh how the bounces are affecting each
00:40:00.560 light and
00:40:02.079 i wish there was a control which maybe
00:40:04.400 it does i haven't seen it yet
00:40:06.480 to limit the number of pounds bounces
00:40:09.280 per light this is something that arnold
00:40:10.960 has that you can say this light only
00:40:13.839 bounces two times after that don't
00:40:15.839 consider it and looking at this result
00:40:18.800 if i go all the way to 10
00:40:21.839 and going back especially looking at the
00:40:24.640 sky dome
00:40:26.480 a value of two bounces maybe three
00:40:29.200 is enough for this
00:40:31.200 that's it
00:40:32.240 after that the result is not changing
00:40:34.240 them as it's basically a gain or you're
00:40:37.040 lifting the gamma
00:40:38.400 but on the light on the sunlight the
00:40:41.359 effect is much bigger you can see if i
00:40:44.000 go back here you can see this area
00:40:47.760 and all this is getting properly
00:40:50.319 illuminated by all these indirect
00:40:52.079 bounces so to me i want to control
00:40:54.960 i want to turn off indirect bounces on
00:40:57.440 the skydome because i know it's slow i
00:40:59.680 don't need it but i want the aerial the
00:41:01.839 sunlight to bounce as many times
00:41:04.240 so the only way to do it right now is to
00:41:06.000 do two separate renders
00:41:08.079 one with uh gi bounces one with the
00:41:11.760 sky dome and set bounces to one or zero
00:41:15.040 and then a separate render with just the
00:41:17.440 sunlight
00:41:18.640 but maybe there is a setting too limited
00:41:21.119 on the aerial light
00:41:22.800 let me take a look
00:41:26.480 so here we have sampling quality
00:41:28.720 we have force uniform
00:41:31.200 activation radius
00:41:33.040 yeah there's nothing that says
00:41:40.079 that says bounces
00:41:42.400 and this i'm not so sure it contains one
00:41:45.920 either so yeah maybe i'll do some more
00:41:48.640 research but it would be great to have
00:41:50.319 that now
00:41:51.440 the important thing we want to look at
00:41:52.960 is obviously the quality and looking at
00:41:55.760 this
00:41:56.480 maybe after five bounces
00:42:00.000 we are not seeing any difference like
00:42:02.720 here
00:42:03.520 after this
00:42:04.800 maybe this
00:42:06.079 it feels like almost a lift like you
00:42:08.400 would just do it in comp but we're
00:42:10.480 paying a huge overhead for this uh like
00:42:14.160 if you go 29 passes off obviously you
00:42:16.240 don't need it
00:42:17.440 but look from three minutes we can end
00:42:20.640 up with 12 minutes
00:42:23.200 uh but i think for this even this entire
00:42:26.000 scene which is quite complicated i think
00:42:28.880 three to four bounces is enough and the
00:42:31.119 render time is still reasonable again i
00:42:33.359 use the lower setting setting to
00:42:37.359 to be able to render this quickly
00:42:39.680 but i think
00:42:41.280 three
00:42:42.319 maybe five tops if the render time is
00:42:44.400 not crazy is enough for anterior scenes
00:42:47.280 for this type of scenario other cases
00:42:50.000 may um
00:42:51.760 may require more
00:42:53.280 so
00:42:54.000 the next important control that we need
00:42:56.160 to talk about is called the russian
00:42:58.319 roulette and this is a very
00:43:00.960 tricky and dangerous control because
00:43:04.560 i'll try to explain it
00:43:08.640 so
00:43:09.920 so see the russian roulette what it's
00:43:12.000 doing is it's set to value of two in
00:43:15.920 uh in many of my tests i've set this to
00:43:19.119 a value of hundred
00:43:21.440 now why is that well
00:43:23.599 the way the russian roulette works let's
00:43:25.920 say i have a value of 128
00:43:29.680 on
00:43:30.560 the samples or a value of 128 on first
00:43:34.160 balance
00:43:35.520 the second bounce will still have a
00:43:37.520 value of
00:43:38.960 128
00:43:41.599 but then
00:43:42.640 if this set to 2 the russian roulette is
00:43:45.520 going to kick in
00:43:46.720 and what it's going to start doing is
00:43:48.560 it's going to start chopping off the
00:43:50.319 samples
00:43:51.359 every single bounce so the third bounce
00:43:54.079 is going to have maybe 90
00:43:57.040 third bounce the fourth is going to have
00:43:59.839 maybe 60
00:44:01.280 and it's going to keep reducing this
00:44:03.520 number
00:44:04.640 all the way to
00:44:06.319 nothing
00:44:07.599 and this is dangerous because if i
00:44:10.400 increase my
00:44:12.480 value here to 10
00:44:14.480 and this russian roulette is kicking in
00:44:16.640 on the second bounce then doesn't matter
00:44:18.720 how many many samples they should they
00:44:20.720 are getting destroyed by the russian
00:44:23.119 roulette
00:44:24.160 now
00:44:25.119 it's not destroying unimportant bits
00:44:27.520 it's only destroying things that are not
00:44:30.160 necessary for the quality of the second
00:44:32.160 and third bounces
00:44:33.599 but to be able to do this evaluation
00:44:36.880 without anything interfering
00:44:39.359 that russian roulette needs to be off
00:44:42.400 so that's the next thing i have
00:44:45.440 i will show you a test
00:44:49.040 and uh right now it's set to seven
00:44:52.800 and i'm gonna go down
00:44:54.960 so seven means it hasn't kicked in yet
00:44:57.680 and look i have min and max one nine and
00:44:59.920 i have six bounces of gi and i put
00:45:03.280 on purpose put the russian root light to
00:45:05.200 7 so i didn't want it to kick in
00:45:07.920 yet
00:45:09.040 and look at the render times 45
00:45:11.440 and then if i go to the next frame
00:45:14.000 it's 43. so the russian roulette i
00:45:16.640 believe has not it it has kicked in
00:45:19.359 because the render time has changed but
00:45:21.440 we need to be very careful with the
00:45:22.800 quality now
00:45:23.920 five the russian roulette has
00:45:26.319 uh worked on two bounces
00:45:28.720 it's gonna work on four uh yeah three
00:45:31.599 two three bounces and then four bounces
00:45:34.640 and now it's starting from the second
00:45:36.400 bounce and you can see the results
00:45:37.680 getting noisier and noisier we haven't
00:45:39.839 changed the samples yet but the render
00:45:42.160 time is changing
00:45:43.760 so the render time is changing quite a
00:45:45.599 bit
00:45:47.200 and i think on an interior scene it's
00:45:49.520 very very important to set to use the
00:45:51.520 russian roulette because after the
00:45:53.200 second bounce the rays are not that
00:45:55.200 important to the image and maybe here
00:45:58.160 maybe a value of three is good
00:46:01.040 but
00:46:02.000 look if we have it at 45
00:46:04.240 again the render time is very high and
00:46:06.400 we haven't changed any of the bounces
00:46:08.240 yet so being able to render this
00:46:12.560 at uh
00:46:14.960 in 20 minutes versus uh 45 minutes is
00:46:18.319 very important yes we're reducing the
00:46:20.079 quality but yeah so the other thing is
00:46:23.520 if you set it to zero the russian
00:46:25.200 roulette will kick in very very quickly
00:46:27.520 which means it will produce more noise
00:46:29.599 and will start chopping off rays and
00:46:32.160 even if you increase the samples you
00:46:33.680 will not
00:46:34.960 that will not be reflected because it
00:46:36.560 will be working against you so it's best
00:46:38.960 to have it start at a value of two or
00:46:40.800 three so that's what the russian mullet
00:46:42.960 does
00:46:43.839 most settings most wedges i did i have
00:46:46.240 had this at a higher value so i can
00:46:48.480 evaluate pixel samples and the min and
00:46:51.040 max and other things without the
00:46:52.720 interference of the russian roulette
00:46:55.359 killing my samples hope you guys find
00:46:57.680 this useful let's continue to learn some
00:46:59.680 more stuff
00:47:00.960 so i have been able to produce clean
00:47:03.599 renders
00:47:05.040 out of karma we've noticed that
00:47:07.599 even increasing the settings to
00:47:09.119 something really high we are not able to
00:47:11.520 100
00:47:12.480 clean
00:47:13.440 the noise and because the way
00:47:16.400 karma functions the type of noise we're
00:47:18.480 getting is
00:47:20.960 fits perfectly into a denoise algorithm
00:47:23.520 and they ship with the optics denoise as
00:47:26.880 well as the intel ai based units which
00:47:29.839 is amazing so the newest version of the
00:47:32.000 intel ii is actually
00:47:34.400 really really cool and quite impressive
00:47:36.240 to be honest and we're gonna try to get
00:47:39.040 the result to look as good as possible
00:47:41.200 the type of noise that we need to be
00:47:42.880 worried about is the fireflies which is
00:47:45.200 something non-uniform something that
00:47:46.800 happens in a specific region and that's
00:47:48.960 a little bit worrisome and can be
00:47:51.200 problematic to solve
00:47:53.599 in post
00:47:54.800 so what i've done is i have uh
00:47:58.160 did a render with
00:48:00.720 only updating the pixel samples so after
00:48:02.720 we looked at everything i think we can
00:48:05.839 safely assume that using a min and max
00:48:09.040 value of one and eight one two nine is a
00:48:12.160 good
00:48:13.119 starting point a good base to give us
00:48:15.839 nice clean renders and then the second
00:48:18.079 control is the pixel samples now we can
00:48:21.200 play with the threshold but we can also
00:48:24.000 assume that the 0.01 the default value
00:48:27.200 should be able to give us a clean render
00:48:29.520 as long as there is enough pixel samples
00:48:32.559 so what i've done in this test is i went
00:48:35.040 ahead and
00:48:36.720 rendered with pixel
00:48:38.880 samples increasing from 2 4 8
00:48:42.400 16 32 64. and you can see the render
00:48:45.520 time is going higher and higher and
00:48:48.319 towards the end it's
00:48:50.079 really it's almost clean and this is the
00:48:52.079 entire frame by the way i'm not working
00:48:54.000 on a segment anymore
00:48:56.079 i was able to get this super clean
00:48:58.559 render
00:48:59.599 i'm going to have it on the side now i
00:49:01.280 talked in the other video how to use the
00:49:03.200 noise ai and i'm going to show it
00:49:05.440 briefly so basically once you render you
00:49:08.000 have to have
00:49:09.599 normals and albedo
00:49:12.319 so these two passes these two auvs are
00:49:14.880 important and again this talked about in
00:49:16.800 the previous video so you can go into
00:49:19.200 the render settings and export the
00:49:21.599 albedo as well as the
00:49:24.400 n
00:49:25.839 so n smooth normals and if you go to the
00:49:28.880 image load in your
00:49:30.880 xr render
00:49:32.880 so let's load in
00:49:35.040 one of the renders
00:49:41.440 using file node
00:49:47.200 and let's switch to a comp
00:49:51.359 queue
00:49:54.640 so this is the render and i'm going to
00:49:56.400 use a denoise ai node
00:50:00.480 and obviously i have n and albedo i'm
00:50:03.119 going to drag and drop this
00:50:05.920 and boom
00:50:07.599 we have a super clean render
00:50:11.599 this is the input
00:50:13.040 and this is the output and this is how
00:50:16.000 i think
00:50:16.960 side effects expected expects us to use
00:50:20.720 karma i don't think the goal is to
00:50:23.359 produce a super clean
00:50:25.040 render out of the box
00:50:26.960 so the cool thing if you want to you
00:50:28.559 know it's avs as well which works nicely
00:50:31.599 you just type in a start here and it
00:50:33.520 will go and denotes all of them in the
00:50:35.599 dnos process is quite fast you can see
00:50:37.680 it's already done it takes a couple of
00:50:39.520 seconds per frame
00:50:41.200 all right so
00:50:43.680 what i've done is this
00:50:46.720 let me check
00:50:48.720 yeah so
00:50:50.160 i've rendered this with pixel samples
00:50:53.520 and what i did is i at the same time i
00:50:57.200 run a denoise process on them so this is
00:51:00.559 my render and i'm going to open the
00:51:02.720 denoised version
00:51:04.319 just a second
00:51:06.319 that would be denoise 2k stills
00:51:10.720 so this is the denoised version
00:51:13.280 and i believe yeah so i put
00:51:16.400 the same setting and but this result is
00:51:19.280 the denoise result
00:51:21.040 so this is matching to this
00:51:24.400 to this one
00:51:25.760 okay
00:51:27.520 so after denoised this is what you get
00:51:30.160 from that low res settings and
00:51:33.119 again this is the input and this is
00:51:35.440 going to be the output so here i left
00:51:37.599 everything but there's no preview it
00:51:39.599 should probably have done that so the
00:51:41.680 first with only two samples you can see
00:51:44.400 we're not able to just reconstruct the
00:51:46.880 image and this is going to flicker
00:51:49.040 a lot when we start moving the camera so
00:51:51.040 that's another equation we're gonna talk
00:51:53.200 about
00:51:54.079 so
00:51:55.599 uh then four pixels
00:51:58.000 eight pixels uh yeah eight pixel samples
00:52:02.000 32 and 64. and i think at 64 we're
00:52:06.240 producing something really clean at 128
00:52:09.599 it's it's perfectly good there's no
00:52:12.640 no issues anymore and again if we
00:52:14.880 compare it side by
00:52:16.839 side this is the original
00:52:22.000 and
00:52:22.880 this is the cleaned up version so the
00:52:25.520 reason i did this test this way is to
00:52:27.520 see how low i can actually render the
00:52:31.119 the the image and still be able to
00:52:35.440 get a good result now what this one does
00:52:38.720 not have textures and with or with the
00:52:41.040 textures because of the way the albedo
00:52:42.960 works it's not going to affect
00:52:45.280 the textures you we will always get
00:52:47.520 clean textures
00:52:48.960 now
00:52:50.000 what we can lose is the detail obviously
00:52:51.920 you can see how it's smudging all this
00:52:54.000 geometry details here and as we increase
00:52:56.880 the resolution it's getting sharper and
00:52:58.400 sharper
00:53:00.240 and so i think 128 for final would
00:53:03.599 definitely be enough for this uh for
00:53:06.800 this
00:53:07.920 type of scene what did you notice
00:53:10.720 okay so
00:53:12.960 one more thing one more idea
00:53:16.000 is
00:53:17.920 i that i know
00:53:19.359 pixar and other studios are doing is to
00:53:23.760 render instead of hd
00:53:26.400 you render at a higher resolution you
00:53:28.480 render at 4k
00:53:30.160 you do the d noise at 4k
00:53:32.720 but then scale it down
00:53:35.040 okay
00:53:36.000 so because i need i'm spending let's say
00:53:39.599 i'm producing an hd image in 15 minutes
00:53:45.040 okay
00:53:47.119 so let's say i have 1920 by 1080
00:53:50.319 in 15 minutes
00:53:53.920 with
00:53:55.599 six it was 64 samples
00:53:59.040 i will answer this to you guys so 2k is
00:54:02.319 going to be 3
00:54:04.319 8 40
00:54:06.079 multiplied by twin
00:54:08.079 two one six zero
00:54:10.480 and if we want to get
00:54:13.119 the same render in 15 minutes
00:54:16.160 we need to divide 64 by four so we need
00:54:18.800 to use 16 samples
00:54:21.280 this
00:54:22.160 and this will be exactly the same render
00:54:24.960 time and this is something amazing in
00:54:26.880 karma and so what we're doing now is
00:54:29.359 we're scaling the render we're rendering
00:54:31.839 4k
00:54:33.200 denoising that and then scaling it
00:54:35.920 with the same render time the only
00:54:38.000 overhead is going to be
00:54:39.599 in the
00:54:40.720 disk space the because the 4k is going
00:54:43.119 to be
00:54:44.000 heavier and i have proof of that
00:54:47.040 so here
00:54:49.200 i have a 2k render the default that we
00:54:52.559 did with eight samples this is the same
00:54:55.680 and run through the denoise this is the
00:54:58.240 same render
00:54:59.839 4k
00:55:01.280 with two samples and look at the render
00:55:03.280 time
00:55:05.280 it's identical
00:55:06.960 impressive
00:55:08.079 but with the 4k if i now zoom in
00:55:11.920 it's going to be cleaner
00:55:13.680 or it's going to have more details than
00:55:15.760 this but again i'm i'm
00:55:18.160 rendering the same render time so if i
00:55:20.160 go to 16
00:55:21.839 and i align them so that the render time
00:55:23.760 always matches
00:55:25.200 if i start going through you can see the
00:55:26.799 render time is the same this
00:55:30.000 but for hd to produce a clean result we
00:55:32.240 need to use 64 on 4k we need to use 16
00:55:36.079 but this is where the difference is
00:55:37.599 going to happen is when you start
00:55:39.359 producing when you start rendering with
00:55:41.520 16 look at this area for example
00:55:45.760 and look at this
00:55:47.359 much sharper
00:55:48.799 day and night so we're able with the
00:55:51.359 same render time
00:55:53.280 to produce a much cleaner image that
00:55:55.200 would have taken much longer
00:55:58.480 to get and i don't have unfortunately i
00:56:00.880 mean i do have it
00:56:02.400 one second so i want to show the full
00:56:05.040 render
00:56:06.319 because this area where the
00:56:09.520 where the skeleton is
00:56:11.200 is
00:56:12.160 huge different let me go through
00:56:14.839 this and this is with
00:56:17.760 64 samples so that's two hours let's
00:56:20.240 look at this 15 minutes so this
00:56:23.119 versus
00:56:24.720 the denoise result
00:56:27.839 and let me open that so denoise 2k
00:56:34.319 versus this
00:56:35.680 so here this is
00:56:37.440 a 2k denoised
00:56:40.160 and same render time i'll pick the same
00:56:42.480 render time make sure that we're not
00:56:46.240 cheating so 64 samples 15 minutes
00:56:49.680 this is what we get
00:56:51.200 if we do this 4k technique
00:56:54.720 look how sharp right it is and this is
00:56:56.559 same render time
00:56:58.720 okay
00:56:59.599 so 15 minutes
00:57:02.400 maybe it's a bit complicated i mean let
00:57:04.720 me know if you guys find this
00:57:06.400 complicated i'll try to clarify it a bit
00:57:08.720 more but yeah you render 2x the
00:57:10.960 resolution ud noise
00:57:14.079 but we didn't spend more time because we
00:57:16.400 lowered the samples and then when you
00:57:18.559 downres it you get more resolution more
00:57:21.359 details and this is it's going to hold a
00:57:23.920 lot more details everywhere
00:57:27.040 all right so
00:57:28.640 that's really it um it's a workflow it
00:57:32.319 still needs to be explored to render 4k
00:57:34.880 with the same render but we're going to
00:57:36.880 take a look at rendering a sequence and
00:57:39.200 see how that is going to look like so
00:57:41.920 that all this is great on still frame
00:57:44.960 well we need to see it moving so that's
00:57:46.720 another factor that we need to take into
00:57:48.799 consideration we're almost done looking
00:57:51.040 at all the parameters that have an
00:57:52.720 effect on the quality
00:57:54.559 in the render settings the last option i
00:57:56.559 want to take a look at
00:57:58.480 is the
00:58:00.160 off screen control which controls the
00:58:03.040 dicing of the geometry outside the
00:58:05.440 camera so basically anything that we
00:58:07.599 don't see that is being reflected
00:58:10.240 or
00:58:11.040 used in the indirect illumination would
00:58:13.200 have would be affected by this
00:58:15.599 multiplier and this generally applies to
00:58:18.960 reflection refraction and displacement
00:58:22.480 and in this case we don't have a lot of
00:58:24.160 those things i mean we don't have we
00:58:25.920 have reflection we don't have a lot of
00:58:27.760 displacement but anyway i wanted to uh
00:58:30.880 make sure that we test it out i think in
00:58:33.599 the cases uh like ocean surfaces with
00:58:36.960 ships they where you have something
00:58:38.960 visible something not visible definitely
00:58:41.440 we're gonna see
00:58:42.640 more of this uh affecting the render
00:58:45.040 time and not so much supply so
00:58:48.000 it's basically reducing the dicing
00:58:50.640 of data that we don't see so i started
00:58:52.960 off with a value of one
00:58:55.520 and the render time
00:58:57.119 again min and max one and eight and uh
00:58:59.920 sample 64.
00:59:01.520 and as i play through
00:59:04.000 you can see
00:59:05.119 especially the quality
00:59:07.599 nothing is really changing
00:59:09.520 i mean here it changed a bit but nothing
00:59:11.839 drastic
00:59:13.200 i think it's just
00:59:15.680 you know some load time or something but
00:59:18.240 overall there's nothing that's going to
00:59:20.720 affect our scene
00:59:22.480 or this type of scene so that's a safe
00:59:24.960 control to leave as the default
00:59:27.680 now i think
00:59:29.440 we're pretty much done the next
00:59:33.440 the next thing that we're going to look
00:59:34.720 at obviously how can we produce our
00:59:37.040 final
00:59:38.240 resolution and what is the setting that
00:59:40.880 we have to put in
00:59:42.480 the technique of using 4k and 2k
00:59:45.680 can be very useful in many many cases i
00:59:48.559 mean this is a simple example here
00:59:51.040 but i think it can save a lot of time
00:59:53.200 and what i've decided to do is i wanted
00:59:55.200 to do a test with 2k
00:59:58.079 1920 by 1080 at 64 samples and this is
01:00:01.680 the final result with the noise and if i
01:00:04.240 play it through there is a flick there
01:00:06.319 is a little bit of flickering but again
01:00:08.319 i have depth of field going on and
01:00:11.359 we it's a very complex render in terms
01:00:13.440 of illumination so i think using 128
01:00:16.559 would have produced a much better
01:00:20.799 result but again this is only 30 minutes
01:00:24.160 per frame and using 64 samples
01:00:26.880 so the same render the same result
01:00:31.119 render it at 4k
01:00:34.240 denoised downscale same render time same
01:00:37.200 everything
01:00:38.880 same render time
01:00:40.640 on both and this is the 4k
01:00:44.319 and when we look at it
01:00:46.960 the 4k is more stable and has much more
01:00:50.480 details
01:00:51.760 and i
01:00:53.040 i mean i know why this is happening but
01:00:55.680 it's very interesting to see it in
01:00:57.520 motion that it's much more stable now
01:01:00.160 there is flickering on both but again
01:01:02.559 the original render which i need to show
01:01:05.760 is very very noisy so
01:01:08.240 give me a second i'm gonna find the
01:01:09.839 original
01:01:10.960 render so if i go to
01:01:14.079 out
01:01:21.119 okay i have
01:01:23.280 found
01:01:24.160 the files
01:01:26.000 and i just want to show how noisy it is
01:01:29.680 on 4k
01:01:31.520 and show this workflow of rendering it
01:01:35.680 high-risk
01:01:37.040 and this is only this only works because
01:01:39.359 of the type of noise karma produces so
01:01:42.559 this is the 4k using 16 samples
01:01:46.000 but then if we do this
01:01:48.240 if we denoise it
01:01:54.400 it's gonna be
01:01:56.079 clean
01:01:57.839 it's gonna try to clean as much as
01:01:59.440 possible
01:02:02.799 and it's a bit slower so that's the 4k
01:02:07.520 and then we need to scale it
01:02:09.440 scale
01:02:13.039 and i'm gonna divide it by half
01:02:16.160 so you get 1920 by 1080 and this is the
01:02:18.640 original the original is
01:02:22.640 three me
01:02:28.720 yes three eight four zero multiplied by
01:02:31.039 two one six zero so that's the 4k then
01:02:33.520 if i scale it down boom
01:02:35.839 that's my render
01:02:37.680 and again there's flickering but
01:02:40.480 uh
01:02:42.079 actually this is a very low res version
01:02:44.880 so i need to go to frame
01:02:46.799 five yeah this rendered like with two
01:02:49.039 samples or something
01:02:51.680 so if i go to frame five it's gonna have
01:02:53.839 128 this is the sequence where i watch
01:02:56.160 the render settings and boom there you
01:02:58.720 go super clean super sharp
01:03:01.839 details and i think it's it's going to
01:03:03.760 be great
01:03:04.880 so that's the technique of rendering 2k
01:03:07.440 the goal is again to
01:03:11.039 keep the the render time the same
01:03:13.119 without
01:03:14.319 having to spend more
01:03:16.640 but
01:03:17.440 with that same time we're able to
01:03:19.119 basically get 2x the quality uh
01:03:23.520 in the final image so let me show the
01:03:25.200 render again the comparison again
01:03:30.480 and this is 4k
01:03:32.559 with
01:03:33.359 always a fourth of the
01:03:36.319 the pixel samples because we're
01:03:37.760 rendering four times more pixels
01:03:40.079 and denoising each of them
01:03:44.160 i think at 128 this would be
01:03:46.799 a perfect result
01:03:50.160 and this one is good as well
01:03:52.559 we're almost done talking about karma
01:03:55.039 in
01:03:56.000 explaining all the options it offers i
01:03:57.920 hope you guys learned something and feel
01:04:00.160 more comfortable to use it now and i
01:04:02.480 wanted to talk briefly about the gpu the
01:04:05.520 lighting techniques the aerial lights
01:04:07.440 and the lens shader and just various
01:04:10.079 topics so the first thing is the gpu and
01:04:13.200 there's nothing
01:04:15.440 crazy here we just increase the
01:04:18.240 uh
01:04:19.039 change this to xpu and hit render we
01:04:21.839 need more samples let me take a note so
01:04:24.240 i remember this and
01:04:27.280 power okay so let me show a test render
01:04:31.280 of the
01:04:32.400 gpu
01:04:34.319 and this is done on a 3090 rtx
01:04:38.480 versus a dual xeon cpu with 32 cores so
01:04:42.640 the render time on this one is four
01:04:44.400 minutes and i used 10 24 samples i think
01:04:47.920 if we render at 512 or maybe 256 at 4k
01:04:51.280 with gpu i'll probably be clean enough
01:04:55.680 and it will be done in four minutes
01:04:57.119 maybe two minutes even
01:05:00.240 but yeah this is very promising i hope
01:05:02.319 side effects continues to support it and
01:05:05.359 add all the features but i think it's
01:05:08.480 going to have it's going to support more
01:05:10.640 material x versus the
01:05:13.280 effects related workflows which relies
01:05:15.440 heavily on you know doing a lot of
01:05:17.680 complex things
01:05:20.000 at render time using point clouds and
01:05:21.760 displacement and things like that so
01:05:23.760 that's the gpu i don't have
01:05:26.319 a big comment i think
01:05:28.319 all the settings that we talked about uh
01:05:30.720 are not so applicable to this so once
01:05:33.200 you switch to xp you only have this one
01:05:36.480 and then the
01:05:37.680 lighting samples and then the diffuse
01:05:39.680 limit so the main controller is here but
01:05:42.799 and you have to increase that so
01:05:45.039 and it's a progressive rendering
01:05:47.280 cool the next topic i wanted to talk
01:05:49.920 about is using area lights so instead of
01:05:52.319 having environment light what if we
01:05:54.880 place
01:05:56.400 area lights
01:05:59.839 and let me change let me turn off depth
01:06:01.839 of field
01:06:04.079 so i placed area lights around this and
01:06:07.200 turned off the
01:06:08.880 environment dome
01:06:10.240 because this supposed to be faster in
01:06:12.960 some cases maybe it needs to be built in
01:06:15.520 a specific ways or yeah
01:06:18.799 but i've done that with four area lights
01:06:21.359 basically in the same sunlight
01:06:23.920 and this is how it looks like through
01:06:25.440 the camera
01:06:29.839 and i did a render
01:06:34.000 let me pause the viewport
01:06:36.799 it's different obviously
01:06:39.599 so this is the render with area lights
01:06:43.280 and with two samples four samples the
01:06:46.480 render time is pretty good it's not uh
01:06:49.839 faster or slower i think maybe it's a
01:06:52.000 bit faster
01:06:53.200 64 samples we are getting a very similar
01:06:57.440 noise type
01:06:59.839 but i'm not so sure that this is going
01:07:01.839 to be faster in any way again we're
01:07:03.599 rendering a segment here we're not
01:07:05.680 rendering the final image
01:07:07.359 but looking at the noise type i don't
01:07:09.440 think especially the indirect i don't
01:07:11.760 think this is going to be hugely
01:07:14.000 different
01:07:15.119 but i
01:07:16.000 do think that the direct diffuse is
01:07:17.920 cleaner so which will produce overall
01:07:20.000 cleaner render but in terms of render
01:07:22.079 time using hdr or area light seems to be
01:07:25.599 producing the same
01:07:27.119 quality
01:07:29.280 image as well as the render time so
01:07:31.440 that's something to keep in mind
01:07:34.000 all right what is what's next
01:07:39.760 portal lights
01:07:41.039 all right let's talk about portal lights
01:07:43.760 so when you have complex scene
01:07:47.280 it is let me see
01:07:50.799 when you have complex scenes like this
01:07:53.440 vendors like arnold and pr man and
01:07:56.480 redshift they offer area lights that are
01:07:59.440 called portal lights where you place
01:08:01.440 them when you want the
01:08:03.200 the render to focus basically and it
01:08:05.839 helps optimize the
01:08:08.319 the waist so that
01:08:10.160 the shaders only
01:08:12.480 uses those bounding box or those domains
01:08:15.839 and shoot more ways towards that so the
01:08:17.920 way it works in in karma is you have to
01:08:20.719 create geometry
01:08:22.399 to place the areas that are interesting
01:08:26.799 for the environment light what you want
01:08:28.479 to focus on and i placed
01:08:31.679 these grids
01:08:33.439 on the windows maybe there's a better
01:08:35.120 way to do it but that's how it's
01:08:36.799 supposed to work and then you put down a
01:08:39.679 render geometry settings note
01:08:42.399 and here you scroll down and you say it
01:08:44.960 is a portal and it's going to affect
01:08:47.359 all
01:08:48.319 uh
01:08:49.040 all the lights
01:08:50.399 and
01:08:51.198 inside the domed light
01:08:53.600 now once you go here let me pin this
01:08:56.880 you will see a new type called portals
01:08:59.600 let me enable it first so if i enable
01:09:02.000 this we'll see a new type called portals
01:09:04.399 and all you have to do is drag and drop
01:09:06.479 this
01:09:07.439 here
01:09:09.520 and now it's being used to guide this
01:09:12.319 dome or karma to basically focus more
01:09:15.198 and place more ways there now let's see
01:09:17.759 if i have
01:09:18.960 a render oh i didn't save it but i
01:09:21.120 didn't see any difference render time
01:09:23.040 quality it was pretty much the same so
01:09:25.520 at the moment i'm not sure how this is
01:09:28.080 going to work maybe this case is very
01:09:30.319 complicated i think it is so it's we're
01:09:33.439 not seeing a huge effect and
01:09:35.920 karma is already spending a lot of time
01:09:37.920 trying to solve it anyway so this is not
01:09:40.880 saving but i think if you had an
01:09:42.560 interior with exactly one opening that
01:09:44.960 could save and improve things quite a
01:09:46.960 bit all right
01:09:49.120 let's see
01:09:50.238 uh length shader okay
01:09:52.640 so the next thing i wanted to show
01:09:55.120 let me look through the camera
01:09:57.600 and let's turn on karma
01:09:59.920 so with the shader with the lens shader
01:10:02.640 you have to create a matte network
01:10:04.640 and here
01:10:06.640 you create a physical lens shader
01:10:09.679 and inside the camera
01:10:12.080 you go
01:10:13.280 and
01:10:14.000 click on take on the useless shader and
01:10:16.960 then you can drag it
01:10:19.040 actually can just copy
01:10:21.520 the path here copy the path this one
01:10:24.400 because it's a matte network it's not a
01:10:26.080 material library and this is what i
01:10:28.159 found that needs to happen i couldn't
01:10:30.800 get it to work inside the material
01:10:32.320 library and dragging and dropped the
01:10:34.480 path here so it needs to be explicit
01:10:36.960 and if i enable this again
01:10:40.560 and let's go to the material let's go to
01:10:43.199 the first frame
01:10:46.400 and let's go to the physical
01:10:48.640 lens
01:10:49.760 we can add distortion
01:10:53.679 we can add chroma operation
01:10:57.840 this is how i used i how i got the
01:11:00.159 operation this version on the
01:11:02.800 glass
01:11:04.239 from the previous tutorial the arrows
01:11:06.239 scene
01:11:07.199 this is how i got that
01:11:09.600 dispersion effect
01:11:11.280 and then you can tint you can add
01:11:13.520 exposure you can add vignette which is
01:11:15.440 pretty cool
01:11:17.360 and it's honestly it's quite fast
01:11:21.520 so that's
01:11:22.960 it and then you can play with the
01:11:26.960 with the depth of field
01:11:29.600 here we can shrink the range
01:11:33.920 and let's go to the end frame
01:11:38.000 and you can see we're getting more depth
01:11:39.840 of field now
01:11:41.600 oh it's not in the viewport sorry
01:11:43.920 i think i have it off
01:11:45.840 yeah
01:11:47.600 so enable
01:11:49.360 and now we're only
01:11:50.880 yeah everything is blurry basically
01:11:54.880 all right and the last thing is the
01:11:57.679 power function
01:11:59.360 and how i created the settings so let me
01:12:02.239 pause this
01:12:06.080 so many can and many times you
01:12:08.400 have seen
01:12:09.760 the render changes
01:12:11.840 let's see let me pick a scene where this
01:12:14.480 is working
01:12:16.480 so denoise hairlights
01:12:19.840 samples reduction for example
01:12:23.199 so you see the samples go from 128
01:12:27.600 and down or up so the function i'm using
01:12:30.880 is
01:12:32.239 the full
01:12:34.000 resolution like 24 divided by the power
01:12:36.640 of
01:12:38.080 two
01:12:38.960 sorry divided by the two power of
01:12:42.159 exponential of
01:12:43.440 uh frame
01:12:44.560 so this is what you get you get a
01:12:46.719 growing number
01:12:48.719 that matches the settings so you get 2 4
01:12:51.360 8 16 32 6 428
01:12:55.760 and then in other settings like the
01:12:58.400 threshold let me open this up
01:13:02.719 and the uh not the russian lid
01:13:05.600 the off screen for example yeah the
01:13:07.679 off-screen quality
01:13:10.320 i just subtract the frame number divided
01:13:13.679 by 10.
01:13:14.880 i go to advanced sampling
01:13:18.800 under renders geometry so here the
01:13:22.000 off screen is one minus the frame so
01:13:24.640 this just offset it divided by ten so
01:13:27.440 the first frame is going to be zero one
01:13:29.280 minus zero the next frame is gonna be
01:13:31.440 one minus zero zero one minus zero two
01:13:34.800 you can see it's going down now we can
01:13:36.719 have a more gla granular threshold
01:13:40.080 if we just divide this by ten
01:13:43.120 you can see it's going
01:13:44.719 the more precise
01:13:46.560 so that's how i did it it's very very
01:13:48.480 simple and um
01:13:51.120 yeah that's how i watched pretty much
01:13:52.960 all the parameters
01:13:54.400 let's recap everything we talked about
01:13:56.960 and uh just a note about carmen houdini
01:13:59.679 19 all this is very very new so there's
01:14:02.320 very little documentation there's very
01:14:04.320 little test about it in fact the
01:14:06.159 documentation is almost non-existing so
01:14:09.040 we have to it's our job to do all these
01:14:11.520 tests explore try things out and see how
01:14:15.199 it works and maybe point out things that
01:14:17.280 are not working to side effects or
01:14:19.840 let them know how they can improve
01:14:21.440 certain things i definitely feel that
01:14:24.239 it's heading in the right direction as a
01:14:26.560 second release was a production ready
01:14:29.040 the first version it's a very very
01:14:31.120 robust render now i picked a complex
01:14:33.760 scenario and that's what i'm probably
01:14:36.320 going to be doing next is pick another
01:14:38.800 complex topic i want to explore
01:14:41.199 rendering different uh things with
01:14:43.520 carmen and share with you guys uh how
01:14:46.080 that's going and how to tweak settings
01:14:48.000 and if i run into any problems
01:14:50.560 but overall the main takeaway from this
01:14:53.120 is that pixel samples are important min
01:14:55.600 and max arrays
01:14:57.440 are safe to keep
01:14:59.679 as the default maybe you can lower them
01:15:02.000 a bit the noise level is very sensitive
01:15:04.400 you have to be careful oracle is
01:15:06.960 something new it's not working in this
01:15:09.199 type of scenario maybe it works in other
01:15:11.280 cases so that's something and it it's
01:15:13.760 not having an effect on render time uh
01:15:16.880 light quality you guys learned about
01:15:18.400 that indirect guide is still
01:15:21.360 up in the air i don't know what's what's
01:15:22.960 happening there uh the gi bill since
01:15:25.520 that in this example is very very uh
01:15:27.920 clear the russian roulette very
01:15:30.159 dangerous but very important in various
01:15:33.600 aspects so keep that in mind offscreen
01:15:36.000 is not helping here
01:15:37.679 with the type with this type of effects
01:15:40.000 the denoise technique for the 2k 4k has
01:15:43.120 lots of potential maybe you guys can
01:15:45.120 explore some of that uh sky dome versus
01:15:47.760 area light seems like it's pretty much
01:15:50.000 the same
01:15:51.199 and then the rendering of the entire
01:15:52.960 sequence to see how the noise
01:15:55.120 holds up for
01:15:57.120 you know an animated camera
01:15:59.920 gpu very very promising
01:16:02.960 if it works if you have a scene and
01:16:05.199 everything is looking good through gpu
01:16:07.199 just use it it's going to be faster
01:16:10.320 lighting techniques we talked about the
01:16:12.560 area lights and stuff the upscale i
01:16:14.560 talked about that and then the denoise
01:16:16.560 is very crucial with karma in this
01:16:18.640 workflow as well as the red lint shader
01:16:20.960 it's it's very cool has lots of uh
01:16:23.280 features
01:16:24.320 and
01:16:25.360 yeah i'm gonna keep digging all this
01:16:27.120 i'll provide all the files provide
01:16:30.320 all the final renders and uh hope you
01:16:33.840 enjoyed this and talk to you soon bye
01:16:36.400 now
01:16:53.120 you

----------------------------------------
Contents of YouTube-Transcript/Tutorial 3 - Rain Systems and Wet-Maps.txt:
# tactiq.io free youtube transcript
# Tutorial 3 - Rain Systems and Wet-Maps
# https://www.youtube.com/watch/zHERTeOmm7w

00:00:01.450 [Music]
00:00:12.190 welcome back to the third Houdini
00:00:14.320 tutorial from 9 between and today we'll
00:00:17.080 be going over how to create this effect
00:00:29.150 now the serene effect has a few layers
00:00:32.130 to it firstly we'll be creating a pop
00:00:35.400 network that emits particles and from
00:00:38.130 the collisions of those particles will
00:00:39.510 emit a couple of things firstly we'll do
00:00:41.430 some splashes and after that we'll do
00:00:44.730 some running particles and run along the
00:00:47.070 surface object next or copy geometry to
00:00:50.550 all of those points and then finally
00:00:53.580 we'll create a wet map so I hope you
00:00:59.370 enjoy
00:01:02.629 in Houdini let's begin by dropping down
00:01:04.938 a geometry node alt click and drag this
00:01:07.850 node it's duplicated first we'll rename
00:01:10.670 our geo 102 rain and OTO 2 node will
00:01:14.750 rename to Collider dive inside of his
00:01:17.630 collider node and delete that final node
00:01:20.049 next we'll drop down a rubber Toya and
00:01:24.490 this will be our test geometry so next
00:01:28.549 we'll drop down no plug that into our no
00:01:32.090 and rename this doll Collider underscore
00:01:35.659 up jump back up dive inside of our a
00:01:39.590 node and let's drop down a grid this
00:01:44.390 grid will be emits a for our particles
00:01:47.569 so we can just resize this to a 5 by 5
00:01:50.000 grid and move it up 5 units on the
00:01:51.920 y-axis
00:01:54.069 next we'll drive down a top Network
00:01:57.799 and plug this girl into the first input
00:02:00.009 dive exact spot Network give ourselves
00:02:03.109 some space by dragging down this L trip
00:02:04.939 node and in between our pops over an
00:02:07.399 output node will drop a gravity force
00:02:09.769 and in between a gravity force now Bob
00:02:12.769 solver will drop down in merge
00:02:15.220 next we'll need to merge in our Collider
00:02:18.160 slow will create a static object and
00:02:20.720 merge that in an unarmed urge node let's
00:02:23.780 switch these inputs because left input
00:02:25.700 effects right and we want our kaleidos
00:02:28.549 to affect on the ring so under static
00:02:31.340 object go to your son paw go to your
00:02:34.280 Collider choose Collider out as Minsky
00:02:37.880 it brings it into the scheme now we
00:02:41.810 don't actually have an accurate
00:02:43.849 representation of our collision and we
00:02:46.310 can see this by going to our collisions
00:02:47.810 tab and activating the collision guide
00:02:50.209 if we hide our geometry we can see that
00:02:52.670 this is a very inaccurate representation
00:02:54.739 and we need reasonably accurate
00:02:56.900 representations of our geometry if we
00:02:58.910 are to be doing things like splashes and
00:03:00.790 running of water so the uniform division
00:03:05.389 is 280
00:03:08.930 with your physical and increase the
00:03:11.060 friction up to 100
00:03:14.400 can hide our vision and display all
00:03:16.620 geometry again now we can begin on
00:03:20.010 actually creating the rain so once again
00:03:22.349 get ourselves in space by dragging this
00:03:24.090 up here I'm pulling I'll merge you know
00:03:26.370 dawn on our pop source we'll go over to
00:03:30.930 the birth tab and as you can see we have
00:03:33.540 it set us 5000 for now and that'll be
00:03:36.060 good but we can change it if your
00:03:38.370 computer cannot handle a high particle
00:03:40.739 card oh we can drop this to 2000 now and
00:03:47.940 if we play this back you'll see we have
00:03:50.819 particles falling from our grid
00:03:55.480 to your timeline and activate the
00:03:57.430 real-time toggles it plays back in
00:03:58.930 real-time one thing you'll notice are
00:04:01.659 these lines and fall and the reason we
00:04:04.569 have these lines is because when we have
00:04:07.330 fast-moving particles and they move a
00:04:10.090 large distance between two frames
00:04:11.890 Houdini does not account for that travel
00:04:14.940 we end up with these strange artifacts
00:04:18.250 of lions appearing to get rid of that we
00:04:21.519 can increase our self steps by diving up
00:04:24.610 and going on tell pop network going to
00:04:26.590 our simulation tab and increase in the
00:04:28.510 sub steps to five we dive back inside
00:04:31.710 well I've sorted out our issue
00:04:35.910 so the next thing to do is to drop a pop
00:04:39.910 collision behavior
00:04:45.080 I got in
00:04:48.080 and we'll give us a group name of hit
00:04:52.389 now a pop collision behavior nerd checks
00:04:55.810 where the particles are interacting with
00:04:57.460 a Collider just hitting it and then we
00:05:00.490 can do particular things with that so in
00:05:02.530 this case we're adding it to a hit group
00:05:04.599 and we're also coloring those particles
00:05:07.539 red but when we play this back and let's
00:05:10.180 set these particles aren't getting
00:05:11.560 colored red so on our pop solver if we
00:05:15.310 go to collision behavior you'll notice
00:05:17.889 that there's this ad hit attributes
00:05:19.599 toggle so if we activate that and then
00:05:22.659 go back we'll notice but now all
00:05:25.810 particles are turning red you can't see
00:05:28.029 that you just press D it's a geometry
00:05:31.150 and increase your point size to 10 and I
00:05:36.009 can see that we have some particles that
00:05:37.479 are turning red
00:05:39.980 you
00:05:43.270 that we have particles colliding and
00:05:45.099 those collisions are being registered so
00:05:48.639 what would we like to do with those
00:05:49.690 particles well first we'd like to have a
00:05:52.180 response and we'd like these particles
00:05:54.160 to die on impact but now we have a group
00:05:57.400 that we can work with called hit group
00:05:59.349 so we'll be using that jockey first
00:06:03.220 let's keep working on our current
00:06:04.750 classical set up
00:06:05.680 so next we'll drop down a pop for angle
00:06:11.039 and in this pop wrangle we'll just say
00:06:13.630 at bones equals one
00:06:17.699 next we'll drop down a pop wind
00:06:23.380 with an air resistance of 9.5 altitude
00:06:26.500 of 1 and a swell size of 5 what I'll
00:06:29.830 give us is some general movement you
00:06:32.110 know pops
00:06:35.230 you
00:06:37.790 but we're gently
00:06:40.200 that emulates rain quite well next we'll
00:06:44.820 drop down a tough group
00:06:48.180 and this pop group will be called Maine
00:06:51.470 called Maine activate preserve group and
00:06:54.770 enable this rule
00:06:57.790 now the reason we're grouping these
00:06:59.690 particles is because once we leave our
00:07:01.670 pop net we would like to have access to
00:07:04.310 the particles that are falling so that
00:07:05.750 we can attach a geometry to each point
00:07:09.520 so the last thing that we need to do for
00:07:12.350 this first stream is to drop down in
00:07:14.660 puff to kill node or place it after our
00:07:19.190 murder and we'll use a bounding box
00:07:21.710 enable bounding
00:07:25.390 what we like to do is kill all particles
00:07:27.570 below our Collider so we'll drop the
00:07:31.600 center to minus 2 on Y axis and we'll
00:07:35.890 give it a size of 10 by 1 by 10 now any
00:07:39.520 particles at fault beyond our Collider
00:07:41.620 will be killed
00:07:43.170 let's save space during our simulation
00:07:47.790 now we can go on to creating our
00:07:50.530 splashes so we'll be using a hot stream
00:07:58.719 and we'll use our source group that we
00:08:01.899 created called KITT group so what this
00:08:04.869 does is it creates a new stream of
00:08:06.489 particles based on in group and we
00:08:09.189 already have this group that we created
00:08:10.509 with the population behavior so when
00:08:12.999 particles collide with our geometry they
00:08:16.179 get sent into the stream so in this
00:08:18.789 stream we can run a pop replicate the
00:08:22.119 plug will stream into its first input of
00:08:24.639 your pop replicate and we'll go over
00:08:27.729 here to the constant activation switch
00:08:30.009 it off turn down our constant birth rate
00:08:32.589 give it an impulse count at five
00:08:35.578 next we'll go down here let's change our
00:08:38.919 life expectancy to no 25 and what that
00:08:42.698 will do is as particles hit will emit
00:08:45.759 five particles have a lifespan of 9.25
00:08:49.620 so we can plug this in to see what that
00:08:51.730 looks like
00:08:55.889 as you can see we have these particles
00:08:59.490 colored red
00:09:01.730 appear to be emitting in a large area
00:09:04.279 and the reason for that is under the
00:09:06.050 shape tab we have this shape sphere now
00:09:10.790 we would rather have our points emitted
00:09:12.829 from a single point of impact rather
00:09:15.410 than from a sphere we change this to
00:09:18.589 point now when we play it back upon
00:09:22.070 impact
00:09:24.380 we'll be emitting five points
00:09:28.290 hi so go over to your attributes these
00:09:31.199 add to inherited velocity set back to
00:09:33.480 north point two-five
00:09:34.350 a radial velocity goes up to one and
00:09:37.380 we'll put more point five variants on
00:09:39.509 each axis once again play that back
00:09:46.910 the splash upon impact and the reason
00:09:49.220 they carted red is because they're
00:09:51.140 inheriting all attributes from this
00:09:52.970 first stream from the group called hit
00:09:55.970 group and hit group we still have
00:09:57.500 colored red so we don't have to color
00:10:00.260 our hits we can switch that off and
00:10:02.960 that'll do around splashing
00:10:07.920 next we need to just do a few things to
00:10:11.020 this pub stream so I'll drop down your
00:10:13.810 angle
00:10:16.760 we'll say app bounced equals one and
00:10:21.860 then we'll do a pop group
00:10:28.160 pop group we will call splash once again
00:10:32.660 preserving the group and enabling in the
00:10:34.519 rule and so now the stream will all be
00:10:38.839 grouped into the splash group while the
00:10:40.519 first stream will all be group into the
00:10:41.959 main group now we can move on to
00:10:44.779 creating our running effect because now
00:10:48.050 we have particles that splash upon
00:10:49.699 impact we would like particles that run
00:10:51.350 down the surface upon impact
00:10:53.740 to do this we'll be dropping down on top
00:10:56.890 screen once again will activate the
00:11:00.550 soulless group and call the hit group
00:11:04.740 next we'll drop down a popper at the
00:11:06.940 gate mode
00:11:09.390 and peugeot pop scream into the first
00:11:11.010 input
00:11:13.020 now we won't be using constant
00:11:14.670 activation and we won't be using a
00:11:16.230 constant birth rate we will be using
00:11:18.839 impulse count and we'll set that to 1
00:11:20.880 and what that'll do is on impact join
00:11:24.570 with one point based on our hip group
00:11:28.010 the next we can drop it life expectancy
00:11:30.110 to Norway not five
00:11:32.600 and once again we would like it upon the
00:11:34.550 point of impact so set that to point and
00:11:37.520 not attributes we won't inherit anything
00:11:39.700 we'll set our initial velocities north
00:11:42.410 bank one on each axis
00:11:46.520 so now that we have that set up what
00:11:50.810 this will do is as a point collides with
00:11:53.330 geometry a new point will be emitted at
00:11:56.480 that point that has a life expectancy of
00:11:58.760 naught point naught 5 so what we'll be
00:12:02.300 doing that that is spawning points off
00:12:04.880 of that in our next path the tree and
00:12:07.279 that will run down the surface so this
00:12:09.980 is just setting where we want those
00:12:11.390 streams of water to be running from it's
00:12:15.649 been go ahead and drop down a popper
00:12:17.060 angle
00:12:19.340 and this proper angle same as before
00:12:20.990 until at Bart's equals zero this time
00:12:24.350 and the reason for that is we don't want
00:12:26.720 these particles to bounce off of the
00:12:28.160 surface we want them to stick and
00:12:30.250 Houdini recognizes this bounce attribute
00:12:33.320 within pop networks so we can't just
00:12:36.230 call it straight at bounce equals zero
00:12:38.090 next let's drop down a pop collision
00:12:41.060 behavior again bug listen tell pop
00:12:44.450 collision behavior and we'll give this
00:12:46.790 group name
00:12:47.510 run spot
00:12:52.340 or preserve the group
00:12:56.350 hits understand as a response will make
00:12:58.810 them stick to the surface so we can go
00:13:02.830 ahead and plug this into our merge node
00:13:05.320 and begin on our last stream so create
00:13:10.600 another pop stream and another pop
00:13:13.780 replicate
00:13:17.480 pop stream into the first input of our
00:13:18.980 replicate and let's go to our pop stream
00:13:21.350 once again source group will activate
00:13:24.920 but this time we'll be using the group
00:13:27.199 that we created in our second stream
00:13:31.300 and that was called run spawn over here
00:13:34.480 we'll just say run spawn and now we can
00:13:39.070 go on top up replicate the oh no pop
00:13:42.220 replicate we'll do an impulse cut one no
00:13:46.570 activation
00:13:47.290 I know birth rate or constant and we'll
00:13:51.459 give it a life expectancy if you next
00:13:54.519 we'll go onto our shape and for shape we
00:13:58.029 actually don't want them emitted from a
00:13:59.500 single point we like them with some
00:14:01.329 variants so we'll limit from North Point
00:14:04.300 not one
00:14:06.510 that's just the scale of the sphere that
00:14:08.160 it's emitting from
00:14:10.430 next we can go over to our attributes
00:14:13.010 and we weren't inherit any of the
00:14:15.380 attributes we won't inherit velocity
00:14:21.260 initial velocity to no point one and
00:14:24.040 that'll be the variance so next you can
00:14:27.860 go ahead and drop down another angle and
00:14:30.820 again as they act bounce to zero then we
00:14:38.180 can drop down a pump property
00:14:43.979 and what a pot property is used for is
00:14:47.389 for initializing attributes that we Dini
00:14:50.970 recognises so the one that we'll be
00:14:53.220 using is on the dynamics tab that's
00:14:55.470 called pling
00:14:57.850 it will set a claim of 100 and what
00:15:01.360 that'll do is it'll make the particle
00:15:03.100 stick to the surface of the geometry
00:15:05.640 this area is just the strength to which
00:15:08.230 it clings
00:15:09.939 and this will be different depending on
00:15:12.819 your geometry and what kind of rain
00:15:14.499 effect you're going for but I find 100
00:15:17.079 works quite well
00:15:19.300 next we can go ahead and drop down okay
00:15:21.070 puck to vision behavior
00:15:25.630 are your property into this collision
00:15:27.790 behavior and this crew pain will be
00:15:30.790 called run
00:15:33.730 we can color these heads to see what
00:15:35.080 they look like so we'll make them light
00:15:36.880 blue
00:15:39.340 and this one will be using slide as a
00:15:41.470 response
00:15:45.020 and again we'll be preserving our group
00:15:46.760 as we've done before and the next thing
00:15:51.590 that we'll do is we'll drop your puck
00:15:53.630 interact
00:15:57.200 there is a position force of minus 0.2
00:16:00.920 and a velocity force of not point to and
00:16:05.330 what this does is position force is a
00:16:08.240 force used to push particles apart if we
00:16:11.000 make it a negative force it becomes a
00:16:12.680 force that pulls particles together and
00:16:14.680 rain tends to gather so we would like
00:16:17.570 this to be a force that pulls particles
00:16:20.030 together but not too much of a force
00:16:21.530 that they immediately clump the note
00:16:25.040 point or negative nor point to is a
00:16:26.960 decent number to work with velocity
00:16:29.300 force causes particles that are nearby
00:16:32.150 to each other to blur their velocity so
00:16:36.200 they tend to share velocities and so
00:16:39.050 that replicates droplets of rain quite
00:16:41.540 well next thing that we'll do is we'll
00:16:45.620 drop down on hip-hop drag and on this
00:16:51.050 pop drag will set up tip 10
00:16:54.900 and then we can finally plug this pop
00:16:57.330 dragged into a merge node press alt to
00:17:01.170 lay everything out and I'll display a
00:17:03.750 flag on our output I pay this back to
00:17:06.689 see what happens
00:17:15.720 so if you look closely we have these
00:17:18.609 light blue particles that slide down the
00:17:20.589 surface once again press D bring up your
00:17:23.410 point size and we can take a look at
00:17:25.869 what's happening now
00:17:28.630 so when we played us back y'all notice
00:17:30.309 some particles hitting and rolling off
00:17:31.990 of the surface
00:17:35.660 and that more or less looks like
00:17:37.400 droplets of rain
00:17:44.750 so what we'll do is well
00:17:47.600 jump up out of his Network trap down a
00:17:50.390 file cache nerd
00:17:51.559 I got pop nets into this
00:17:55.160 find a place to save a rain cache
00:18:02.070 here to my ring thought great a new
00:18:04.980 folder called cash and in here
00:18:09.820 coldest rain particles dot dollar F F
00:18:17.610 dot B GE o SC so dollar FF once again
00:18:22.900 that's the corresponding frame to save
00:18:25.540 because if we don't have this it will
00:18:27.730 only save one file and we'd rather have
00:18:29.710 a sequence saved but B GE o SC is what I
00:18:35.140 found to be the best I'll type saving
00:18:37.810 geometry on pop net so that's what we'll
00:18:41.620 be using for this one having a switch on
00:18:44.920 load from disk so that once it's saved
00:18:47.050 to disk won't be calling this every time
00:18:49.510 but rather just fetching from our file
00:18:51.190 cache and the last thing that we'd like
00:18:53.650 to do before we actually catch this up
00:18:55.240 is to increase the number of particles
00:18:56.950 I've been using we can go to our pop
00:18:59.590 source increase this to 5,000
00:19:04.909 finally
00:19:07.160 the disk
00:19:11.580 then once the particle
00:19:14.650 we can begin copying geometries in these
00:19:16.270 plans so we'll drop down is still said
00:19:22.120 I'll display flag on the sphere
00:19:23.500 can't you take polygon mesh will change
00:19:26.050 its rows to 5 and its columns to 8 and
00:19:29.320 that gives us a faceted sphere so the
00:19:33.220 next thing that we'll do is well drop
00:19:34.900 down and edit node go here select this
00:19:40.810 top point and we'll move it up just
00:19:49.570 until this resembles a raindrop next we
00:19:54.580 can drop a copy two points and we can
00:20:01.660 plug our rain particles into this now
00:20:05.740 currently it's copying to the collider
00:20:07.750 geometry that we've brought in so we
00:20:10.120 need to just choose which points we
00:20:11.590 would like our sphere to be copy to so
00:20:14.230 over here we can choose our main points
00:20:16.750 and if you remember those all the ones
00:20:19.120 in our popular that are just falling we
00:20:21.790 have a splash group we have a run group
00:20:24.010 and we have this main group so for this
00:20:26.170 one we'll use the main group and if you
00:20:28.300 can't be two points these points are
00:20:30.130 currently massive so to fix that or
00:20:35.020 dropped on an app to attribute dry angle
00:20:36.760 between our file cache and our copy to
00:20:38.860 point in here I'll do two things firstly
00:20:43.240 we'll say at orient equals V V and then
00:20:49.750 we'll say at P scalar equals not point
00:20:53.620 not one
00:20:55.700 and semicolon there we go so what that
00:21:01.590 does is this orient equals V at V so
00:21:07.590 that's our orientation of our particles
00:21:09.540 to face the direction of our velocity so
00:21:11.910 if we have velocity moving slightly to
00:21:14.430 the side as you can see on a lot of
00:21:15.780 these points and they'll face that
00:21:17.490 direction and so that just gives it a
00:21:20.970 bit of variation that makes it a lot
00:21:22.500 more accurate in terms of how it looks
00:21:25.070 then our P scale is just setting the
00:21:28.080 scale of our points so we can change
00:21:30.360 this depending on the scene so I think
00:21:33.210 for the angel I use naught point naught
00:21:34.890 naught v then I just up the amount of
00:21:37.770 particle that we had but we'll keep this
00:21:40.530 up north point naught 1 for now just so
00:21:42.660 we can see all right
00:21:45.270 you can drop down you know after that
00:21:48.860 plug that in there rename this no mean
00:21:54.140 underscore next we can move on to
00:21:58.830 working without splashes snowball drop
00:22:02.310 down another sphere said I'll display
00:22:05.580 flag to it again once again set it to a
00:22:09.420 polygon mesh this time we'll do 3 rows
00:22:12.510 and 4 columns and then I'll drop down
00:22:16.980 I'll copy two points plug it into the
00:22:19.920 first input and plug our file cache into
00:22:22.470 the second input on those copies points
00:22:25.080 once again we'll choose the correct
00:22:27.060 group and this sign will be using the
00:22:29.160 splash group we can set our display flag
00:22:32.760 and once again these points are massive
00:22:34.790 so to correct that another attribute
00:22:37.410 triangle between our copies points in
00:22:39.030 our file cache and the reason that we
00:22:41.880 put this attribute angle over here is
00:22:44.250 because copy two points when it copies
00:22:46.920 your geometry to these points your
00:22:48.780 geometry inherits these attributes so
00:22:52.280 your sphere in each case would inherit
00:22:56.220 your orientation and your P scale so you
00:22:59.280 can make it inherit other things such as
00:23:00.690 color and an up attribute whatever you
00:23:04.680 need it to inherit you can inherit
00:23:05.940 through you
00:23:07.980 so we'll continue and do at least L
00:23:14.400 equals dot point naught dot fire so
00:23:18.430 these points will be slightly smaller
00:23:19.690 than our other points and then again we
00:23:24.520 can drop down a no and call this one its
00:23:29.560 flash underscore so if you take a look
00:23:34.470 you can just hire this flippy collider
00:23:36.550 he's in a separate note just hide all
00:23:39.550 the objects and now we can see what's
00:23:41.620 happening with our splashes hi
00:23:44.200 instancing these points to all of the
00:23:48.760 splash points now our final note is our
00:23:54.760 run group so this one will be doing
00:23:57.010 slightly differently let's drop a tallit
00:23:59.590 note we would like to delete everything
00:24:02.230 except for run so exclamation run change
00:24:07.180 these two points there we go
00:24:09.070 now we have only the run particles so
00:24:14.920 what we can do with this is we can drop
00:24:17.440 down in gdb from particles btv particles
00:24:22.810 there we go
00:24:24.690 plug your heat node into the first input
00:24:27.340 and you end up with this blobby mess
00:24:31.330 the reason for that is just our voxel
00:24:33.580 size and our point radius scale
00:24:36.230 so we'll begin by dropping our point
00:24:38.090 radius scale drop it down to your naught
00:24:41.360 point naught naught 3 5 drop our minimum
00:24:45.500 radius down to no one
00:24:48.909 then our voxel size will drop down to
00:24:52.010 north point on all time the reason I did
00:24:54.470 it in that order is because a lot of the
00:24:56.179 time when you decrease your voxel size
00:24:58.130 on this VDD from particles node without
00:25:01.179 changing your point radius scale you can
00:25:03.919 really slow down the process these two
00:25:05.659 should be as close to each other as
00:25:06.860 possible and if you want accurate
00:25:08.750 representations you'll drop this
00:25:10.070 slightly lower than your point radio
00:25:12.230 scale but in this case it's fine it's
00:25:16.460 the next thing that will do it will drop
00:25:19.820 down a convert BBB
00:25:27.200 and we'll convert from volume to
00:25:29.520 polygons and as you can see we now have
00:25:32.520 these tiny droplets and they may be a
00:25:35.370 bit too small so we can just increase
00:25:37.800 the size of our point radio skelton
00:25:39.450 operate not 5
00:25:40.500 sorry no point normal at 5 and on the
00:25:46.050 other thing that you can do on your V DV
00:25:47.310 from particles node is change your
00:25:49.560 particle footprint so you can change
00:25:51.690 this from spherical to your velocity
00:25:53.250 trail and as you can see it goes quite
00:25:57.180 crazy and the reason for that is just
00:25:59.010 our settings over here but we can't make
00:26:01.590 this work so what we have to do is
00:26:03.450 change your multiplier to Northpoint not
00:26:06.570 1 and your velocities basins in or point
00:26:10.050 two and it creates a slight trail so the
00:26:17.700 last thing that you'll need to do is
00:26:20.120 you'll need to transfer your velocity so
00:26:25.200 we'll drop down an attribute transfer
00:26:26.550 node plug your convert VDP into the
00:26:28.860 first input now what we'll be doing here
00:26:31.110 is taking the points from our delete
00:26:34.530 node and feeding the velocity back in
00:26:37.650 because you'll notice something on this
00:26:39.600 convert VDB node we don't have our
00:26:42.030 velocity anymore and the reason for that
00:26:43.980 is when you're converting to a V DV
00:26:45.870 you're losing all of your attributes so
00:26:49.380 we don't have any of those attributes
00:26:50.280 anymore so we'll have to transfer them
00:26:52.890 back on so under the attributes points
00:26:56.910 we'll just select V will change our
00:27:02.160 distance to one point to drop down and
00:27:06.540 now
00:27:08.640 plug the Centaur now and we'll call this
00:27:11.669 one the run underscore hours and once
00:27:17.460 you've done that you can merge all of
00:27:19.169 these together and take a look at what
00:27:23.789 we have
00:27:24.710 so you'll notice a few things such as
00:27:27.000 these particles being too big but that's
00:27:30.360 all to you you can make changes to that
00:27:32.760 sitting over here and change our key
00:27:34.769 scale to 0.05 perhaps you want them
00:27:39.390 smaller and the reason that we use these
00:27:43.409 round droplets as opposed to a longer
00:27:46.740 geometry is because we will be rendering
00:27:49.169 this or you would be rendering this with
00:27:52.110 velocity and you would be using motion
00:27:54.419 blur and so these particles would blur
00:27:56.519 in a streak so you don't have to have
00:27:59.610 geometry that looks like rain you just
00:28:01.620 need something that merely resembles it
00:28:04.399 so once you have that you can just drop
00:28:08.010 down a normal node drop down on your
00:28:11.850 final No call this one rain underscore
00:28:16.080 now and there you have it
00:28:20.600 say if we jump up a level and show our
00:28:23.220 geometry you can play this back and take
00:28:26.190 a look at what happens we have our
00:28:27.899 particle splashing and we have some
00:28:29.820 running down the surface and of course
00:28:31.830 you can tweak all of these settings if
00:28:33.210 you'd like to change this and of course
00:28:36.000 this isn't exactly what I used for the
00:28:38.340 angel render but it's more or less the
00:28:40.919 same so you can get the same effect that
00:28:43.649 I got in the angel just with a few
00:28:46.440 tweaks the last thing that we'll be
00:28:48.120 doing is adding a wet-nap to create the
00:28:51.269 web map we'll be using an infection
00:28:52.919 sulfur and it will be the one that then
00:28:55.950 Watts uses it's quite similar to the one
00:28:57.990 seen in my Phoenix desintegration video
00:28:59.760 but the one that Ben Watts tells is all
00:29:02.130 involved and it's quite useful to have a
00:29:05.370 nother approach to it I do quite like
00:29:07.529 his setup so a thanks to Ben watts for
00:29:10.320 that tutorial and I'll be linking that
00:29:12.269 in the description if you want to check
00:29:13.470 that out so let's dive inside of our
00:29:15.720 collider node drop-down is scatter
00:29:18.580 like alkali out into the scatter one
00:29:21.130 nerd and we'll push up up total current
00:29:23.620 to 8,000 next will drop down an object
00:29:28.090 merge and over here will merge in our
00:29:33.130 file cache from our rain node find a
00:29:37.720 file cache and next will be dropping
00:29:40.120 aide to leave node like your object
00:29:43.270 merge into this delete node and what
00:29:46.060 will be deleting from this is our
00:29:48.220 collider because our file cache cache
00:29:51.130 the collider as well and we don't want
00:29:52.780 to use that so all we'll have to do on
00:29:54.850 this delete node is remove this
00:29:56.980 exclamation there we go
00:30:00.460 that removes all primitives from our
00:30:03.610 object merge so now we only have points
00:30:05.910 next we can drop down an attribute
00:30:08.590 wrangle and over here we'll say at wet
00:30:15.750 equals one point one we can copy over
00:30:21.940 this attribute triangle to the side of
00:30:24.370 our scatter node and I'm on this
00:30:27.460 attribute angle will say add wet equals
00:30:29.680 0 now we have to attribute wrangles each
00:30:33.060 initializing our wet attribute so the
00:30:39.040 next thing that we'll do is drop down a
00:30:40.690 solver into the first input we'll plug
00:30:43.750 our scatter node and the second input
00:30:47.290 will take our object merge now we can
00:30:51.820 dive inside of our solver and drop down
00:30:54.430 a point
00:30:57.520 into the first input of our point four
00:30:59.870 or plug our previous frame and second
00:31:02.090 input we'll be taking our input to type
00:31:06.830 inside of our point park and we'll be
00:31:09.050 dropping a few things first a point to
00:31:13.490 hard open and we can just duplicate that
00:31:19.480 by holding alt and dragon now or plug
00:31:24.560 our P attribute into the corresponding
00:31:27.850 inputs of our PC opens
00:31:31.390 and into the file input of our PC open
00:31:34.220 one volt lock-up input 1 and up input 2
00:31:37.790 or going to our PC open to file input
00:31:42.010 next thing to do is to drop a PC filter
00:31:49.159 handle into the filter duplicate the
00:31:51.619 folks are unplug the corresponding
00:31:53.960 handle into a second filter now on both
00:31:56.989 of these folders we'll have to change
00:31:58.609 the signature and the channel so we'll
00:32:00.889 change our signature to flirt and the
00:32:05.119 channel that we're looking for is that
00:32:06.739 wet attribute that we created so what
00:32:09.619 this does is it opens a point cloud and
00:32:13.179 within the cloud it looks for this
00:32:16.820 attribute and so we can do things
00:32:20.210 depending on proximity from this point
00:32:23.960 cloud to this point cloud and what we'll
00:32:26.330 do is we'll add attributes so we'll add
00:32:29.989 the current weight attribute that we
00:32:31.940 have to the existing weight attribute
00:32:36.039 then we'll drop down a bind export and
00:32:41.509 plug the
00:32:43.340 on this bind export we will rename this
00:32:46.520 to wet so that it re export our wet
00:32:51.320 athlete so it adds the two wet
00:32:53.510 attributes together and then re-exported
00:32:55.370 you can also plug this into our CD
00:32:57.740 attribute so we can see what's happening
00:32:59.320 and then on our PC open we have a couple
00:33:04.550 of settings but we'll get back to the
00:33:05.810 short thing what we'd like to do is just
00:33:09.440 flip this so offered our range between 0
00:33:15.020 & 1
00:33:15.290 [Music]
00:33:17.059 and the reason for that is it will add
00:33:18.919 indefinitely Omega over 1 or we want it
00:33:21.649 clamped to just a fair point so next
00:33:24.679 we'll just like this footnote into our
00:33:26.929 CD make sure that it's plugged into our
00:33:28.580 input of our mind export you can jump up
00:33:31.999 a level and play this back to see what
00:33:36.590 happens
00:33:38.850 so as you can see
00:33:42.350 an attribute and if you remember
00:33:44.990 correctly attribute for wet is
00:33:47.809 corresponding to how C D attribute so as
00:33:51.980 this turns white that represents our
00:33:55.010 object getting wet this value for wet
00:33:59.510 it's being transferred on to these
00:34:01.669 points and that's great but it's getting
00:34:05.419 transferred onto too many points too
00:34:07.010 quickly so we'll make a few minor
00:34:10.520 adjustments change our search radius
00:34:13.580 down to naught point naught 5 and both
00:34:16.100 pop PC opens and change the number of
00:34:18.949 points down to 5 I'm gonna play that
00:34:24.020 back
00:34:27.570 like works quite well the only other
00:34:30.929 thing that you may want to do is add
00:34:33.000 some sort of drying effect and you can
00:34:35.100 do that by dividing or blurring this
00:34:37.440 attribute for the wet value every frame
00:34:41.770 so we can do that but going back into
00:34:44.480 our 1-var an on this first input if you
00:34:48.500 remember correctly this is the previous
00:34:50.659 frame so this fetches the wet attributes
00:34:53.149 of the previous frame so what we can do
00:34:55.849 with that is we can drop down a divide
00:34:59.329 constant and every frame just divide
00:35:03.770 this slightly so we'll divided by 1.05
00:35:08.890 go up level and you can see what that
00:35:11.660 does so as it gets wet it also dries or
00:35:15.589 absorbs moisture slightly
00:35:18.380 once we have this we can drop down and
00:35:20.900 transfer attribute plug our Collider out
00:35:27.380 into the first input and a solver into
00:35:30.800 the second input and what we'll be
00:35:33.920 transferring from you is simply a wet
00:35:37.580 attribute so now that we have our wet
00:35:41.210 attribute on our original geometry we
00:35:44.150 can do a few things with that so we'll
00:35:45.800 drop down an attribute angle and plug
00:35:47.840 this into the first input firstly we can
00:35:51.230 say at CD equals channel ramp cassette
00:35:57.080 see a trap we'll just call this CLR
00:36:00.350 color , and then you needed a driving
00:36:03.260 force so we'll use our wet attribute
00:36:05.420 that's at wet and then we can create our
00:36:11.240 spare parameters go up to edit parameter
00:36:14.240 interface in this color node we'll just
00:36:18.440 be changing the ramp type from float to
00:36:20.510 color apply and except that's something
00:36:23.360 that you'll notice if we're just adding
00:36:25.580 extra color over here is that we can
00:36:29.510 have this attribute control our color
00:36:33.119 and that's great because wet areas often
00:36:36.240 appear darker on object and of course
00:36:38.940 that depends on the object you're
00:36:40.019 working with if you're working with
00:36:41.700 something like glass you won't need that
00:36:43.460 but things like cement or that angel
00:36:47.130 that I was working on cement would get
00:36:49.529 darker as it gets wetter so what we can
00:36:52.289 do is just flip us around and set the
00:36:55.079 first value to white and the last input
00:36:57.539 to black and what that will do is darken
00:37:01.650 the areas that are wet and you can slide
00:37:05.339 these around if you want it's to look
00:37:08.430 more wet in more places and you don't
00:37:11.460 have to have this as pitch black you
00:37:13.549 just have that as a gray now areas get
00:37:17.549 wet how's the water hit
00:37:21.460 and the last thing that we would like to
00:37:23.260 do is change the roughness so what we
00:37:26.920 would like is for the wet areas to be
00:37:28.839 shinier so we can say a pure ax equals
00:37:33.099 channel ramp and in these inverted
00:37:38.770 commas we'll say rah that's what it will
00:37:40.780 call our ramp and once again it will be
00:37:43.089 driven by wet so we can create spare
00:37:47.770 parameters and now we have this
00:37:49.660 roughness ramp now an attribute the
00:37:53.920 value of one means that something is
00:37:56.200 entirely rough and has no shine to it so
00:38:00.460 we'll invert this I'll just bring this
00:38:02.859 up to them halfway and we'll drop this
00:38:05.470 down to almost zero
00:38:08.260 I will deny play notes
00:38:14.020 and you won't be able to see it in this
00:38:15.430 view but when you render out all the
00:38:17.680 areas that are wet will be shinier so
00:38:20.740 that's all you actually need to get this
00:38:22.360 wet map working and of course you can
00:38:24.790 make changes to your ramps and that will
00:38:28.540 change how it looks when it's rendered
00:38:31.810 so we can jump back up and take a look
00:38:34.360 at the two of these together and you can
00:38:38.920 go ahead and render this out
00:38:41.480 you would have to do is activate your
00:38:44.030 motion blur on your particles and in
00:38:46.880 your camera settings and once again
00:38:49.070 that's covered in other tutorials it's
00:38:51.740 covered in our Doctor Strange portable
00:38:53.630 effect tutorial and you can apply a
00:38:55.730 glass shader to these particles and that
00:38:59.630 should work so that's all for this
00:39:02.359 tutorial thanks for watching and be sure
00:39:04.520 to give me feedback we'll be releasing a
00:39:06.890 lot more tutorials in the coming weeks
00:39:08.780 we are really exciting things coming up
00:39:10.550 we have a lightening tutorial we have a
00:39:13.369 Rubik's Cube tutorial we have some
00:39:15.560 geoeffective things that we're doing and
00:39:17.480 we even have a carnage symbiote coming
00:39:19.910 up so stay tuned for all of that once
00:39:22.190 again thanks for watching
00:39:25.120 [Music]

----------------------------------------
Contents of YouTube-Transcript/Karma New Features You Might Have Missed in Houdini 20.txt:
# tactiq.io free youtube transcript
# Karma New Features You Might Have Missed in Houdini 20
# https://www.youtube.com/watch/lXbFhtaj3tg

00:00:00.160 Houdini 20 brings a bunch of new
00:00:02.320 features to Karma so let's take a look
00:00:05.120 at what some of the new stuff is that's
00:00:06.839 available to
00:00:12.320 us so just uh start off here this scene
00:00:15.719 everything that's in this including the
00:00:16.920 lighting the materials and the models
00:00:18.960 this is all from the grayscale gorilla
00:00:21.359 plus Library so I did a video on that a
00:00:24.199 couple days ago I'm not sponsored by
00:00:25.920 them but they did give me access to
00:00:28.240 their Library so just keep that in mind
00:00:30.560 as you're watching through that and
00:00:32.360 looking at everything in here but I'm
00:00:34.239 going to use their stuff for
00:00:35.440 demonstration purposes here so check out
00:00:37.480 that other video if you're interested
00:00:38.840 and I'll also leave a link in the
00:00:40.120 description to their website so you can
00:00:42.200 take a look at it if you're interested
00:00:43.800 in grabbing their stuff but anyways
00:00:47.840 let's go ahead and take a look at the
00:00:49.199 render Gallery that's the first thing I
00:00:50.760 want to take a look at so we'll come to
00:00:52.280 this little plus icon go to new pan type
00:00:55.399 and then we're coming down to Solaris
00:00:57.559 and then render gallery and the reason
00:01:00.399 we want to take a look at that is
00:01:01.480 because of the new render stats so let's
00:01:03.519 press alt shift and c and we can pop out
00:01:06.400 a new window here just to give us a
00:01:09.119 little bit more
00:01:10.479 space and we can render out um our scene
00:01:15.400 so we can just render out in the
00:01:16.960 background so I'll just go ahead and
00:01:18.320 click that and it's going to start to
00:01:20.159 render out our scene in the background
00:01:22.479 you can see that it pops up here and if
00:01:25.159 we just go ahead and click on it you can
00:01:26.880 see that it's starting to render out our
00:01:29.079 scene which is pretty sweet and that
00:01:32.439 just allows us to just render that while
00:01:35.040 we're working and we can change some
00:01:37.159 things so let's go ahead let's take a
00:01:38.960 snapshot of this so we'll snapshot that
00:01:42.680 and then we can come and maybe we change
00:01:45.000 some things so let's come over to this
00:01:47.560 uh material
00:01:48.960 Linker and let's go ahead and just lower
00:01:52.079 that out for now so I'll come to the
00:01:53.960 material Linker maybe we want to change
00:01:55.680 the material maybe on our pyramids here
00:01:58.320 so I have this
00:02:00.439 corroded copper material on them right
00:02:02.000 now let's go ahead and just disable that
00:02:04.520 let's maybe come
00:02:06.520 to um I don't know
00:02:09.000 maybe
00:02:11.760 the dirty brass we'll use this one and
00:02:14.760 let's drag our pyramids over actually
00:02:17.480 we'll double click on this and then drag
00:02:19.160 our pyramids over and accept there and
00:02:22.680 now we have our our pyramid set to that
00:02:25.000 brass material and we can bring back our
00:02:27.640 render Gallery here and we can again
00:02:30.080 click this little render in the
00:02:31.599 background icon and we start to have
00:02:34.319 that render in the
00:02:35.879 background so let's go ahead let's take
00:02:38.080 a look at this one first actually we can
00:02:40.040 take a look at the render stats so that
00:02:44.040 is in this little icon right here so I
00:02:47.480 click that icon you can see you get a
00:02:49.959 bunch of information that pops up so you
00:02:52.400 can see what you're using so we have xpu
00:02:55.680 we have our pass samples we have how
00:02:57.640 much time it takes so it took 48 seconds
00:03:00.040 to render that out we have the aovs our
00:03:03.360 xpu devices our memory all that stuff we
00:03:06.879 have available to us let's go ahead and
00:03:08.400 just maximize that
00:03:10.760 here and you can see your different
00:03:13.400 information down here we have our how
00:03:17.200 much our xpu devices are being utilized
00:03:20.400 so I just want to point this out real
00:03:22.000 quick too because if we take a look
00:03:24.080 actually at uh right here in our
00:03:26.400 viewport we have this rendering showing
00:03:28.640 up and we have this Optics Optics and
00:03:31.480 then the Ember it kind of went away
00:03:33.000 there says idle now but that is not how
00:03:36.439 much um like it's
00:03:40.159 not I I don't know what my brain's
00:03:43.040 trying to say right now but the way like
00:03:44.920 these numbers right here the 49% the 37%
00:03:47.560 and the 15% that's how much contribution
00:03:50.799 is being made by each device so my 390
00:03:54.280 is uh rendering 49% of the image my
00:03:57.360 A4000 IS rendering 37%
00:04:00.200 and my CPU is is rendering 15% so that's
00:04:04.439 how much of the contribution of each
00:04:07.040 individual um piece of Hardware that you
00:04:10.079 have is um contributing to the
00:04:13.720 render so we have all sorts of different
00:04:15.840 things in here this is really good for
00:04:17.440 debugging you have resolution and all
00:04:19.120 that stuff too uh you have different
00:04:21.279 things that can show you how much time
00:04:24.199 is being taken and everything like that
00:04:26.600 so you can really dial in everything for
00:04:29.320 your seen maybe find the bottlenecks and
00:04:31.520 get rid of them and we can click on this
00:04:33.560 one and then you can see that the
00:04:35.360 information updates so this one took a
00:04:37.440 little bit longer it looks like for some
00:04:38.960 reason this material is a little bit
00:04:40.919 harder to calculate uh and then or maybe
00:04:44.199 it was CU I was had the the scene
00:04:47.479 running in the viewport as well but
00:04:49.919 either way this one took four a minute
00:04:52.120 and 15 seconds to render out and again
00:04:54.800 we have similar stuff showing up in our
00:04:57.680 different settings here and we we can so
00:05:00.440 we have our scene set up to this right
00:05:02.800 here we should be able to take a a
00:05:04.520 snapshot so if we we took this snapshot
00:05:06.759 we take a look at this we can revert
00:05:09.120 Network to the snapshot this isn't new
00:05:11.000 to Houdini 20 but it is something that
00:05:13.560 is super cool that you can do so just
00:05:15.960 take a look at at that you can also
00:05:18.000 render multiple cameras at a time which
00:05:19.800 I forgot to take a look at before this
00:05:21.759 video so uh just know that you can
00:05:23.759 render out multiple shots at once and uh
00:05:26.639 that's available in Houdini 20 uh part
00:05:29.680 of the new stuff um one other thing that
00:05:31.919 I do want to point out here so if we I
00:05:34.919 do have the karma render settings hooked
00:05:36.759 up so if I go ahead and just get rid of
00:05:39.759 that inside of our scene here we can
00:05:41.960 press D in the viewport and we have
00:05:44.560 something new in this little display
00:05:46.680 options so we have this render section
00:05:48.960 where our Houdini GL is but more
00:05:51.039 importantly we have Karma CPU and Karma
00:05:53.280 xpu settings so this is basically just
00:05:55.919 what these Karma render settings are but
00:05:58.319 if you don't have one of these in your
00:05:59.520 your scene or in your tree you can
00:06:01.520 actually start to render just directly
00:06:04.199 with the settings that it has available
00:06:06.800 to you from the display option so I go
00:06:09.360 ahead and load up our xpu you can see
00:06:11.680 that it is just starting to render based
00:06:14.039 off those settings which is super nice
00:06:16.080 you don't actually have to drop that
00:06:17.400 down now you can just start to render
00:06:19.759 just speed things up a little bit uh
00:06:21.840 more in your
00:06:23.599 workflows so let's hop out of there for
00:06:25.639 now we do have some new things to
00:06:27.599 materials so let's go ahead and I'm just
00:06:29.120 going to maybe dive into one of these
00:06:32.960 materials or maybe I'll make a new one
00:06:34.400 so karma material
00:06:38.319 Builder we'll jump in there so we have
00:06:40.720 some new things in here we have a new
00:06:42.880 ramp parameter so karma ramp parameter
00:06:46.120 this is new to Houdini 20 so that should
00:06:48.759 make it
00:06:49.880 available um so make it available all
00:06:52.680 the way up on
00:06:54.160 the H it's probably in the material if
00:06:56.440 you edit the material properties so um
00:06:58.479 it makes the
00:07:00.080 this ramp parameter available to you um
00:07:02.759 not just inside here but you can edit it
00:07:05.360 from from actually some of the stuff in
00:07:07.759 Solaris there's also a rounded Edge Bop
00:07:11.720 which is kind of cool um not sure let's
00:07:16.039 see this is from the normal so we need
00:07:17.919 to plug this into normal so I haven't
00:07:19.199 actually used this so let's go ahead and
00:07:21.919 pipe this in here so we'll do the normal
00:07:24.560 in there looks like we have some
00:07:27.560 different settings in here to to adjust
00:07:30.319 some things let's go ahead and make
00:07:32.879 a box and we'll bring this into our
00:07:36.240 scene
00:07:38.000 here so maybe we raise this up a little
00:07:42.080 bit bring down the uniform
00:07:45.960 scale maybe something like that and we
00:07:49.560 can apply that material to it so in our
00:07:52.039 material Linker just bring this over
00:07:54.280 here and we can drag our cube in there
00:07:58.240 and accept now now if we load up Karma
00:08:00.639 xpu let's go ahead and bring our render
00:08:02.520 settings
00:08:04.599 back and we load this up we should have
00:08:08.560 some rounded edges on our on our box
00:08:12.400 let's see what we
00:08:14.680 get so maybe let's zoom in a little bit
00:08:20.879 here all right so yeah we start to have
00:08:24.199 some some rounded edges there so if we
00:08:26.199 bring this back up we can change the
00:08:28.599 radius Maybe set this to like 0.1 it
00:08:30.360 should be very yeah so it's it's very
00:08:32.360 pronounced there so you have this new
00:08:34.120 rounded edges just to give you some nice
00:08:37.000 little rounded fake rounded edges on
00:08:40.159 your geometry if you want to to use that
00:08:42.799 we also have some other new things
00:08:45.040 inside of materials here so we have a
00:08:48.440 new
00:08:49.760 verono 2D and 3D noise so we got two new
00:08:54.440 Bops here so the R 2 2D and 3D so apply
00:08:59.200 play around with those some new noises
00:09:00.600 are always welcome we also have a second
00:09:04.160 set of noises that are new so these are
00:09:07.279 material X noises so circles
00:09:11.920 2D these should be new as well so you
00:09:14.519 can play around with that inside um
00:09:17.320 Houdini 20 let's go ahead and just wire
00:09:20.000 this into maybe the base
00:09:22.959 color see that's just a float but it
00:09:25.440 shouldn't matter let's just load up our
00:09:28.760 view there yep so we have a new noise
00:09:32.120 here that we can play with so you can
00:09:33.640 change the circle scale this be good for
00:09:36.440 creating um some some new procedural
00:09:39.440 materials using material X and stuff
00:09:41.600 always welcome to see some new noises
00:09:43.640 inside of karma I'm looking forward to
00:09:47.160 hopefully seeing some more with uh
00:09:49.560 material X and stuff as that starts to
00:09:51.920 develop further but we also have a new
00:09:54.360 hex tiling so karma hex tile texture we
00:09:58.079 have two different on ones in here so we
00:09:59.720 have tripler and we have a UV one so we
00:10:02.120 can just pop that
00:10:05.240 down and we
00:10:07.800 can wire that into our base color or
00:10:12.480 whatever and if we selected
00:10:15.680 a material so let's go ahead we'll move
00:10:19.399 to one let's
00:10:21.959 see uh actually they are on a different
00:10:24.800 hard drive so me find them real quick CG
00:10:28.560 NOP
00:10:32.519 wrong wrong hard drive again sorry about
00:10:35.560 that give this a second to load
00:10:38.920 up I did cover this in my first
00:10:41.639 impressions video so take a look at that
00:10:44.200 if you're interested but let's go ahead
00:10:46.760 and just load in any one of these maybe
00:10:49.920 maybe a fabric would be good to this
00:10:52.760 we'll do a blue fabric here and we'll
00:10:54.440 select just a diffuse
00:10:57.399 there and it's going to take a second to
00:10:59.440 load into material X but this is a new
00:11:01.839 way to get rid of some of the tiling
00:11:03.560 that you have in regular sort of
00:11:06.600 texturing processes so if I take a real
00:11:10.720 close look
00:11:12.120 here you can you can really see it in
00:11:14.760 here so let zoom in super far you can
00:11:18.079 see we have these little they're it's
00:11:19.480 kind of hard to tell what shape they are
00:11:21.680 but we have these textures that are
00:11:23.839 being randomly rotated um let's see
00:11:26.839 random rotation if we set this to zero
00:11:28.560 we should get
00:11:30.079 some of that back looks a little bit
00:11:32.959 less crazy but we get some of that
00:11:34.240 tiling kind of showing a little bit more
00:11:36.560 um so you can mess around with with that
00:11:39.040 and get rid of some tiling in your
00:11:40.800 scenes so definitely nice to have a new
00:11:43.160 way to to get rid of some tiling you
00:11:44.760 don't have to manually set up bunch of
00:11:46.480 masks and everything you can maybe get
00:11:48.000 away with using this hex tiled um
00:11:51.160 texture and then the other thing that
00:11:54.040 they have that's new that I want to
00:11:55.360 cover real quick is a new PBR texture
00:11:59.720 set vop so this is a way to just set up
00:12:04.440 your whole material I'm going to go
00:12:06.040 ahead and just delete some of these so
00:12:08.360 instead of having to load in a ton of
00:12:10.560 different uh image textures we have just
00:12:13.079 one node that kind of controls all of
00:12:15.040 these so we can bring in all of our
00:12:16.880 different material information in here
00:12:19.279 so if I wanted to bring in our fabric
00:12:22.160 we'll do our
00:12:24.240 diffuse um I don't see specular
00:12:27.639 roughness do
00:12:29.680 roughness can do
00:12:32.040 our look like it doesn't have height in
00:12:36.519 here um it didn't have color or opacity
00:12:40.760 I mean um I don't think metal it's not a
00:12:44.040 metal so don't need that one didn't have
00:12:46.760 any subsurface we'll just leave it like
00:12:48.360 this so let's just wire in our base
00:12:49.959 color and then we have our specular
00:12:52.320 roughness so we can wire that into our
00:12:53.839 specular input and specular
00:12:57.639 roughness and and if I restart this
00:13:01.399 render we should get that to to show up
00:13:05.399 and even if you don't um if you wire in
00:13:09.199 just the the default um like all these
00:13:13.160 the defaults we have these default
00:13:14.639 values allow us to um affect things so
00:13:19.000 even if I didn't have something loaded
00:13:21.000 into here so let's just delete
00:13:24.320 out these it's Sor it's going to load in
00:13:26.920 the default values of these so we have
00:13:28.519 one node that kind of controls
00:13:29.800 everything in the standard surface or
00:13:31.880 most of the things that you'd have in
00:13:33.040 the standard surface anyways so if I
00:13:35.160 change this base color you're going to
00:13:36.360 see there we get an update there um we
00:13:38.760 can change the specular roughness and
00:13:40.480 all that stuff as well so that's a super
00:13:43.320 nice node just to clean things up you
00:13:45.600 may not want it in every context but you
00:13:48.079 can use that uh to set up your textures
00:13:51.000 and just keep things a little bit more
00:13:53.160 clean it doesn't have everything from
00:13:55.600 the standard surface like it has the
00:13:58.320 emission color but it doesn't have like
00:14:00.560 the emission amount so if I come in here
00:14:02.839 come to emission it doesn't have this
00:14:04.480 emission like toggle so I'm not sure why
00:14:08.160 they did that but uh just know that
00:14:09.839 you'll have to do some things on the
00:14:11.440 standard surface still but most of it
00:14:13.800 will be on this pbrr texture set which
00:14:15.680 is super nice just to keep things a
00:14:17.480 little bit cleaner but anyways that
00:14:20.000 wraps up uh my little overview of some
00:14:22.199 of the things that you may not have
00:14:23.279 noticed that they have added to Karma
00:14:25.360 there is a bunch more of stuff obviously
00:14:27.560 uh some of the bigger things they
00:14:28.920 covered like the thin wall materialss
00:14:31.320 they have um thin wall stuff in the
00:14:34.800 transmission um some dispersion and
00:14:37.160 transmission stuff that they didn't have
00:14:38.680 before um so check uh the documentation
00:14:41.560 for all that stuff if you're interested
00:14:44.000 but um may take a look at that in the
00:14:45.920 future as well but anyways that is kind
00:14:49.480 of some of the newer stuff to Karma that
00:14:51.279 wasn't focused on super heavily in any
00:14:54.079 of the videos um that they showed off in
00:14:57.800 like the the demo so um just take a look
00:15:00.720 at all the new stuff take a look at the
00:15:02.320 documentation and see the new things
00:15:04.560 that you might have missed because
00:15:05.600 there's a lot there's actually a lot was
00:15:07.160 added to Karma ton of different things
00:15:09.199 in there but anyways thank you for
00:15:11.920 watching I have a bunch of other stuff
00:15:13.600 on Houdini on my channel so if you want
00:15:15.320 to learn more about Houdini make sure to
00:15:17.720 check out those videos I also run a
00:15:20.519 patreon which is free to follow by the
00:15:22.000 way if you want to follow that you can
00:15:24.480 do that the link is in the description
00:15:27.320 I'm going to be dropping some free stuff
00:15:29.480 on there so make sure you follow that um
00:15:31.720 and don't miss any of that stuff I've
00:15:33.720 already put up some of the stuff some
00:15:35.360 stuff for free so grab that if you're
00:15:37.000 interested obviously I have some paid
00:15:38.560 stuff on there as well you want to grab
00:15:40.319 a bunch of my project files basically
00:15:41.920 from the last like year and a half or so
00:15:44.160 then make sure to jump on over there and
00:15:46.480 grab those if you're interested I've got
00:15:48.160 a ton of different things on there
00:15:51.240 anyways thank you guys for watching like
00:15:52.720 said check out the other videos on my
00:15:54.000 channel if you want to learn more about
00:15:55.399 Houdini and have a good day
00:16:04.079 oh

----------------------------------------
Contents of YouTube-Transcript/HoudiniSideFx/Houdini 20 HIVE.txt:
# tactiq.io free youtube transcript
# Houdini 20 HIVE
# https://www.youtube.com/watch/gQDaZFjPlI4

00:00:00.060 [Music]
00:00:05.279 good
00:00:11.320 morning G I'll just have to oh no I'm
00:00:14.000 back okay uh yeah thanks for getting up
00:00:16.400 early I know it's a bit rough it was
00:00:18.039 certainly rough for me I can't remember
00:00:19.199 the last time I took a train in this
00:00:20.600 early uh I spot some people all the way
00:00:23.080 over here on the edge I will say if you
00:00:25.119 cannot see the Houdini logo down here
00:00:27.240 you're probably too far to the side you
00:00:28.760 might want to move in a couple of seats
00:00:30.039 otherwise you're going to definitely
00:00:30.880 miss stuff that's cut off from the
00:00:32.479 screen so you've been
00:00:34.559 warned um so in preparation for this
00:00:38.360 presentation I thought I should figure
00:00:39.960 out what the heck it is I've actually
00:00:41.640 been working on for the last three years
00:00:43.280 is it Solaris or is it Solaris so quick
00:00:46.960 poll and I promise this is the only bit
00:00:48.320 of audience participation who says
00:00:50.640 Solaris hands
00:00:52.760 up okay who says
00:00:55.359 Solaris and who just really doesn't care
00:00:57.600 and wants to go back to the yummy
00:00:58.879 breakfast buffet yeah yeah good for you
00:01:00.800 no judgment no judgment that's
00:01:02.000 completely Fair okay so my supervisor
00:01:04.720 had a good idea and he absolutely read
00:01:06.720 my mind because I was already on YouTube
00:01:08.479 looking at the trailer uh much to my
00:01:10.960 disappointment they don't actually say
00:01:12.759 the title of the film even once during
00:01:14.680 this
00:01:15.479 trailer so who do you turn to when
00:01:18.200 people Magazine's two times sexiest man
00:01:20.079 alive fails you you turned to Kristen uh
00:01:23.400 so yeah there you go mystery solved uh
00:01:25.320 and in case you're ever looking to
00:01:26.600 impress your friends at the pub it's
00:01:28.439 Solaris darling
00:01:30.960 so what's new in Houdini 20 for
00:01:33.320 Solaris well I think this image is a
00:01:35.720 pretty good place for me to start and it
00:01:37.479 kind of brings together a bunch of new
00:01:39.520 or improved functionality so let me
00:01:42.399 switch over uh and here we are in
00:01:44.759 Houdini 20 and what we've done here is
00:01:47.280 to add a new desktop uh the Solaris look
00:01:49.520 Dev desktop which I'm going to be using
00:01:51.399 it is most of the same things you've
00:01:52.640 seen previously in Solaris but shuffled
00:01:54.560 around a little bit uh particularly
00:01:56.159 targeting people doing look Dev or
00:01:58.200 rendering uh we've moved some of the
00:02:00.560 scene graph stuff over here to the left
00:02:04.119 um which allows you just kind of more
00:02:05.240 screen real estate for long lists of
00:02:07.399 scene content so I mean rather than
00:02:08.878 having to scroll scroll scroll you can
00:02:11.160 see more of your scene graph prims and
00:02:13.400 their attributes at a glance um I mean
00:02:16.640 previously all of this stuff was shoved
00:02:18.760 under the viewport uh kind of in this
00:02:21.239 area here um and it meant that if you
00:02:23.480 wanted to see more of it you'd have to
00:02:25.080 sacrifice space in the viewport itself
00:02:27.480 and certainly in the context of
00:02:28.480 rendering having a having a nice view
00:02:30.000 Port it's kind of important uh we kept
00:02:32.160 the node graph Network and the
00:02:33.400 parameters over here uh and then we just
00:02:36.080 added some auxilary tools under the
00:02:38.040 viewport now and we'll talk about some
00:02:40.159 of those in a little bit now what I'm
00:02:42.200 showing on this screen here is the
00:02:43.760 desktop at HD resolution 1920 x 1080
00:02:46.760 with Houdini's UI scale at 100 and I
00:02:48.840 just mentioned that to give you a vague
00:02:50.159 sense of how much space the various
00:02:51.720 components take up I expect most of you
00:02:54.000 guys are running probably QHD or 4K or
00:02:56.040 something in which case you'll have even
00:02:57.360 more space on your monitors um the the
00:02:59.920 text may be a little bit small to read
00:03:01.319 from the very back of the room and I
00:03:02.440 appreciate that so for the purposes of
00:03:04.159 the demo today I'm going to switch over
00:03:06.080 to this instance of Houdini where I've
00:03:07.799 increase the UI skill to 140% but
00:03:10.239 otherwise everything's exactly the
00:03:12.599 same okay enough of that desktops let's
00:03:14.879 talk about the scene itself uh we can
00:03:17.159 see here that in this scene we've got
00:03:19.080 the starting point of an eagle uh and
00:03:21.360 it's got a groom for the feathers uh
00:03:23.400 with a collection of Curves kind of up
00:03:25.720 and down each of the Wings as
00:03:27.239 placeholders for them now I can go over
00:03:30.159 to the scene graph um the list of those
00:03:32.680 prims and have a look at this guy here
00:03:35.560 groom a rest and we can see that it's
00:03:37.560 got various information that suggests
00:03:39.200 it's ready to set up those feathers it's
00:03:40.879 got some color
00:03:42.159 attributes uh it's got attributes for
00:03:44.560 the positions of the barbs um some width
00:03:47.640 just lots and lots of Prim vars now in
00:03:50.680 Houdini 19.5 we introduced rendertime
00:03:53.599 proceduralism with our new fur
00:03:55.640 procedural new at the time fur
00:03:57.599 procedural and in Houdini 20 we've
00:04:00.079 extended that with a feather procedural
00:04:02.319 as well and you're going to hear about
00:04:03.439 that throughout the day so that's what
00:04:05.239 we're seeing here uh we've got this
00:04:06.760 feather procedural node we can specify
00:04:08.599 where we want the procedur to go uh
00:04:11.319 where we those curves are the
00:04:12.799 ingredients to that feather recipe so if
00:04:15.319 we go ahead and we scroll all the way
00:04:16.720 down down down down down to the bottom
00:04:18.320 of this node graph uh to where we're
00:04:20.279 currently displaying our Karma render
00:04:21.560 settings we can add in a preview whoin
00:04:24.000 procedurals note and then we'll just
00:04:25.960 kind of wait for a few seconds for that
00:04:27.280 procedural to actually execute in the
00:04:29.120 background
00:04:30.400 so now we've got a nice dense
00:04:31.880 representation of our feathers and we'll
00:04:33.320 put the display flag on there uh which
00:04:35.000 will restart Karma it's going to go and
00:04:37.320 ingest all that new geometry which the
00:04:39.240 procedural created for us uh so I'll
00:04:41.600 just give it a second to do that oh
00:04:42.880 there we go there is our Eagle in all of
00:04:45.479 its glorious detail and now we can see
00:04:48.440 these prims here these are our final
00:04:50.520 feathers with rather an enormous amount
00:04:52.560 of geometric detail so we've got here
00:04:55.479 what that 1.3 million Cur yeah about 1.3
00:04:58.400 million curves and that's just for for
00:04:59.880 the head uh that groom a um so yeah
00:05:03.759 we've got render time feather system
00:05:05.600 going now we can switch to maybe a
00:05:08.000 different camera to get more of a
00:05:09.240 close-up on the head uh let's switch to
00:05:11.840 camera two actually let's switch to
00:05:13.240 camera one I think this gives us a nicer
00:05:14.919 close-up view here then in terms of
00:05:17.199 lighting right now we just have that
00:05:18.880 default that headlight which is blasting
00:05:20.720 straight at the Eagle aligned with the
00:05:22.400 camera it's not particularly interesting
00:05:25.680 so instead let's talk about a new
00:05:27.280 lighting system that we've introduced
00:05:28.880 into Houdini our new physical Sky system
00:05:31.479 so I'll add in a Karma physical sky to
00:05:33.319 the scene and I'll just kind of move it
00:05:35.520 over here a little bit so that we can
00:05:37.039 see actually let me crank up the
00:05:38.600 exposure it's a bit dark to begin with
00:05:41.199 okay that looks pretty good so if we go
00:05:43.080 over to the scene graph we can see that
00:05:44.319 we've got two lights which have been
00:05:45.520 added to the scene we've got the sky
00:05:47.000 which is a Karma Sky doome light and
00:05:48.600 it's worth pointing out at this point
00:05:49.960 this is a Karma specific light and then
00:05:52.520 we've got our sun uh which is just a
00:05:54.960 normal USD vanilla distant light the
00:05:57.880 Skydome light here it's got it color are
00:05:59.759 nicely driven by various research papers
00:06:01.720 that we've uh implemented on daylight
00:06:03.840 equations and in terms of control if we
00:06:05.919 go over to the parameter dialogue you
00:06:07.280 can see that we can specify the uh
00:06:09.160 angles of the Sun so like right now it's
00:06:10.800 about 45 degrees up from the Horizon 0
00:06:13.560 degrees away from The Zed axis and we
00:06:15.599 can go and we can swing this around
00:06:17.080 maybe
00:06:17.880 180° and it's a little bit closer now to
00:06:20.160 that headlight setup that we had
00:06:21.759 previously or maybe we put it somewhere
00:06:23.680 in the middle kind of more for a side
00:06:26.000 lighting effect but rather than
00:06:27.840 specifying angles it's not particularly
00:06:29.800 friendly thing to do we can also drive
00:06:31.720 this with geographic information kind of
00:06:33.280 based on the where and when we are so
00:06:35.160 let's do that so today is the 26th of
00:06:37.880 October uh it's still daylight savings
00:06:40.039 time just for another week uh right now
00:06:41.960 it's about 9:30 in the morning give or
00:06:44.440 take um so this is about what we would
00:06:48.120 expect it to look like outside right now
00:06:50.000 if you were to leave the cinema and spot
00:06:51.280 an eagle on the streets of Soho um the
00:06:53.880 sun is just starting to come up well
00:06:55.560 hopefully if it's not raining still uh
00:06:57.879 we've got that nice kind of early
00:06:59.039 morning
00:07:00.199 going on that kind of nice orangey color
00:07:01.800 to to the lighting and we can see all of
00:07:03.720 the color is being handled dynamically
00:07:05.240 for us we didn't have to dial that in we
00:07:07.599 just got that kind of for
00:07:09.319 free now what I want to do is have a
00:07:11.360 more Global control over the time of day
00:07:14.080 so I'm going to go and drive that with a
00:07:16.199 context option here I'm going to add an
00:07:18.599 integer slider which we can kind scrub
00:07:20.680 back and forth and go ahead and set some
00:07:22.759 things here we'll call this hour hour of
00:07:24.400 the day and we want it to be set
00:07:26.199 anywhere between 0 and 24 and midnight
00:07:29.319 to to midnight all right perfect and now
00:07:32.160 we can go over here back to our um parm
00:07:35.080 for the light and drive this with the
00:07:36.720 context option so context
00:07:38.560 option hour and yep right now it's zero
00:07:41.840 that's good and then if we scrub the
00:07:43.560 slider here we can see it doesn't work
00:07:46.080 I've done something wrong here and ah
00:07:49.319 hour with an R not who sorry metal
00:07:51.240 memory I'm so used to typing who hour
00:07:54.360 okay perfect so now we can scroll
00:07:56.360 through the day here we can do a super
00:07:57.599 early morning kind of midnight morning
00:07:59.599 midafternoon all the way through to the
00:08:01.680 evening and you can see the sky color
00:08:03.479 changing really nicely for us so I mean
00:08:05.400 this is a really nice and simple way to
00:08:07.639 get a compelling lighting setup with uh
00:08:10.159 very little effort that feels very
00:08:11.919 physically plausible and it's certainly
00:08:13.360 a heck of a lot more interesting than uh
00:08:15.840 just that vanilla headlight so now that
00:08:18.039 things are starting to look reasonably
00:08:19.199 nice let me go and talk about some of
00:08:21.520 the improvements or additions that we've
00:08:23.080 made to the render Gallery um so I'm
00:08:26.000 going to go down here and open up the
00:08:27.560 render gallery and actually you know
00:08:28.840 what I'm going to spin this off as a
00:08:30.840 separate window uh and make it quite a
00:08:33.080 bit bigger this going to be the star of
00:08:35.039 the show for a little bit here all right
00:08:37.320 there we go now the first thing I want
00:08:39.120 to do is take a snapshot of the viewport
00:08:41.360 and by what I mean what I mean by that
00:08:43.000 is that I want to take a picture of this
00:08:44.880 picture here this uh this image that
00:08:46.519 we're seeing so we'll go and click snap
00:08:48.720 and there we go there's our rendered
00:08:50.440 image at this point uh 1,200 by 700
00:08:53.160 pixels displayed at one: one and this
00:08:55.600 may seem like a small thing that I'm
00:08:57.760 about to talk about but this was
00:08:58.959 probably actually the number one user
00:09:00.760 request for the render Gallery uh in
00:09:03.040 Houdini 19.5 when you captured a
00:09:05.120 snapshot you only got the pixels that
00:09:07.399 were visible in the viewport uh but in
00:09:10.000 Houdini 20 you actually get all the aovs
00:09:12.600 in one go you don't have to take a
00:09:14.079 snapshot per aov so we've got the albo
00:09:16.200 the combined diffuse reflection so on
00:09:18.160 and so forth now one of the things
00:09:20.560 that's kind of nice is that when we
00:09:22.240 recognize that you've captured a depth
00:09:24.000 Channel we auto adjust the range you can
00:09:26.360 see those values there as you get this
00:09:28.480 nice black to white gradients you can
00:09:30.240 actually see in the viewport immediately
00:09:32.279 what the depth looks like if I were to
00:09:34.160 reset those to the default you just get
00:09:36.040 this completely blown out image which
00:09:37.640 doesn't really give you useful
00:09:38.760 information unless you open up the
00:09:40.200 inspector which you can do you can look
00:09:41.760 at the values there they are they're
00:09:42.800 like 1.3
00:09:44.320 1.4 um but it's not helpful at a glance
00:09:47.720 so let's go back to our color image uh
00:09:49.680 we can see the eagle and yeah it's
00:09:51.399 looking pretty good now one of the
00:09:53.440 newest things that's hopefully going to
00:09:54.720 get you excited is this little button
00:09:56.720 over here this is for our new render
00:09:58.839 stats now previously we had a way of
00:10:01.079 displaying some limited render stats
00:10:03.000 over here in the corner of the screen or
00:10:05.160 you could click on the I icon and you
00:10:07.120 could get a fairly raw list of some
00:10:08.880 stats here but it really was painful to
00:10:10.839 work with it not very insightful uh but
00:10:13.640 now when we click this button over here
00:10:15.560 we have a brand new render stats pane
00:10:17.680 with lots of pretty colors and graphs
00:10:19.720 and just loads and loads of data uh for
00:10:22.079 you to inspect so you can see that at
00:10:24.399 the time that we took this snapshot we
00:10:27.000 are a little bit less than a minute into
00:10:28.800 the render maybe 2/3 3/4 of the way
00:10:32.720 in um I mentioned this was already a
00:10:35.440 1200 x 700 pixel uh it's rendering on my
00:10:37.959 home PC which has got 24 threads on it
00:10:40.560 it's not terrible not too amazing but
00:10:42.880 not too terrible and we can start to see
00:10:45.120 more information about the scene itself
00:10:47.519 here uh we have six collections of
00:10:50.320 Curves eight cameras I mean obviously we
00:10:51.920 have lots of individual curves but in
00:10:54.240 terms of the USD prims we only actually
00:10:56.240 have six of them like the the head the
00:10:57.720 wings the body and so on so forth
00:11:00.320 uh and the scene itself is only being
00:11:01.800 lit by those two lights we've got the
00:11:04.040 environment light which is our sky and
00:11:05.800 we've got the distant light which is our
00:11:08.920 sun uh we can dive down further and look
00:11:11.079 at the time spent for the rendering we
00:11:12.560 can see that lighting and shadows were
00:11:14.120 the bulk of all of this uh we've got
00:11:16.959 various Ray types uh we've got Shader
00:11:19.680 calls lots of stuff there's a bit of
00:11:21.920 information about my home PC in case you
00:11:23.600 care 12 cores 24 threads so yeah
00:11:26.360 hopefully you guys think this is
00:11:27.880 something super cool it really gives you
00:11:29.079 good insight into what's going on with
00:11:31.959 your render and you can compare these
00:11:34.120 things over time as well so if I take
00:11:36.040 another snapshot of the same render um
00:11:38.959 but now it's been finished obviously
00:11:40.160 it's continued to be running into
00:11:41.279 viewport in the background I can kind of
00:11:43.320 bounce back and forth between these to
00:11:44.800 see how the things have progressed so
00:11:47.560 initially at the first snapshot we were
00:11:49.360 about 56 58 seconds in now it was like a
00:11:51.920 minute and a half to finish it uh we can
00:11:54.600 look at how much time was spent in those
00:11:56.720 different areas see whether the
00:11:58.200 percentages have maybe changed changed
00:11:59.680 whether the overall costs have changed I
00:12:02.160 mean obviously there have been a lot
00:12:03.279 more Rays fired in those remaining 30 to
00:12:05.560 40 seconds that it took I don't want to
00:12:07.920 go over each of these stats in detail
00:12:09.839 I'll let you guys play with all of that
00:12:11.639 and certainly if you then export these
00:12:13.240 into an HTML stats it just gets even
00:12:15.360 more and more kind of rich in terms of
00:12:17.160 the data that you can inspect and get a
00:12:19.279 better sense of why your scene either is
00:12:21.600 or isn't as performant on the render
00:12:23.480 Farm as you expect it should be what you
00:12:25.560 could possibly do about
00:12:27.639 it so let's switch back Solaris here
00:12:30.079 Solaris here sorry it's hard for me I'm
00:12:32.600 used to calling it Solaris I'm going to
00:12:34.000 talk about this new clone control panel
00:12:35.600 because it's super powerful uh it's a
00:12:37.320 really amazing way of enabling all kinds
00:12:39.360 of interesting workflows for wedging and
00:12:42.079 comparison um and I'm just going to make
00:12:44.040 this our primary view at the point at
00:12:45.600 this point I'm going to kind of get rid
00:12:46.839 of the the viewport and with this
00:12:49.480 cloning control panel we can spin up
00:12:51.720 effectively parallel instances of
00:12:54.160 Houdini which will be instantly synced
00:12:56.399 with this running one um and receive any
00:12:59.399 changes from this session so anything we
00:13:01.000 change in this session of Houdini will
00:13:02.440 be immediately propagated to those
00:13:04.079 instances of Houdini and what we're
00:13:05.680 going to get back is streamed imagery of
00:13:07.480 their kind of virtual viewports so let
00:13:09.440 me go ahead and do this now I'm going to
00:13:11.920 go ahead and say that I want a local
00:13:13.519 clone uh I'm only going to allocate four
00:13:15.720 threads for now just so I can run a
00:13:17.199 bunch of these without completely
00:13:18.320 trashing uh my machine's
00:13:20.639 performance um and we'll go ahead and
00:13:22.760 we'll do that and what we want to do we
00:13:25.079 want to use this Lop for our rendering
00:13:28.000 uh we're going to want to use camera 5
00:13:31.000 and everything else I think we can
00:13:33.480 probably leave it at the defaults that
00:13:35.880 should be fine so we'll just wait for
00:13:39.160 this to kind of spin up at this point it
00:13:41.320 is now launching a new version of
00:13:42.720 Houdini in the background on my machine
00:13:45.000 uh syncing over that Lop Network and
00:13:47.120 then starting to actually render it
00:13:48.760 using Karma uh while we're waiting I'll
00:13:51.360 mention that much as I I chose to do a
00:13:53.199 local clone we could have instead done
00:13:54.639 an HQ clone in which case it would have
00:13:56.360 picked up a machine from the render Farm
00:13:57.759 if I had access to an empty render Farm
00:13:59.759 unfortunately I didn't at the time um
00:14:01.639 and that's just why I chose the the
00:14:03.079 local option okay so now this thing's
00:14:05.600 rendering we can see the progress is
00:14:07.440 updating and we can have a look at a
00:14:09.399 thumbnail of what's going on on that
00:14:11.279 remote instance of Houdini by clicking
00:14:12.800 this little I icon here and we can see
00:14:14.759 our Eagle uh or we can switch back to
00:14:16.959 the render Gallery where these images
00:14:18.360 are also streamed to so we can see the
00:14:20.079 eagle here you can see the progress bar
00:14:22.040 updating on the top of it um and you'll
00:14:24.880 also see that our render stats are being
00:14:26.399 updated live so these render stats
00:14:27.800 aren't just a static thing this render
00:14:29.600 stats pan it's receiving live
00:14:31.120 information from our cloned instance and
00:14:33.120 its render which is all running on my
00:14:35.079 machine in the background now I said we
00:14:37.920 were using camera 5 before that's
00:14:39.279 actually not true we did use camera 5
00:14:41.000 initially but then we switched it uh to
00:14:43.240 kind of that closeup image so this image
00:14:44.880 here was using camera one uh so let me
00:14:47.959 flick back to the uh control the Clone
00:14:50.880 control panel and uh change that so
00:14:53.720 let's go to the camera drop down here
00:14:55.279 and change that from camera 5 to camera
00:14:57.320 1 and automatically that is going to be
00:14:59.959 sent to that cloned instance it's going
00:15:01.800 to start to render and we can see that
00:15:03.839 reflected immediately it started to
00:15:05.519 render we see that in render Gallery
00:15:07.079 we've got our new render here the render
00:15:08.880 stats have all reset again for this new
00:15:11.360 render um and so on and so forth it just
00:15:14.480 kind of continues through this so there
00:15:16.800 are lots of interesting uh things that
00:15:19.040 can be controlled with this uh cloning
00:15:21.399 control panel I showed you the obviously
00:15:23.480 the camera uh we specified the Lop note
00:15:26.399 that we wanted to render so we could
00:15:27.560 render from any Lop note within this lob
00:15:29.920 Network any camera that we've got in
00:15:31.800 this lob Network we could choose a
00:15:34.040 different renderer for each instance uh
00:15:37.120 we can choose a different frame for each
00:15:38.959 instance and that's quite interesting
00:15:40.240 because this then opens up the
00:15:41.639 possibility of giving you really good
00:15:43.600 insight into what will happen in a
00:15:45.600 multiframe or multi-shot um uh scene
00:15:49.319 file you might want to see how lighting
00:15:51.680 affects your scene over multiple frames
00:15:53.560 throughout it with having to jump
00:15:54.680 between the timeline you could just kick
00:15:55.959 up 10 instances each with a different
00:15:58.160 frame uh and then see all of them
00:16:00.440 rendering at once so let's go back to
00:16:03.519 the global control I had for the hour of
00:16:05.560 the day um and show that if I set that
00:16:08.319 again this comes back to showing the
00:16:09.560 syncing is working if I change something
00:16:11.399 in my Lop Network that parallel version
00:16:13.600 of Houdini immediately picks it up so if
00:16:15.560 I set it to kind of 4:30 in the morning
00:16:17.279 or 6:30 in the morning um suddenly it
00:16:20.040 starts to kind of pick that up and
00:16:21.240 render which is is nice we'll set it to
00:16:23.079 kind of a mid-afternoon thing here A
00:16:24.680 nice bright lunchtime render so like I
00:16:27.199 said these instances they're going to
00:16:28.399 pick up any Lop changes that affect it
00:16:31.720 um and in this case I was just playing
00:16:33.240 with the lighting but it could be really
00:16:35.839 anything at all now I mentioned that
00:16:37.920 this can be used as a wedging tool
00:16:40.480 whether it is over time if you want to
00:16:43.399 see things across multiple frames in
00:16:45.639 your sequence or some other kind of
00:16:48.600 variation so let's go ahead do that over
00:16:51.040 the time of day for our light we'll go
00:16:54.000 and we'll add a context option
00:16:56.240 column and we're going to override the
00:16:59.120 no no not who hour this time with an R
00:17:01.440 thank you um and when we go over here we
00:17:04.319 can see that we've got an our column and
00:17:06.559 it defaults just to the vanilla vers
00:17:08.319 vanilla value for that context option
00:17:10.160 hour but we can go and put in an
00:17:11.760 explicit value here we can put in four
00:17:13.760 if we want to render four in the morning
00:17:15.079 or 4:30 because we left the the minute
00:17:17.439 set to 30 um and now we've got that we
00:17:20.919 can create a couple of clones of this
00:17:22.559 instance clones of our clones
00:17:24.319 effectively we can duplicate them and
00:17:26.039 for each of these we can leave
00:17:27.079 everything exactly the same but override
00:17:29.080 this context option so we're going to
00:17:31.160 want to render at 4:30 in the morning
00:17:32.760 10:30 in the morning and 3:30 in the
00:17:34.640 afternoon and I'll just update these
00:17:35.799 labels here as well so we got 4:30 uh we
00:17:39.080 got
00:17:39.880 10:30 if I can actually type there we go
00:17:43.480 and then 3:30 3:30 3:30 in the afternoon
00:17:47.600 perfect and like I said these are all
00:17:49.240 going to otherwise be exactly the same
00:17:51.760 we just want to override that uh context
00:17:54.720 option which is going to override uh the
00:17:57.280 karma physical sun and sky bu system so
00:18:00.559 now let's go and power these ones up
00:18:02.320 here and we'll wait for those instances
00:18:03.880 to fire up on my machine wait for them
00:18:05.760 to sync the Houdini session like sync
00:18:07.360 over the Lop Network expand the
00:18:08.679 procedural get karma rendering all that
00:18:10.559 good stuff okay so now we got the first
00:18:12.919 render kicking in here it's our 1030
00:18:14.640 render and here comes our 330 render as
00:18:16.919 well and if we flick back to uh the
00:18:19.520 render Gallery we can see we've got all
00:18:21.520 three things three of these rendering
00:18:23.720 now in parallel are 4:30 10:30 and 3:30
00:18:26.039 in in the afternoon our midday renders
00:18:29.520 and these even though they're live
00:18:30.880 renders they can still go through some
00:18:32.159 of the other nice things that we've got
00:18:33.320 under render Gallery so we can do
00:18:34.480 diffing for example if we want to see
00:18:36.120 and do a comparison between a 1030
00:18:38.000 render and a 330 render we can do that
00:18:41.080 and hopefully it comes through on the
00:18:42.919 screen here that we're actually
00:18:44.159 receiving live pixels being streamed in
00:18:46.280 this live render still continues to kind
00:18:47.840 of pipe in the new pixels into our
00:18:50.039 viewport and similarly it still
00:18:51.960 continues to generate new stats into the
00:18:54.039 render stats pane um just to say that
00:18:56.039 the stats you get are going to be for
00:18:57.280 the image on the left the a im rather
00:18:59.240 than the uh the B
00:19:01.000 image okay so what else is new well
00:19:04.200 rather a lot actually U but I'm going to
00:19:05.880 try to whip through three areas in
00:19:08.000 specific and then I'll leave the rest to
00:19:09.919 your future Discovery so here we are
00:19:12.760 back in Houdini again I'm back in our
00:19:15.000 look Dev desktop and I've got a simple
00:19:17.000 scene here with a boat uh a camera our
00:19:19.679 physical sun sky system that I talked
00:19:21.400 about earlier uh and one of the
00:19:23.520 procedurals that we've added into
00:19:24.640 Houdini 20 is the new ocean procedural
00:19:27.320 so I can go up to the top here up to the
00:19:29.120 ocean Tab and choose a small ocean to
00:19:32.080 add to my scene so this is actually
00:19:34.480 switched just over to the S context it's
00:19:36.559 Dro down the basic ocean setup here
00:19:38.440 we've got our grid uh the Spectra that
00:19:42.400 comes from that sorry one
00:19:45.960 second much better um and then the the
00:19:49.440 foam that comes with it as
00:19:51.440 well and if we look at the path here we
00:19:53.600 can see this is all actually housed in
00:19:55.320 stage so if we go to the root of it all
00:19:57.960 we can see that in addition it's dropped
00:19:59.600 down a Houdini ocean procedural node for
00:20:01.720 us and we've got a bunch of controls
00:20:04.480 here uh things that we can change about
00:20:06.919 the waves things that we can change
00:20:08.320 about the foam and and whatnot I I
00:20:11.000 really don't want to go over any of
00:20:12.480 these in detail right now just to say
00:20:14.720 that they are they're there they're
00:20:16.600 things that you can uh play with so I'll
00:20:18.840 put the display flag down here and we
00:20:20.360 can see that we just start with a flat
00:20:22.840 plane um I'll zoom out a little bit and
00:20:24.840 we can see that yep there's our ocean
00:20:28.120 our small so let me look through the
00:20:29.799 camera again and I'm going to drop down
00:20:31.840 a preview procedurals note so that we
00:20:33.919 can actually get it to expand in the
00:20:36.000 viewport and very quickly we can see
00:20:38.400 that we're able to make out some wave
00:20:39.679 patterns here now if I go back to the
00:20:42.120 procedural note itself one of the
00:20:43.760 controls is a viewport quality node uh
00:20:47.080 and this is functionality that's new in
00:20:48.480 Houdini 20 uh the procedurals now know
00:20:51.159 whether they're executing in an offline
00:20:53.159 renderer or in the viewport and they can
00:20:55.679 take advantage of that they can
00:20:56.880 specialize the code path that they go
00:20:58.880 through so if I go ahead and crank this
00:21:00.919 up to 7 uh it's going to take longer to
00:21:03.120 run uh but we can see that the quality
00:21:05.600 of the ocean is now much much higher
00:21:07.480 than it was previously now what's
00:21:09.640 actually happening and this is also new
00:21:11.640 for procedurals is that the surface is
00:21:13.279 being subdivided based off of the USD
00:21:15.240 render camera so if I choose to kind of
00:21:17.720 zoom out a little bit here um the camera
00:21:20.520 information is being passed to the
00:21:21.480 procedural and we can see that is being
00:21:22.880 used to to drive a very localized uh
00:21:25.640 subdivision it's only this little patch
00:21:27.600 of ocean that's visible from the camera
00:21:29.159 that's being subdivided and the rest of
00:21:30.440 the ocean it's still quite coarse I mean
00:21:32.400 this is just a fabulous optimization if
00:21:34.159 you have like a traveling camera over a
00:21:36.159 rather enormous ocean so looking back
00:21:38.200 through the camera again we've got a
00:21:40.400 great material in Houdini GL I should
00:21:42.360 say this is the GL viewport this is not
00:21:44.799 uh Karma uh and I think it looks pretty
00:21:47.640 nice uh but let me go ahead and drop
00:21:49.520 down a render Rob and we'll compare it
00:21:51.159 to kind of our final final result um so
00:21:54.039 here it is in karma xpu all its uh Glory
00:21:58.240 yeah not
00:21:59.840 bad okay rigid body destruction um
00:22:03.080 something that's not particularly new to
00:22:04.720 Solaris I mean we've had this rigid body
00:22:06.559 destruction node for a little while now
00:22:08.440 uh but we've done in Houdini 20 is to
00:22:10.120 add a new mode to it I'm going to first
00:22:12.279 talk about the default setup that we
00:22:13.720 used to have in 19.5 we have um an
00:22:16.640 output type uh parameter and it was set
00:22:19.799 to transforms and what this meant is
00:22:22.120 that if you to look over here in your
00:22:23.520 seene graph tree and expand a rubber toy
00:22:26.080 geometry or I guess it's the collection
00:22:28.360 of of rubber toy geometries as it were
00:22:30.760 each one of those little rigid body
00:22:32.400 shards ends up with its own USD Prim um
00:22:35.480 it just kind of goes on and on and on
00:22:37.240 and on it's a lot lot lot of scene graph
00:22:39.400 entries and I mean this this is a pretty
00:22:41.840 simple scene if you imagine a real
00:22:43.240 production scene with a a house being
00:22:45.120 blown up or something like that you
00:22:46.960 could potentially have hundreds of
00:22:48.279 thousands of or millions of USD prims uh
00:22:52.200 and it really slows down the processing
00:22:54.200 in in USD now I mean the cache itself uh
00:22:57.159 is actually quite lightweight
00:22:59.480 uh if I expand this again it is just
00:23:01.240 those Transformations which are being
00:23:03.559 written out so it really is just kind
00:23:04.919 like a transformation matrix and maybe
00:23:06.400 some velocities angular velocities but
00:23:08.760 the main issue here is just the sheer
00:23:10.559 number of USD prims uh and further to
00:23:13.799 this performance not super super great
00:23:16.919 if I play back this scene here we can
00:23:18.480 see that we're not even breaking six
00:23:20.000 frames a second it's five five and a
00:23:22.200 half frames maybe um so yeah not good
00:23:25.919 let's say and we've had the same problem
00:23:28.640 or maybe trade-offs with different
00:23:29.760 problems with the other modes that we
00:23:31.320 had here so native instances uh kind of
00:23:34.520 has the same problem as transforms just
00:23:37.000 kind of lots and lots of entries poer
00:23:39.400 same thing you're going to have a
00:23:41.000 geometry for each rigid body piece
00:23:42.600 you're going to have hundreds of
00:23:43.520 thousands or millions of USD prototypes
00:23:45.960 in your uh in your
00:23:48.240 scene um the deforming mesh uh kind of
00:23:50.679 Trades off that
00:23:52.440 problem so you end up with only the the
00:23:55.000 one Prim the one geometry but then you
00:23:57.320 have to cach every single vertex for
00:23:59.320 every single piece so you're cashing out
00:24:01.159 Millions tens of millions hundreds of
00:24:02.760 millions of vertices which that's pretty
00:24:05.080 heavy on disk um prohibitively expensive
00:24:08.360 most
00:24:09.240 likely so in Houdini 20 we added a new
00:24:11.760 mode this procedural mode and we like it
00:24:13.320 so much we've actually made it the
00:24:14.880 default um so I'll switch to that and
00:24:17.039 I'll immediately go to actually just
00:24:18.400 playing back the scene and we can see
00:24:20.600 that the performance where it was
00:24:21.799 previously five and a half frames a
00:24:23.360 second we've now more than doubled that
00:24:24.919 we're now up at around 12 frames a
00:24:26.799 second um so again not lightning speed
00:24:29.880 but doubling it is already a pretty huge
00:24:31.679 win now better than that we really have
00:24:34.120 the best of all of the previous modes
00:24:36.080 here if I go and look at the prims if I
00:24:38.279 expand out our seam graph tree we have
00:24:41.039 just the one mesh that one static mesh
00:24:43.480 that we need to cash out it's not
00:24:45.320 animated it's one static mesh and all
00:24:47.679 that's actually being animated is a
00:24:49.640 point Cloud we have this RBD destruction
00:24:53.080 uh Point cloud and I'll just turn on the
00:24:55.520 visibility Flags so we can actually see
00:24:57.640 it and I'll turn off the preview
00:24:58.720 procedural as well so here are the
00:25:01.200 particles this is effectively what's
00:25:03.159 being simulated or animated this is
00:25:04.919 what's being cashed out to dis so we're
00:25:06.919 not Cashing Out hundreds or millions of
00:25:08.520 prims we're not Cashing Out tens or
00:25:11.000 hundreds of millions of vertices uh in
00:25:13.760 this case it's just a lightweight
00:25:15.159 particle count in this case like 250
00:25:17.399 particles obviously in a production
00:25:18.679 scene it's going to be a lot more but
00:25:20.880 far far far less than the number of
00:25:22.880 vertices that would otherwise have been
00:25:26.080 involved okay enough about procedurals
00:25:28.039 let's talk talk about materials so our
00:25:30.799 material Linker node has been improved
00:25:32.919 pretty greatly and in particular what I
00:25:35.000 want to highlight is we now have a
00:25:36.520 catalog with loads and loads and loads
00:25:39.240 of outof the-box materials in it you get
00:25:41.360 all of these right from day one and we
00:25:43.720 can drag these materials into the
00:25:45.600 material list over here so let's grab
00:25:48.120 our wood let's grab a granite and that
00:25:50.480 Green Glass looks pretty nice as well
00:25:52.640 and from here we can drag these directly
00:25:54.120 onto the geometries in the viewport and
00:25:56.200 assign them pardon me
00:26:00.200 so 1 two 3 materials uh for 1 two 3
00:26:04.640 geometries there we go that's looking
00:26:06.600 pretty good now just in case the
00:26:08.279 materials we've provided out of the box
00:26:10.039 aren't enough uh We've also integrated
00:26:11.960 the AMD material X Library into solarist
00:26:14.600 so you just specify where you want
00:26:15.919 downloads to go and boom uh we'll start
00:26:18.799 to get access to that material library
00:26:20.440 for us and initially this is all being
00:26:22.039 hosted externally on GitHub or AMD site
00:26:24.760 something like that and it's only as in
00:26:27.320 when you decide to import a specific
00:26:29.080 material that it will download it copied
00:26:31.000 into that folder that we specified
00:26:32.520 previously and then you can go ahead and
00:26:34.760 use it so let's go and actually find
00:26:37.200 some material let's search for a nice
00:26:38.440 plaster
00:26:39.480 material uh let's grab that one there uh
00:26:42.480 let's search for some bricks uh we're
00:26:45.279 going to need two brick materials so
00:26:46.640 different parts of our scenes so we'll
00:26:48.000 start with a kind of a lighter colored
00:26:49.320 brick and then maybe a darker colored
00:26:50.880 brick as
00:26:52.320 well and then finally let's grab uh a
00:26:55.159 metal let's find a nice Rusty one okay
00:26:58.440 great now instead of dragging the
00:26:59.760 materials directly into the viewport on
00:27:01.360 the geometries we can also use the rules
00:27:03.200 pane here to make the connections
00:27:04.720 between the materials and the different
00:27:06.200 geometry so we drag in a material from
00:27:07.720 the left and then we drag in Geometry or
00:27:11.080 geometries uh from the right so we'll do
00:27:13.399 the assignment here so that's that first
00:27:16.279 one let's do the next
00:27:22.720 brick okay and then let's do the pardon
00:27:25.880 me let's do the rusty metal but the
00:27:28.360 metal is going to be actually just a
00:27:29.399 little bit more complicated we're not
00:27:30.679 going to drag over an explicit Prim from
00:27:32.880 the right instead we're going to use uh
00:27:35.320 the Primitive path editor and then we
00:27:37.799 can kind of specify some paths to begin
00:27:39.720 with in this case we're going to want
00:27:41.440 some supports we're going to want
00:27:42.679 supports from the gallery roof we're
00:27:44.519 going to want supports from the gallery
00:27:46.320 walls um but if we look at these paths
00:27:48.799 here we can see there's a common pattern
00:27:50.600 to it it's basically everything SL
00:27:52.480 supports so let's do that let's do a
00:27:53.519 star/ supports put that in as our print
00:27:55.960 pattern and we can see instantly
00:27:57.720 instantly below the two prims that got
00:27:59.760 matched and it'll apply to further we've
00:28:01.840 got a couple of corrugated prims that we
00:28:03.519 want to bring in so we'll do the same
00:28:04.799 thing with corrugated star and we can
00:28:07.279 see this is now going to be applied to
00:28:08.600 four prims for us so we'll go ahead and
00:28:11.320 we'll accept that and there we go we've
00:28:13.080 got the green rusty metal on all of
00:28:14.799 those bit appropriate bits of our scene
00:28:17.200 nice and
00:28:18.320 simple now one of the workflows that
00:28:20.519 historically in Solaris has been a bit
00:28:22.640 difficult to work with is well it's when
00:28:24.360 you have things coming out of effects
00:28:25.840 simulations coming out of effects where
00:28:27.640 you've got but topology changing like
00:28:30.240 crazy in particular uh so for example
00:28:32.760 here we've kind of got this Supernatural
00:28:35.039 fluid Splash thingy going on here and
00:28:37.640 you can see the mesh is completely
00:28:39.360 inconsistent uh from frame to frame as
00:28:41.559 we bring it in uh using the S import and
00:28:44.360 the solution in USD speak is to setup
00:28:46.279 what are called value Clips so for a
00:28:48.440 while we've had a value clip Lop in
00:28:50.279 solaras and it comes in with a whole
00:28:52.600 bunch of blank fields for you to fill in
00:28:54.679 and it's not particularly intuitive what
00:28:57.000 you're actually meant to do with this
00:28:58.600 thing uh it's pretty easy to get it
00:29:00.559 wrong and then you end up finding
00:29:01.760 yourself having to turn to help
00:29:02.919 documents Forum posts and whatnot so I
00:29:06.240 appreciate it's not been a good user
00:29:07.720 experience thus far now in hd20 we've
00:29:10.240 added a new geoclip sequence node which
00:29:12.919 not only authors the value Clips but
00:29:15.240 also comes with pretty much everything
00:29:17.240 set up for you out of the box so what we
00:29:19.640 can do is take this time varying
00:29:21.360 topology varying simulation plug it
00:29:23.679 straight into this geoclip sequence and
00:29:26.640 then the only thing we need to do is to
00:29:28.159 specify what we actually want to import
00:29:30.000 from that Upstream Upstream stage so if
00:29:32.760 we go and look at the SOP import again
00:29:34.120 we're seeing that we're importing things
00:29:35.320 into swirly mesh uh so we'll say here
00:29:37.840 that what we want is swirly mesh and
00:29:40.600 then when we display it we're done we
00:29:42.480 have our value clip it's all set up for
00:29:44.159 us everything is now in Solaris in a way
00:29:46.240 that we can later
00:29:47.519 export um if I go and bring up the scene
00:29:50.200 graph tree again here and look at the
00:29:53.720 mesh and find some Prim uh some fields
00:29:56.279 in here we got those pink Fields
00:29:57.640 hopefully shows a pink on the screen it
00:29:59.039 does lovely uh and pink basically means
00:30:01.600 that it's being driven by value Clips so
00:30:03.399 we've got a nice outof the-box solution
00:30:05.840 now further to this if we've already got
00:30:07.399 our Sim written out to disk uh let me
00:30:09.600 create a new geoclip sequence node uh
00:30:12.840 move things over here a little
00:30:15.679 bit there's a different mode so rather
00:30:18.240 than getting the geometry from that
00:30:19.399 second input we can actually read things
00:30:21.679 directly from files on
00:30:24.000 disk uh so let me put that in ah sorry
00:30:28.120 fat fingers let me put in the path to
00:30:31.120 our Geo file sequence that we already
00:30:33.080 have on dis these bjo
00:30:35.039 files and again swirly mesh is where we
00:30:38.240 expect things to be and when we put this
00:30:41.600 blade flag on there boom again the view
00:30:43.640 Port should look exactly the same
00:30:44.880 nothing should change and it doesn't uh
00:30:47.120 and actually now it's a heck of a lot
00:30:48.320 faster because it's just streaming BG
00:30:49.960 files directly off dis it's much much
00:30:52.039 faster and it has now been converted
00:30:53.880 fully over to a value clip so when I
00:30:56.440 bring up the geometry again we you can
00:30:58.120 see we've got those pink attributes pink
00:31:00.039 meaning value Clips so yeah if you're
00:31:02.480 working in effects this is hopefully a
00:31:04.519 lifesaver for you it's a much faster way
00:31:06.360 from getting to those on disk cached
00:31:08.720 elements to Value clips that you can
00:31:10.679 then push into lighting and through
00:31:13.159 rendering um I could probably speak for
00:31:16.279 hours about what else is new in this
00:31:18.399 release for zaris I know there are far
00:31:20.799 more interesting presentations which are
00:31:22.200 queued up behind me um so I think I'm
00:31:24.559 just going to mention these ones
00:31:25.880 reasonably quickly just in passing
00:31:28.760 we've got some new diagnostic tools uh
00:31:31.720 so the first one is the scene doctor
00:31:34.240 this is a lop note that you can kind of
00:31:35.720 put usually somewhere near the end of
00:31:37.760 your Lop uh setup and it will basically
00:31:40.440 tell you what it thinks is possibly
00:31:42.639 wrong or malformed with your stage it
00:31:46.279 might look at hind K kind
00:31:49.440 hierarchies um or other things that are
00:31:51.480 maybe not as USD conformant as they
00:31:53.639 should be it technically works but it
00:31:55.320 goes against USD guidelines this is is
00:31:58.080 fully extensible with Python scripts so
00:32:00.279 you can Define Studio best practices
00:32:03.159 maybe you have things about prims should
00:32:05.159 only be lower case or should only be
00:32:07.279 uppercase whatever you can dream of this
00:32:09.880 is your chance to walk through the stage
00:32:12.279 analyze everything about the stage and
00:32:14.159 tell the user hey here's where you've
00:32:16.039 screwed up further because it allows for
00:32:19.440 these python plugins in some cases you
00:32:21.679 can also actually fix things if there
00:32:23.679 are things that are trivially fixed with
00:32:25.120 a python script maybe you flag it to the
00:32:27.279 user and you fix it all in one go rather
00:32:29.519 than having the artists need to do it
00:32:31.080 themselves so it's it's a really great
00:32:33.399 uh kind of tool both for artists to
00:32:35.000 understand what's going wrong and for
00:32:36.639 pipeline TDS to kind of help streamline
00:32:38.559 it and help the artists not need to uh
00:32:40.679 fix everything themselves editor nodes
00:32:42.880 is another one of these diagnostic tools
00:32:45.279 so we're trying to do uh more and more
00:32:48.720 history tracking so when you get to the
00:32:50.639 end of your scene you bring up the image
00:32:52.639 in your viewport and you're like why the
00:32:54.919 heck is that red who changed this where
00:32:57.519 where is it in these thousands of Lop
00:32:59.279 nodes uh We've now got a new Paine which
00:33:02.000 offers some amount of kind of attribute
00:33:04.279 history tracking so you kind of work
00:33:06.200 your way up and see where values have
00:33:08.399 changed um hopefully gives you much
00:33:10.039 better insight and much less
00:33:11.840 guessing uh some boring things in terms
00:33:13.960 of just version numbers we are now on
00:33:15.880 USD 2308 the latest release uh we are
00:33:18.799 also on the bleeding edge of material X
00:33:22.519 1388 um and yeah there there really is a
00:33:25.200 lot more but like I said there are more
00:33:26.880 interesting presentations to follow so
00:33:28.279 I'm going to start shutting up quickly I
00:33:30.639 am going to close here I'm going to feel
00:33:32.320 any questions you've got uh despite my
00:33:34.799 Canadian accent I am based in London uh
00:33:36.960 so if you ever want to meet up grab a
00:33:38.320 beer what not just ping me thank you for
00:33:40.960 your attention thank you for getting up
00:33:42.159 so early again I know it's it's rough at
00:33:44.519 least it was rough for me uh I really
00:33:46.559 hope you enjoy the rest of your day and
00:33:48.279 I really hope you have great success
00:33:49.559 with Solaris and houdy kn20 thank you
00:33:59.159 and I think we do have five to 10
00:34:02.039 minutes for questions so we do any
00:34:04.919 questions anything anybody and I and I
00:34:07.600 can't see you so I'm gonna rely on Chris
00:34:09.320 to point at people sorry I've got the
00:34:11.719 the light shining straight in my
00:34:22.839 face
00:34:25.359 hi cool hi um I was just wondering so
00:34:28.839 with the Clones you currently support
00:34:30.520 doing on your local machine and with HQ
00:34:33.320 is it hard to extend that to support
00:34:35.040 things like deadline or a custom render
00:34:38.119 Farm um right now yes you should think
00:34:42.839 of this as our I don't know whether I
00:34:45.719 want to put a beta label on it or not
00:34:47.918 it's our initial release of this um I
00:34:52.079 don't want to say it's impossible but no
00:34:54.800 it's not going to be easy it's not going
00:34:56.000 to be documented how to do that
00:34:58.440 uh this is I would say kind of similar
00:34:59.760 to the procedurals where technically you
00:35:02.160 can actually override quite a lot of the
00:35:03.560 procedurals but we're currently still
00:35:05.040 not comfortable enough with the
00:35:06.160 infrastructure to put it in concrete by
00:35:08.880 documenting it um I'll I'll say the same
00:35:11.680 is also true of the material catalog so
00:35:14.599 like right now we ship a fairly Rich
00:35:16.760 material catalog with lots of materials
00:35:18.920 we give you the access to the AMD
00:35:20.920 material catalog technically you can add
00:35:24.079 or remove things from an material
00:35:25.280 catalog or replace it completely with
00:35:26.480 your own and I say unapologetically
00:35:28.920 right now that in this release of
00:35:30.320 Houdini it is not easy to do these are
00:35:33.160 our initial releases to put them out
00:35:34.960 there get people to hit it hard tell us
00:35:37.800 where it works well tell us where it
00:35:39.040 doesn't work well and to point out what
00:35:41.520 is the next version of this what does it
00:35:43.280 look like so maybe the next version of
00:35:44.839 cloning is with deadline support or with
00:35:47.520 a trivially accessible python API okay
00:35:50.839 thank you you're
00:35:54.079 welcome same same question about the
00:35:56.480 cloning tool if
00:35:58.319 um not of multi GPU can the Clone use
00:36:01.520 one GPU for each
00:36:03.760 instance oo that's a good
00:36:06.480 question so we wouldn't be controlling
00:36:09.000 that from the cloning itself I don't
00:36:11.359 know offand whether an xpu there is a
00:36:14.599 way to specify how many gpus to use uh
00:36:20.560 if if it's possible it would be done at
00:36:22.560 that level right now uh where Karma you
00:36:25.640 would say just kind of like please only
00:36:26.839 use one GP and then each instance would
00:36:29.040 just use the one but I'm I'm imagining
00:36:31.280 controls here this is something I've not
00:36:32.560 looked into my machine I'm not at that
00:36:34.720 luxury where I've got multiple gpus I've
00:36:37.160 got a crappy old Gaming card in my
00:36:39.119 personal box um but yeah again another
00:36:42.160 one for us to look into thank you thank
00:36:46.400 you because we do offer the threading
00:36:48.680 control for example for the CPU
00:36:52.240 count um on the Cal real Sky uh node yes
00:36:56.839 where's North and can we tweak it North
00:36:59.200 is either positive or negative Zed and I
00:37:01.680 really should know which and I don't um
00:37:04.440 can you tweak it I don't think you can
00:37:08.200 out of the box uh I think if if you need
00:37:10.960 to do that you would come up with some
00:37:12.160 studio
00:37:15.319 override other
00:37:21.640 questions everybody's breakfast is still
00:37:24.599 digesting waiting for the caffeine to
00:37:26.560 the breakfast was good
00:37:28.800 if you didn't have one of those uh bacon
00:37:30.720 and hash brown sandwiches should sneak
00:37:33.200 out during the break and grab another
00:37:36.800 one I think that's it just one sec here
00:37:40.560 one sec ah we got multiple people hold
00:37:42.880 on hold on wait wait wait wait wait hey
00:37:46.240 just when you are committing a render
00:37:48.200 and you're working in your scene how do
00:37:50.400 you is your suggestion to work in that
00:37:52.319 render Gallery so when you're kind of
00:37:54.079 debugging you're not triggering new
00:37:55.960 renders and kind of you if you're trying
00:37:57.680 to flick between a change and an edit
00:38:00.520 and see your previous render is that to
00:38:03.839 do in the render gallery and use those
00:38:05.400 snapshots or are they still constantly
00:38:07.720 live and feeding in uh so it depends so
00:38:12.040 the cloning will always maintain a live
00:38:15.880 connection to your Houdini session uh so
00:38:19.720 if you continue to mck about in your Lop
00:38:22.880 Network changing things the Clones will
00:38:24.920 continue to uh start again render pick
00:38:28.319 up those changes there are two ways to
00:38:31.079 get kind of decoupled imagery into the
00:38:33.920 snapshot into the render Gallery so the
00:38:35.560 first is just use the snapshot button
00:38:37.760 which will capture the
00:38:40.040 viewport pardon me in whatever state it
00:38:43.359 was in let me just adjust this again
00:38:45.640 there we go um and the second is right
00:38:48.119 beside the snap button there's a
00:38:49.680 background button a background rendering
00:38:51.319 button which will take a static snapshot
00:38:54.599 of the Lop Network at that point in time
00:38:56.880 and spin up a render in the background
00:38:59.400 so if you don't want to wait for things
00:39:01.760 to get to be high enough quality in the
00:39:03.319 viewport but you also don't want changes
00:39:05.920 in your Lop Network to be constantly
00:39:07.960 reflected in the render that's showing
00:39:09.520 up in your render Gallery the background
00:39:11.400 renderer is your option there that's
00:39:13.520 your chance to say I want to see what
00:39:15.680 this Lop network is going to turn into
00:39:18.119 and you kind of Click background it
00:39:19.480 starts rendering into background it will
00:39:21.040 stream the imagery into the render
00:39:22.960 Gallery exactly the same way as the
00:39:24.240 Clones do uh but you can continue to
00:39:26.560 work in your Lop Network without
00:39:28.240 affecting it and then yes you can do
00:39:30.400 diffs between any of these combinations
00:39:32.240 you can do diffs between a static image
00:39:34.240 that you've captured a background render
00:39:36.560 or a cloned
00:39:38.280 instance um so yeah if you want to see
00:39:40.960 kind of how what you're doing in the Lop
00:39:44.119 network is going to change things
00:39:46.079 compared to how it was before the render
00:39:48.119 Gallery is probably your best option
00:39:50.000 where you would use a cloned instance as
00:39:52.440 your like your a image it's effectively
00:39:55.000 now your viewport it's now showing what
00:39:56.760 you're doing in lops and then your B
00:39:58.880 image is either an old snapshot or an
00:40:01.400 old background render thank you you're
00:40:10.599 welcome hi there um so when you're doing
00:40:13.760 render select so you're just doing a
00:40:15.200 small area of the screen do the Clone uh
00:40:18.400 does it uses the same selection as in
00:40:21.839 the viewport so like if I just wanted to
00:40:23.720 look de the eye of the eagle can I set
00:40:26.040 up the Clones to resp respect that
00:40:28.200 little area that I'm doing in the vport
00:40:29.720 or is it just a cool
00:40:31.720 render I've not tried to be honest um I
00:40:36.000 would try right now except this laptop
00:40:37.560 is like six years old it does
00:40:38.760 technically run Houdini but not not
00:40:40.720 pleasantly uh the short answer is I
00:40:42.560 don't know try it yeah I'll do it go
00:40:44.680 yeah absolutely uh if you find it
00:40:46.240 doesn't and you think that that's
00:40:47.240 something useful tell us uh I mean you
00:40:50.119 as a sledgehammer approach you can
00:40:51.599 override that stuff with either the
00:40:53.400 camera or the render settings that you
00:40:54.800 can kind of set up a cropped screen
00:40:56.280 window yep um so there are ways to
00:40:59.599 achieve what you're after but in terms
00:41:01.000 of a really slick artist experience
00:41:02.839 where we just kind of control drag that
00:41:04.119 tiny little window there in the viewport
00:41:06.040 I'm honestly not sure what happens yeah
00:41:07.920 no just more for bigger bigger scenes
00:41:09.520 it's just like it might take ages to get
00:41:11.480 to a certain point you want to like look
00:41:13.319 that and review yeah that's absolutely
00:41:19.960 cheers I was I was wondering if it's
00:41:22.240 possible for us to write our own
00:41:23.480 procedurals yet or when that might be
00:41:25.640 possible uh so technically yes uh since
00:41:29.280 it was released you can do it um there
00:41:33.599 are some Forum posts where people have
00:41:35.760 gone and reverse engineered the whole
00:41:37.240 system and written it up and they did a
00:41:39.319 remarkably good job makes me suspicious
00:41:42.240 whether they hacked our Network and
00:41:43.359 looked something up or not um but so yes
00:41:47.920 you can uh we don't try and prevent you
00:41:52.079 from doing it we also don't try to help
00:41:55.079 you do it and honestly selfishly the
00:41:57.760 reason is that for us the idea of what
00:42:00.839 render time proceduralism and USD should
00:42:03.240 mean is still a little bit up in the air
00:42:06.000 uh we were kind of the first to jump on
00:42:08.040 a solution or one of the first to jump
00:42:09.520 on the solution Pixar in the meantime
00:42:12.480 since we've done our initial release has
00:42:13.920 also added some stuff in Hydra 2.0 what
00:42:16.839 they call them like scene index filters
00:42:19.119 or something like that and this is kind
00:42:21.559 of on our radar for something to look
00:42:23.200 into for the next or the next next
00:42:25.319 release of Houdini and whether that
00:42:28.160 technology perhaps replaces what we've
00:42:30.839 done so far so we don't think it's in
00:42:33.640 our best interest right now to write up
00:42:35.800 tremendous amounts of documentation and
00:42:37.640 guides for Studios to go and build
00:42:39.680 really complicated pipelines around
00:42:41.119 their own inhouse procedurals only for
00:42:43.440 us 12 months from now to say actually
00:42:45.440 you know what guys we think this is a
00:42:47.079 terrible way of doing it we should
00:42:48.440 really do it this completely different
00:42:49.640 way please just burn everything you did
00:42:51.040 to the ground and and start again so we
00:42:53.640 are intentionally being a little bit
00:42:55.599 vague about the details on to do it the
00:42:57.920 brave of of you can go ahead and try um
00:43:00.800 and if you ask us direct questions we'll
00:43:02.040 give you direct answers um but we are
00:43:04.800 trying to keep that developer experience
00:43:06.960 a little bit at arms length while we
00:43:08.640 ourselves try to build up confidence
00:43:10.800 behind what is the long-term approach
00:43:13.960 here
00:43:17.440 thanks hi uh when you leave the
00:43:20.160 background rendering uh can and then you
00:43:23.440 move on and change other stuffs can you
00:43:25.480 use that one and restore start it later
00:43:28.400 on or you need to contrl Z and to get
00:43:31.160 there back
00:43:33.319 again sorry can you add can you repeat
00:43:35.920 when you're rendering then uh you hit
00:43:37.839 like the background render yeah right
00:43:39.839 it's going to kind of freeze that and
00:43:41.960 continue to render that but then you
00:43:43.880 continue to work on your lops but then
00:43:45.960 you figure out that you screwed up but
00:43:47.839 then you want to return to that version
00:43:49.480 that was rendering on the background can
00:43:50.839 you restore it yes yes so when we create
00:43:53.760 for those of you who haven't used the
00:43:54.760 render Gallery um visual it looks like
00:43:57.760 we're just taking a picture of the
00:43:59.200 viewport or kind of the um a live render
00:44:03.079 in which case like an animated picture
00:44:04.480 of the viewport as were we also are
00:44:06.920 capturing the Lop Network at that point
00:44:09.160 in time uh so you can rightclick on a
00:44:12.240 thumbnail and say revert revert to
00:44:14.680 network revert Network to this point
00:44:16.400 something like that there's a revert
00:44:17.680 something or other and it basically will
00:44:19.680 reset your Lop Network to the point it
00:44:22.079 was at which you took that snapshot or
00:44:24.760 launched that background render um it
00:44:27.319 doesn't come into play with the Clon
00:44:28.800 renders because the cloned renders are
00:44:30.839 constantly matching your Lop network but
00:44:33.880 yes with the background render and the
00:44:35.240 snapshot both of those will uh grab your
00:44:38.280 Lop Network and then you can revert to
00:44:39.880 it later if you want to thank you you're
00:44:43.839 welcome I think there was a question
00:44:45.680 over here and I think that might be our
00:44:47.240 last one unfortunately but you can grab
00:44:49.599 uh Rob afterwards I'll be around like I
00:44:52.680 said I'm based in London otherwise so
00:44:54.400 got lots of
00:44:55.599 time uh so let's question is about the
00:44:58.280 Clone tool when you do the
00:44:59.440 synchronization do you synchronize
00:45:01.000 everything about the scene like if if
00:45:02.680 there was a stash with one gigabyte of
00:45:04.520 data would you synchronize it too even
00:45:06.640 if it wasn't used by the solar Network I
00:45:09.800 don't want to say that we necessarily
00:45:10.960 sync over the data but more the changes
00:45:15.200 that caused the
00:45:17.079 data uh so it's more kind of like the
00:45:19.240 parameter changes so the parameter
00:45:21.240 updates so if you were loading like a
00:45:23.200 gigabyte file off of disk and you did
00:45:26.079 that by triggering a parameter change is
00:45:28.240 that parameter change that will then be
00:45:29.760 sent over to the pre to the other cloned
00:45:31.720 instance and it will make the same
00:45:32.920 parameter change and then it will also
00:45:34.319 load that gigabyte file off of dis it's
00:45:36.200 not necessarily that we send a gigabyte
00:45:37.839 worth of data so are every parameter
00:45:40.440 every parameter loaded at the beginning
00:45:42.240 of the sync We sync the complete Houdini
00:45:44.680 session yeah we basically have a clone
00:45:47.520 of
00:45:48.520 Houdini thank you and yes I apologies we
00:45:51.319 are rapidly approaching 10:00 and I know
00:45:53.040 you guys must be sick of me by now so or
00:45:55.040 maybe not you guys have so many
00:45:55.960 questions I'll be around I'll be around
00:45:57.680 find me during a break buy me a beer
00:46:00.119 I'll buy you a beer whatever um thank
00:46:03.079 you have a great
00:46:04.390 [Applause]
00:46:08.390 [Music]
00:46:12.040 day hey everybody uh thanks for showing
00:46:14.319 up I'm surprised this room is actually
00:46:16.040 quite full for like this early I kind of
00:46:18.760 expected maybe people showing up later
00:46:21.559 um yeah so my name is timing and welcome
00:46:23.640 to your presentation not sure what
00:46:24.599 happened to the font it's supposed to be
00:46:25.960 the same for all the presentation but it
00:46:28.400 changed for some reason yeah welcome to
00:46:30.359 my presentation called Bottoms Up with
00:46:32.280 xpu we going to talk about little demo
00:46:35.119 sequence I did for the um sort of for
00:46:37.599 the H20
00:46:38.920 launch uh so I had the opportunity to
00:46:42.119 play around with H20 a little bit and to
00:46:44.440 sort of test the waters with new karma
00:46:46.079 xpu that's now gone gold so it's
00:46:48.280 production ready release right now um so
00:46:51.839 yeah essentially you're going to talking
00:46:52.920 about making sort of a fall commercial
00:46:54.880 with XP like I've done this couple times
00:46:57.240 before with some of the other stuff that
00:46:58.599 I did for side effects like I did a sort
00:47:01.079 of a candy bar fake commercial type
00:47:03.520 thing and then last year or in the year
00:47:06.079 before we had something with like
00:47:08.119 moito um so it's like uh this year's one
00:47:11.880 is another one based on like just sort
00:47:14.480 of snacks and drinks not necessarily
00:47:16.040 because I thought like let's do another
00:47:17.839 sort of drinks commercial but there was
00:47:20.160 like there's a couple of new things in
00:47:21.640 karma xpu uh that that like I needed to
00:47:25.200 demo which kind of led me to doing
00:47:27.079 another sort of a drinks based uh video
00:47:30.319 so uh some of the new features wh so
00:47:33.839 some of the new features are this like
00:47:35.079 if you already know what all of this
00:47:36.559 means you're like all right makes sense
00:47:38.319 where we're doing another drinks based
00:47:39.920 uh thing um so with this presentation
00:47:43.040 I'm first just going to go through uh
00:47:45.400 each of these things what they kind of
00:47:46.800 are just break break these Concepts down
00:47:48.599 like what they are and then we're going
00:47:49.559 to see sort of how that all ties into
00:47:51.319 like the sequence that I made uh so that
00:47:53.720 at these were're sort of on the same
00:47:54.920 page when we start getting to the uh
00:47:57.359 um once we start getting to the uh to
00:47:59.200 the sequence uh on the right you can see
00:48:01.200 logo that's the xpu logo it got it it
00:48:03.640 got its own logo now now that's sort of
00:48:05.680 uh Gone gold so pretty cool logo and I
00:48:08.680 uh I also put that in the sequence but
00:48:10.480 without further Ado let's actually look
00:48:11.839 at the sequence hopefully it plays
00:48:13.760 because it's like a embedded YouTube
00:48:16.200 thing all right let's all right let's uh
00:48:20.000 turn on the audio and then hopefully
00:48:22.800 everything will
00:48:24.040 work and there's no audio all right
00:48:26.520 watch without audio it's also
00:48:36.800 fine sploosh all
00:48:40.720 right so yeah lots of uh lots of cool
00:48:43.359 things going on um all right let's go to
00:48:47.119 the next
00:48:48.920 slide I hate Google Slides all right
00:48:51.400 there we go right so let's let's explore
00:48:53.440 these um uh these features first uh um
00:48:57.359 because yeah they they they tie into the
00:48:59.839 sequence that I made so uh
00:49:02.160 dispersion uh essentially it's like if
00:49:04.760 you have light light is build up of a
00:49:06.720 whole bunch of colors as you know and
00:49:08.160 like if uh and sort of if it refracts
00:49:10.640 through certain things sort of the light
00:49:12.119 will break up into a whole bunch of
00:49:13.480 different colors uh if it's raining you
00:49:15.680 can see see that in like when you have
00:49:17.559 like something like a rainbow um and uh
00:49:21.240 also like when shines do like something
00:49:22.559 like a diamond or whatever you see this
00:49:24.200 light breaking up producing all kinds of
00:49:26.440 night nice colors we can do this with
00:49:28.359 xpu now lot of these features were like
00:49:30.640 this was already working with CPU but
00:49:32.400 like now we got all this stuff working
00:49:33.799 perfectly in xpu um so you see there's a
00:49:36.920 new material X standard surface uh in
00:49:39.760 the transmission tab you have dispersion
00:49:42.280 I'm not sure how visible it is but um
00:49:44.720 it's over there if it's zero it's turned
00:49:46.559 off and essentially once you bring it
00:49:48.319 higher uh dispersion is introduced the
00:49:51.000 lower the value the more dispersion and
00:49:52.720 sort of the more sort of this nice color
00:49:54.240 you get you see there uh dispersion
00:49:56.280 value of Point 044 gives a lot of
00:49:59.400 dispersion sort of gets progressively
00:50:02.319 less uh the further you go uh like the
00:50:05.480 further you like the higher you make it
00:50:08.400 um there another thing absorption so
00:50:11.040 there another thing that was in K CPU
00:50:13.880 before uh but it's now making it way
00:50:16.000 into xpu uh so like in in general like
00:50:19.359 they're getting really close also in
00:50:20.799 terms of the look anyway if you render
00:50:22.280 something CPU and xpu now pretty much
00:50:23.920 look the same so that's really great but
00:50:25.720 what the absorption is it's um
00:50:27.760 essentially of a slider you can sort of
00:50:29.839 control like how far can light pass
00:50:31.839 through uh like a liquid before it
00:50:34.119 starts refracting back uh the
00:50:36.480 transmission color you can see I have
00:50:38.280 transmission color set up you can see
00:50:40.319 sort of the different values so this was
00:50:41.720 not working with xpu before so
00:50:43.079 essentially you just had to S of just
00:50:45.280 put a colar there and just try to make
00:50:46.839 something look nice now you actually
00:50:48.079 have like a nice sort of slider to sort
00:50:50.000 of control how far can this light sort
00:50:51.480 of pass through my liquid and you can
00:50:52.680 see you can like get a very different
00:50:54.920 result based on sort of the depth slider
00:50:56.720 that you get and you also see some of
00:50:58.839 the dispersion just showing up uh
00:51:00.920 because like the way that it's now
00:51:02.799 refracting so it looks quite
00:51:04.880 nice um Nest D electrics so this was
00:51:08.839 last year this was actually announced as
00:51:11.000 being in xpu while while it wasn't
00:51:13.200 because some miscommunication but now
00:51:14.839 it's actually in xpu uh it actually
00:51:17.359 works and I used it quite extensively
00:51:18.960 sort of during my um in my sequence also
00:51:22.240 for all of stuff that you might not
00:51:23.480 expect it like the olive like mov ring
00:51:25.760 to ice it was used for that as well I'll
00:51:28.240 show demos of that in a little bit
00:51:29.680 essentially what it means it's kind of
00:51:31.640 like a render time Boolean type of thing
00:51:34.319 uh for refractive objects you kind of
00:51:36.160 have to imagine like if you have
00:51:37.319 something like a glass with you have you
00:51:39.599 have a glass you have a liquid in there
00:51:41.040 you have ice cubes in there like how
00:51:42.680 does the render engine know essentially
00:51:44.319 what to refract back like you have
00:51:45.720 because you have these ice cubes
00:51:47.280 penetrating the water you might and
00:51:49.079 essentially with NE di electrics you can
00:51:51.280 sort of give priorities of like what
00:51:53.319 should it refract back and you can see
00:51:56.079 um if the uh uh essentially the lower
00:51:59.400 the number the higher the priority it's
00:52:01.040 kind of like inversed uh but you can set
00:52:03.359 it up with random geometry settings and
00:52:05.440 you can see here if I put it on my uh on
00:52:07.280 my eyes essentially if I uh uh if I put
00:52:10.559 it to to like to like a higher number
00:52:13.520 than the liquid you can see it just
00:52:14.799 disappears and of course the image on
00:52:16.559 the right is the correct one um so you
00:52:19.280 have a lot of control there and this
00:52:21.359 actually helps win a lot of scenarios
00:52:23.160 it's really nice to have this uh because
00:52:25.480 makes life a lot easier
00:52:27.319 uh material blending the colors are a
00:52:29.000 little bit weird here because I uh I uh
00:52:32.200 embedded a gif or GIF or however you
00:52:34.079 want to call it uh because uh just
00:52:36.200 easier than just doing looping videos um
00:52:38.880 you can see we can actually we're we're
00:52:40.400 blending from like a metallic material
00:52:42.839 into a Jerry I know the animation looks
00:52:44.400 a little bit weird from this angle but I
00:52:46.040 kind of like I animated it so it like
00:52:48.040 look look nice in the shot so like just
00:52:49.760 in this sort of look that I've seen it
00:52:51.559 looks like the animation looks a little
00:52:52.680 bit weird but you can kind of see sort
00:52:54.280 of we're blending between two very
00:52:56.480 disting materials uh so that was not
00:52:58.559 possible in xpu before so you can now
00:53:00.079 just make a uh you can make a make a mix
00:53:03.559 and you can see you can just blend
00:53:04.880 different materials based on whatever
00:53:06.520 you want to do like you put a prim VAR
00:53:08.640 to mix between it and um there's some
00:53:11.319 some limitations still uh uh with this
00:53:14.319 currently released in Houdini 20 so I
00:53:17.119 found out like if you try to blend two
00:53:19.240 materials with subsurface that doesn't
00:53:21.480 quite work I'm sure that will be work
00:53:23.000 that'll be worked out in the end but uh
00:53:25.040 for the most part you can just blend
00:53:26.880 materials um only two so there's like a
00:53:29.720 hardcoded limiting experi you cannot
00:53:31.280 blend more than just two materials uh of
00:53:34.079 course you can do blends like before you
00:53:35.599 have the material blend but uh it's
00:53:37.760 really nice to have this because it just
00:53:39.319 uh yeah just makes life a lot easier and
00:53:41.319 I know this is something that love
00:53:42.760 people want it from xpu but now now it's
00:53:46.079 there um geometry lights pretty
00:53:50.000 self-explanatory essentially it's uh
00:53:52.319 yeah you can now you can set up uh sort
00:53:54.920 of geometry to behave like a light uh
00:53:58.079 essentially like this you put a render
00:53:59.799 geometry settings and you can just U
00:54:02.200 essentially just like if you have an
00:54:03.760 emissive material you can now sort of
00:54:05.040 control it as a light so you have the
00:54:06.559 light light light intensity sort of the
00:54:08.839 light spread um there was sort of a way
00:54:11.640 to sort of fake this before in like 19.5
00:54:14.280 where you would just make like two
00:54:17.440 branches of your uh of your object and
00:54:19.920 just crank up the emission on your
00:54:21.599 material but like there was like it got
00:54:25.119 really noisy when rendering and stuff
00:54:27.000 like that and now we actually have uh GE
00:54:29.920 lights which is really nice uh doesn't
00:54:31.880 work on volumes yet but aside from that
00:54:34.760 uh yeah you can they're good to go
00:54:36.920 really nice to have in uh NX Buu so um
00:54:40.520 and crypto mats I'm pretty sure most of
00:54:42.680 you are familiar with crypto mats are
00:54:43.960 but if you're not they're now found
00:54:45.880 there in xpu now with the terrible font
00:54:49.000 going under the under the image but uh
00:54:52.240 um yeah essentially they're sort of they
00:54:54.559 uh they special PA you can you can
00:54:56.400 bender and essentially uh you can use it
00:54:58.119 to create a mat from something in
00:55:00.960 composting um so you don't need to set
00:55:03.200 it up beforehand and then you can just
00:55:05.559 like I want my cheese to be blue cuz I
00:55:07.599 like blue cheese and I can just put the
00:55:09.480 Crypt mat in and tint them blue and then
00:55:11.599 they're blue and then that's very nice
00:55:13.400 uh so this was already working again in
00:55:15.040 CPU and what you would do before is to
00:55:17.640 just do like an xpu render and then you
00:55:19.720 do for example do a separate CPU render
00:55:21.720 with your Crypts en able to do it like
00:55:23.280 that but now you can just do it in one
00:55:24.400 go and this is a lot of just a lot
00:55:27.079 easier to uh to set up uh just quick tip
00:55:30.880 if you if you're compositing something
00:55:32.280 like fusion um enable the legacy exr
00:55:35.920 mode uh because like I saw that question
00:55:39.039 pop up a lot from a lot of people um so
00:55:41.920 if you want to make a crypt mat you can
00:55:43.400 just go to your image output extra
00:55:45.400 render variables uh create an extra
00:55:47.720 render variable put it to crypto mat and
00:55:49.880 like crypto material or crypto object
00:55:51.599 and you can render it uh essentially the
00:55:54.359 difference between the normal exr mode
00:55:56.799 and legacy exr mode you can kind of see
00:55:58.799 this as a your exr sort of like a zip
00:56:01.359 container and let's say you have a five
00:56:02.799 500 megabyte exr sort of the newer way
00:56:05.799 of doing exrs is that it doesn't like if
00:56:07.880 you're like composting in Nuke and it
00:56:09.640 doesn't need to read the entire 500
00:56:11.319 megabyte file it can like grab one pass
00:56:13.400 of it and a lot more efficient Fusion
00:56:15.119 doesn't do that so you need to enable a
00:56:17.359 legacy XR mode and then it works just
00:56:19.640 figured I'd put it in there because I
00:56:21.039 saw this question pop up quite a lot so
00:56:23.599 uh all right so now let's talk about
00:56:24.880 actual sort of project specifics and how
00:56:26.599 these sort of just things that I just
00:56:29.720 talked about are actually used in the um
00:56:33.160 in the video uh right so something not
00:56:36.440 necessarily related to H20 but something
00:56:38.119 that was just really cool to me uh
00:56:40.319 retiming and lops is amazing uh so like
00:56:44.280 you can in in Sol there's a retime uh L
00:56:47.559 and essentially if you just put it
00:56:48.640 somewhere in a branch you can retime
00:56:49.880 your entire scene in once uh I you can
00:56:52.200 see my R times there are colored green
00:56:55.240 so I didn't do it in in in one branch
00:56:57.559 because I wanted like some to compute
00:56:59.319 like velocity after effect but you can
00:57:01.599 essentially just retime it all in lobs
00:57:03.240 and that includes cameras and if you've
00:57:04.920 ever done like sequence retiming in
00:57:06.680 something like object Contex you know
00:57:08.480 it's going be quite a hassle like you
00:57:09.960 need to put R times in every of your
00:57:11.440 notes and camera retiming is its own
00:57:14.200 thing is terrible it's a lot easier so I
00:57:17.280 figured I'd throw it in here because
00:57:18.480 it's just really nice to sort of uh to
00:57:20.240 be able to do and I use this like
00:57:21.680 extensively old throughout sort of the
00:57:23.200 old sequence um yeah just fell fluid I
00:57:27.200 the present is mostly Focus about Karma
00:57:29.200 but I figured I do do one show One
00:57:32.160 recording of sort of Splash so it's just
00:57:33.520 Fon fluids and I used this Splash in all
00:57:35.640 of the shots in the background just
00:57:37.599 retimed it and all of the other stuff um
00:57:41.039 so yeah so just uh a little splash and
00:57:45.000 so essentially sort of how that was in
00:57:46.640 the in the first scene so I had
00:57:47.720 essentially was all these objects on
00:57:49.079 this on this wooden platter I just
00:57:50.760 animated the wooden bladder up had some
00:57:52.160 rigid body stuff blow it up and I did a
00:57:55.240 fell fluid simulation in the glass and
00:57:57.000 and would Splash up really nice I had
00:57:59.160 all the re time setup in um in in in
00:58:02.960 Solaris I did have a read time in here
00:58:05.440 on the on the fluids I just linked link
00:58:07.119 those up because I didn't want to deal
00:58:08.559 with the meshing inside of solaras
00:58:10.039 although you perfectly could set it up
00:58:11.599 to mesh inside of there as well um yeah
00:58:15.400 let's talk about this sort of morphing
00:58:17.880 uh like our our Olive into ice cube this
00:58:20.640 I think it's a pretty cool effect uh
00:58:23.119 really like the way it looks again the
00:58:24.640 colors a little bit weird cuz they're
00:58:26.119 having an embedded GI but um yeah so ENT
00:58:30.799 sort of build up of sort of three three
00:58:32.799 different elements uh so we have sort of
00:58:35.880 just a standard sort of VDB advection
00:58:37.799 setup where you essentially just uh
00:58:40.280 evect a a VDB sort of uh from its
00:58:44.000 gradient so essentially see as like a
00:58:46.160 norm like the normal of the uh of the
00:58:48.160 surface essentially just aected out
00:58:50.799 likeed outwards into a specific shape
00:58:53.119 and we have this Olive in the center
00:58:54.599 which has an attribute going past it
00:58:56.559 which again I can use in this uh like
00:58:59.240 just material blending which is now new
00:59:00.720 in xpu so I could actually blend
00:59:02.480 materials and then over there I just
00:59:04.359 have some scattered points inside of the
00:59:07.319 Ice Cube that I'm then sampling so I'm
00:59:09.799 volume sampling the SDF uh from the Ice
00:59:13.000 Cube and essentially just uh sort of
00:59:16.559 multiplying the particle skill based on
00:59:18.599 the distance um from the SDF so they
00:59:20.880 kind of just grow in sort of as the
00:59:22.400 thing grows like I know it's like super
00:59:24.520 solo like you almost hardly see those
00:59:26.480 little air bubbles but they're there and
00:59:28.280 they sort of add to the whole uh to the
00:59:30.799 whole thing um yeah so then you have the
00:59:34.280 uh you just have a fade for the Olive is
00:59:36.839 very simple fade but again just about
00:59:39.359 mixing the uh mixing the materials um so
00:59:42.160 here's where these Nesta di electrics
00:59:43.680 come in you can kind of see like a
00:59:46.039 pretty useful scenario so you can see if
00:59:48.039 I if I don't like here I want to hide my
00:59:51.240 uh my Olive once it's sort of inside the
00:59:53.000 eyes because you see else it just shows
00:59:54.559 up within the refraction and I kind of
00:59:56.359 wanted to feel like this ice is sort of
00:59:57.799 just growing over it so you can just use
00:59:59.520 these NSA dialectric with the priorities
01:00:01.359 to sort of just hide it once it's like
01:00:03.160 inside of the ice you can see like a
01:00:05.720 this is a like a proper use of like
01:00:07.920 something like n dialectric like um so
01:00:11.319 yeah that's uh stuff like that it's
01:00:13.039 super useful for
01:00:15.760 um so yeah right oh yeah so couple of
01:00:21.440 things here uh if you've ever used Karma
01:00:24.480 xpu before it's like in terms of render
01:00:26.680 settings it's quite basic you just
01:00:28.319 essentially brute force a bunch of rays
01:00:30.160 sort of through your through your scene
01:00:31.400 to render in Cara CPU you have uh like
01:00:34.119 the ability for example to just tweak
01:00:36.200 your samples for example like you need
01:00:38.039 maybe more refractive samples or
01:00:39.799 something like that or you can even like
01:00:40.960 do it on on an object uh this doesn't
01:00:43.440 work with xpu so of course you maybe
01:00:46.480 want to do stuff like that with xpu
01:00:48.400 because maybe your scene might end up
01:00:49.960 like a little bit little bit noisy in
01:00:51.559 some some spots so what I ended up doing
01:00:53.400 is I generally I um I rendered some of
01:00:57.039 these objects just separately and I
01:00:58.319 would just fire like fire more Rays at
01:01:00.119 the specific thing so for for this is
01:01:02.920 not super obvious but um essentially I
01:01:06.000 had a render and like the glass was just
01:01:07.520 not clearing up with with the with the
01:01:09.240 amount of samples and like with a
01:01:11.079 reasonable render time so essentially I
01:01:13.079 just rendered the glass separately and
01:01:14.440 you can set up with something like a uh
01:01:16.920 render geometry settings you can
01:01:18.240 essentially just put that on your
01:01:19.760 environment and will like you just hide
01:01:21.760 all everything except for the like uh
01:01:23.839 you like you hide the primary race
01:01:25.319 essentially it will just uh still
01:01:27.000 reflect the environment and still show
01:01:28.520 up in the reflections so you can just
01:01:30.240 render your glass and just fire more
01:01:31.920 samples at it glass will clean up pretty
01:01:33.960 fast you just layer those two renders on
01:01:35.880 top and then you have you're you're left
01:01:37.720 with a much cleaner render with much
01:01:39.559 less render time so that's kind of like
01:01:41.559 the workarounds to do this in xpu you
01:01:44.480 can see a pretty extreme example you see
01:01:46.760 a lot of noise over there on the left
01:01:48.440 like I know the look is a little bit
01:01:49.799 different cuz this was like an old
01:01:51.000 render but you see like even at like 50
01:01:53.400 minutes a frame that was just not
01:01:54.640 cleaning up and it's not because xpu
01:01:56.359 slow it's essentially there's GE lights
01:01:58.960 there which are going through candles
01:02:00.480 which have sub surface there's like a
01:02:02.279 whole bunch of stuff going on it was
01:02:03.720 just hard to clean that up um but
01:02:06.079 essentially if you just like split it up
01:02:08.400 like all of the separate renders for
01:02:10.319 these separate objects combined was less
01:02:12.079 than the 15 minutes frame you just need
01:02:13.839 to sort of properly split it up and then
01:02:15.640 just uh add it together so uh you can
01:02:18.520 see just a ground render and like the
01:02:20.000 candles were surrendered separately
01:02:21.319 glass were surrendered separately um but
01:02:23.880 you can then sort of just for each of
01:02:26.119 your elements just fire uh fire those
01:02:28.799 Rays like um some people might already
01:02:31.279 be familiar with sort of this workflow
01:02:33.000 but like with xpu like you really get
01:02:34.920 the most out of sort of the speed
01:02:36.240 setting it up like this for like more
01:02:38.359 complicated scenarios uh instead of just
01:02:41.039 rendering the whole thing in one go just
01:02:42.680 brute forcing samples through it you can
01:02:44.760 really speed this up because like
01:02:46.920 mentioned like the the total render time
01:02:48.960 of uh just doing it separately for each
01:02:51.119 of the frames was uh like for for for
01:02:53.359 each of the paes was lower than if I
01:02:55.079 were to just like Brute Force Rays on
01:02:58.240 the entire scene uh and it would end up
01:03:01.079 looking cleaner so there some nice stuff
01:03:03.720 here some additional tips and tricks as
01:03:05.760 well so uh Karma CPU has a curvature
01:03:10.000 Shader and doesn't work in xpu uh but
01:03:12.520 this is sort of a trick that I found out
01:03:14.480 like using one of the other notes so
01:03:16.319 there's wy20 has a Karma rounded Edge
01:03:18.799 Shader which is say like the intended
01:03:20.599 use is to have like when you have like
01:03:22.000 hard edges on something like a box you
01:03:23.720 can sort of fake um yeah fake like uh
01:03:27.160 that sort of looks round which is of
01:03:29.480 course is super useful on its own but
01:03:31.119 you can see there's a sort of a mask
01:03:32.480 output there I figured like if I just
01:03:35.440 use a mask output I can use it to like
01:03:38.880 to to function as a as the as a
01:03:41.279 curvature uh uh curvature Shader so you
01:03:43.880 can just use that instead and like works
01:03:45.599 pretty well so it's like a nice added
01:03:47.680 benefit like so if you run into that
01:03:49.279 just use uh use the round with Edge use
01:03:51.200 the mask for it and you can uh pretty
01:03:52.960 much use it as is you can here see
01:03:55.960 how I'm sort of using this with this
01:03:58.920 uh on something like for example like a
01:04:02.440 like the Jerry you can see works pretty
01:04:04.680 well um yeah that's really nice to
01:04:08.240 have
01:04:09.920 uh this was already in n in one build of
01:04:13.200 19.5 but you have these land shaders now
01:04:15.240 and normally I do stuff like dep of
01:04:16.960 field in composting but I figured with
01:04:18.599 this stuff I just rendered as much as I
01:04:20.400 could use directly in karma and then I
01:04:22.680 just also started playing around with
01:04:23.960 stuff like lens Distortion and
01:04:26.359 uh chromatic aberation it's uh like it's
01:04:29.480 really it's extremely fast um and it's
01:04:32.559 it's a lot of fun to play with so
01:04:34.319 essentially you can just make like a
01:04:36.079 Karma physical lens Shader and you
01:04:37.720 essentially just drag it in your karma
01:04:40.760 uh lens Shader and you can just play
01:04:43.160 around with it and it's it's it's it's a
01:04:45.319 lot of fun to just like make extreme
01:04:47.359 distortions or whatever and it's all
01:04:48.640 physically pH physically accurate so
01:04:50.480 it's quite cool um here's an example
01:04:54.200 where I actually used it so I um
01:04:56.319 actually in this shot like I shifted
01:04:57.839 sort of the focus cuz I I
01:04:59.839 wanted like more stuff to be actually in
01:05:03.119 focus and then it would uh then then it
01:05:05.400 would be if you just normally set up
01:05:06.920 your adaptive field you can see how with
01:05:09.039 this like tilt shift on this Karma
01:05:10.440 physical lens I can actually sort of
01:05:12.760 really uh sort of sort of push it in the
01:05:16.400 direction that I that I wanted it to uh
01:05:18.559 to look like so that's like quite cool
01:05:20.039 to
01:05:20.799 have um this I didn't see this mentioned
01:05:23.319 anywhere in the release LS but this is
01:05:24.880 one of my favorite features actually so
01:05:26.400 you can see there's a very low
01:05:27.559 resolution grid and you can actually now
01:05:29.000 do Karma like Point cloud lups and
01:05:31.240 directly in material X which is super
01:05:32.960 cool um so here is just a simple pick
01:05:35.559 and I'm like transferring the colar to
01:05:36.839 the grid but like it's a super low
01:05:38.039 resolution grid and like normally you
01:05:39.400 would if you want to do something like
01:05:41.119 this in for XP would need to transfer it
01:05:42.760 on the geometry and it would deal with
01:05:44.359 heavy geometry um but you can as you can
01:05:47.359 see you can just do it now directly in
01:05:49.000 material X which is is really nice to
01:05:50.839 have um it does need a point Cloud file
01:05:54.359 so you can just either write out a PC
01:05:56.680 file so Point file or you can just load
01:05:58.240 a boo so it doesn't link directly to
01:06:00.920 something like like a like a lob
01:06:03.079 somewhere or a uh just something in
01:06:05.920 soaps I like I I it would be amazing if
01:06:09.079 like if the developers are listening
01:06:10.520 like make this work with just like
01:06:12.160 putting something in there and just have
01:06:13.720 it work directly but you can already see
01:06:15.559 like something like this is type of
01:06:18.440 stuff you would do a lot like let's say
01:06:19.799 you're doing wet Maps or something like
01:06:21.319 simulation liquid splashing or something
01:06:22.880 you would you could like use your uh um
01:06:26.720 uh like your high resolution mes to just
01:06:28.839 render on like you wouldn't need to
01:06:30.119 transfer anything on there just really
01:06:32.480 nice to have um yeah and there's another
01:06:35.640 thing that just U there's new sort of um
01:06:38.720 Karma material xbb texture set which
01:06:40.960 just makes it easier to link up some
01:06:43.559 like some of these um some of these
01:06:45.520 textures a little bit easier than it was
01:06:47.720 before uh and theoretically it should be
01:06:51.720 the oh I finished early when I practiced
01:06:54.039 it it was like exactly 30 minutes but I
01:06:56.160 guess I guess we got uh we got we got
01:06:58.359 extra time then for questions so uh are
01:07:01.240 there
01:07:03.130 [Applause]
01:07:09.520 questions
01:07:14.480 questions I'm sure there are some
01:07:16.480 questions no all
01:07:20.799 right no
01:07:22.760 questions all right oh there are
01:07:25.359 question
01:07:26.119 questions hey uh really interesting
01:07:28.559 first off thank you um so uh it's kind
01:07:31.640 of a tangential question although it is
01:07:33.480 based around comic xpu uh is I'm quite
01:07:35.480 curious about uh baking workflows and uh
01:07:38.480 interested in using GPU rendering to
01:07:40.440 speed that up sort of going high poly to
01:07:42.240 low poly for games kinds of pipelines uh
01:07:44.680 do you know uh kind of what state that
01:07:47.880 kind of workflow is is it supported um I
01:07:51.400 like I know there's a baker I'm not sure
01:07:53.960 how that like you would have have to ask
01:07:56.079 someone who is like more does more uh
01:07:58.599 more more on that side uh I don't I
01:08:01.240 don't know I haven't I haven't used it
01:08:02.960 so sorry okay oh no that's all right was
01:08:05.119 a bit of a tangent so yeah no it's it's
01:08:07.279 fine but like uh there's probably people
01:08:09.599 around here that that know so just ask
01:08:11.960 someone from side effects I
01:08:22.839 guess so there are two Bakers now who
01:08:25.238 didn't which is the labs Baker and the
01:08:26.600 simple Baker Labs Baker Works basically
01:08:29.640 on its own it's made by Paul ambrosan
01:08:31.880 who is might here so you should bother
01:08:33.640 him as well um and then it was also like
01:08:36.120 the simple Baker which is still using
01:08:38.520 Mantra uh but hopefully uh I'm hoping
01:08:41.960 the karma might make his way and XP come
01:08:45.080 his way to maybe having indeed like
01:08:47.158 baking options for games would be really
01:08:49.600 cool and really fast to see that coming
01:08:55.839 any other questions for
01:08:59.479 Simon other questions on
01:09:02.040 Cera Al feel feel feel free to ask any
01:09:05.238 questions about the sequence even if
01:09:06.560 it's not about the karma stuff is I
01:09:11.399 mean going once going twice oh just one
01:09:15.799 sec one sec
01:09:27.880 H one of the things that was quite
01:09:29.000 interesting I think you just touched on
01:09:29.960 it in the last one was that texture
01:09:31.439 import is that just a way of importing
01:09:34.080 like Mass amounts of textures and then
01:09:35.719 just directly plugging them in uh yeah
01:09:38.120 it's essentially just an easier way to
01:09:39.640 just uh like Set set set up your
01:09:41.479 material uh uh like your PBR materials
01:09:44.359 like normally you would like need to put
01:09:46.158 something uh like just make individual
01:09:48.960 uh like like just IM like like uh
01:09:52.719 texture notes for that but with this one
01:09:54.400 you can just put in like all of your all
01:09:56.080 of your different maps and either put it
01:09:57.520 to projection type UV or tripler or
01:09:59.320 something like that you just plug them
01:10:00.920 in just a lot lot lot easier to just set
01:10:03.520 it up like that if you just have U uh if
01:10:06.280 you just have like U yeah just PBR
01:10:09.239 materials just just a nice thing to have
01:10:12.199 there there there's a ton of new like
01:10:14.239 smaller stuff and I only had like 30
01:10:16.080 minutes of course to like put it in the
01:10:17.480 presentation which I guess I could have
01:10:18.760 put more because I finished early but
01:10:20.360 like like I mentioned I when I practiced
01:10:22.880 it was exactly 30 minutes um yeah it's
01:10:26.000 is just a new note and there's there's a
01:10:27.480 whole bunch of of just smaller new stuff
01:10:29.719 as well it's like U uh like I'm like I I
01:10:33.000 briefly touched upon it as well it's not
01:10:34.719 necessarily related to your question but
01:10:36.239 like Karma CPU and xpu are now like they
01:10:38.199 really look at like pretty much
01:10:40.040 identical which is like in 19.5 it was
01:10:42.440 like somewhat identical now it's just
01:10:44.880 really it looks exactly the same so
01:10:46.960 there there's there's a lot of just
01:10:48.960 smaller new stuff that just are just
01:10:51.080 really great to have and it's a just a
01:10:53.320 it's been a big improvement with uh yeah
01:10:55.760 with Karm xpu in general but also just
01:10:58.560 with Building Materials in material X
01:11:01.239 because that was a little bit limiting
01:11:02.920 like early on it's starting starting to
01:11:04.600 get better with like new noes there's
01:11:06.000 also there's also ramp note uh like a
01:11:08.640 like a Karma ramp note now you can do
01:11:10.239 ramps and stuff like that that was that
01:11:12.320 was not there before and bunch of other
01:11:14.080 stuff that should make material building
01:11:16.000 a little bit
01:11:17.400 easier thank
01:11:20.800 you
01:11:22.400 yeah and uh it's not quite um Karma but
01:11:26.080 uh yeah there's no Vulcan render node or
01:11:30.000 open G render node that you've seen no I
01:11:33.520 think like also for the fulcon stuff I
01:11:35.719 think that was like still Beta And it's
01:11:37.159 like hidden by theault I think it's like
01:11:38.639 locked behind an environment variable
01:11:40.400 stuff like that I'm sure that'll come at
01:11:41.960 some point uh because I think like is
01:11:45.440 like any already know if like like is
01:11:46.920 fulcon is going to replace open G right
01:11:48.960 at some point yeah he's nodding so like
01:11:51.679 I'm sure like stuff like the open jail
01:11:53.199 render note is going to be replaced for
01:11:54.880 something like a like a vcon um vcon uh
01:11:59.199 render note at some point but like all
01:12:01.080 of that stuff that Von stuff is like
01:12:02.440 pretty pretty early um but it'll be
01:12:05.880 great to have once it's once it's like
01:12:07.560 fully there so
01:12:12.159 um other questions
01:12:15.840 yeah hi Tim um can you go back to that
01:12:19.760 SL you just had so
01:12:22.840 the the node on the left yeah so it's
01:12:27.239 pulling everything together yeah um in
01:12:30.560 terms of the image filter so it's set to
01:12:32.520 linear so I'm guessing that's for
01:12:35.719 roughness and normals yeah yeah there's
01:12:38.199 different different different filter
01:12:39.520 types so in terms of when that's pulling
01:12:41.800 all the different of image sets
01:12:45.199 together do we only have access to one
01:12:48.560 change in one image filter at the moment
01:12:51.239 so so the the color would be set to yeah
01:12:55.760 well like if you want if you want more
01:12:57.040 control I guess of the in individual
01:12:58.560 filtering you could still just still
01:13:00.760 just set it up individually just like
01:13:03.040 put your texture notes individually but
01:13:04.560 this is just an easy way to just load in
01:13:06.120 all like all of these textures plug them
01:13:07.480 in of course if you want just more gr
01:13:09.800 control for like plugging stuff and you
01:13:12.239 can still do it like the older way with
01:13:13.719 just the uh just the regular texture
01:13:16.040 notes or uh use the uh yeah just like
01:13:19.440 use dry planer mapping uh use like
01:13:21.920 whatever um yeah cheers thank you
01:13:36.320 yeah hello um so when using displacement
01:13:41.159 with xpu in
01:13:42.639 19.5 I've had a bunch of problems I'm
01:13:45.320 just wondering what your experience with
01:13:46.800 that has been now that uh XP in Gold uh
01:13:50.760 well displacement quality is better uh I
01:13:53.600 still had like some in ility issues here
01:13:55.920 and there and like some weird stuff uh
01:13:58.280 but the the the quality has definitely
01:14:00.159 improved uh but there were like I still
01:14:02.520 had some issues uh with it throughout
01:14:04.840 production but again like I'm not like
01:14:06.800 maybe some of these things have improved
01:14:08.880 during sort of the build cycle but of
01:14:10.639 course like I already had some stuff
01:14:12.040 rendered so I'm not sure if they cleared
01:14:14.080 up at some point for example with the
01:14:15.840 with the ice cubes uh actually I am
01:14:17.920 using normal Maps there for some of the
01:14:19.440 detail instead of displacement because I
01:14:20.800 had like some instability issues with
01:14:22.320 like trying to displace that um with
01:14:25.679 with the tri tripler mapping and stuff
01:14:27.480 but that could be fixed now during like
01:14:29.800 during the release cycle because of
01:14:31.080 course like I'm working on this like in
01:14:34.120 the BET software and they're still like
01:14:35.480 pushing updates every day um so like
01:14:38.440 it's gotten better especially the
01:14:40.000 quality has gotten better cuz like in
01:14:41.920 19.5 it was still like quality wasn't
01:14:44.600 quite there uh that has definitely
01:14:46.600 improved um but uh aside from that
01:14:50.040 there's like still some quirks but it's
01:14:52.400 G it's g a lot better so thank you
01:14:59.760 anyone
01:15:05.239 else all right well thanks very much Tim
01:15:07.920 great presentation thanks for uh thanks
01:15:09.840 for
01:15:10.120 [Applause]
01:15:12.980 [Music]
01:15:17.760 coming hello everyone and welcome to
01:15:20.600 Houdini 20 sexy clouds presentation my
01:15:23.560 name is a l and and I will be talking
01:15:26.520 about while creating sexy
01:15:29.880 clouds so in this release we
01:15:32.960 concentrated on creating tools for um
01:15:37.440 modeling clouds so as opposed to tools
01:15:40.719 for simulating
01:15:42.760 them so when it comes to model clouds
01:15:45.760 the best example to look at is probably
01:15:48.239 the Disney Cloud so if I could put um a
01:15:52.560 headline to this presentation it would
01:15:54.639 be something like have you ever wondered
01:15:57.320 how the Disney Cloud was made and maybe
01:16:00.520 then this presentation is for you so and
01:16:03.400 to figure this out and get some ideas
01:16:05.920 how it maybe was done I will be talking
01:16:08.760 about uh the new Cloud noise swap which
01:16:12.600 is uh the noise that effectively drives
01:16:16.400 all the nice sexy details then the bowy
01:16:20.800 and vispy noises which are the new
01:16:23.600 volume displacement tools then I will be
01:16:26.920 talking about and showing you Cloud
01:16:28.960 generation setup from start to the
01:16:31.159 beginning and then how we can render
01:16:33.639 these clouds out and to make them
01:16:35.760 looking like what you see in the
01:16:37.320 background and then lastly I will show
01:16:40.159 you the new Skybox which is uh an update
01:16:44.280 to the existing Sky node which lets you
01:16:48.719 create procedural
01:16:51.320 skyscapes so that said uh I will just
01:16:54.080 jump to Within
01:16:56.360 and as I said uh the Disney cloud is
01:16:59.840 probably the best example to look at so
01:17:02.480 when I um started the project I
01:17:05.719 downloaded it and give it a good hard
01:17:08.880 stare and the observations I made are
01:17:13.280 pretty obvious but I will just go
01:17:15.360 through them
01:17:17.880 so so the there are two distinctive
01:17:21.760 noise types I can see here is one is
01:17:24.320 live on the top is the below details and
01:17:27.280 then some areas turn into these vispy
01:17:30.800 details so mainly at the bottom and here
01:17:33.080 in the back so then this clear to me
01:17:36.719 that we need to create tools that would
01:17:40.480 allow you allow you to edit and to
01:17:44.320 displace volumes based on these two
01:17:46.760 noise types and also noticing that for
01:17:50.040 example the below noise has these flat
01:17:53.400 areas here which just adds even more
01:17:56.520 details to the cloud uh to the cloud
01:17:59.840 pattern actually so we need a way to
01:18:03.040 mass certain areas um there is also some
01:18:07.840 way that we should clip Cloud volume to
01:18:10.600 make the cloud bottom
01:18:12.840 flat so considering all of this probably
01:18:16.360 a good workflow would be to to provide
01:18:19.840 some sort of basic shapes using
01:18:22.600 geometries then displacing them with
01:18:24.960 below details then optionally clip the
01:18:28.719 bottom of them and select some certain
01:18:31.840 areas where we can apply a SP detail so
01:18:35.360 this generally this is the workflow that
01:18:38.360 I've been trying to implement then so to
01:18:42.000 start with um what well where do we
01:18:45.600 start it well uh the below noise
01:18:48.520 probably would be a good start how we
01:18:50.800 can create these nice below details
01:18:52.800 which you see in the clouds so
01:18:55.400 to do that I well let's look at some
01:18:58.520 real references so this is like a large
01:19:02.800 um Cloud um image of a large cloud and
01:19:08.199 um well you can see all the nice B
01:19:11.159 details all around the
01:19:13.000 cloud so what what is my main issue with
01:19:19.040 many of the while you see loads of
01:19:21.679 details here my issue is that that the
01:19:24.199 way the cloud look it's sometimes hard
01:19:26.120 to see behind you know the overly bright
01:19:29.679 areas and therefore you don't really see
01:19:31.960 the details behind them and therefore I
01:19:34.080 started to look at other references
01:19:36.320 where this kind of bowy nature is much
01:19:40.199 more uh visible and uh therefore I show
01:19:45.760 you a picture of uh like a volcano
01:19:49.480 pyroclastic flow from a volcano
01:19:53.440 so uh so this to me I just made an
01:19:56.960 assumption that uh in nature this is
01:20:00.080 probably something very similar how the
01:20:02.360 cloud patterns look like and so what I
01:20:06.840 kind of interested here is the what I
01:20:10.960 call the sausage patterns and I will be
01:20:13.360 calling them as sausage patterns for the
01:20:15.280 remaining uh of the presentation or you
01:20:17.760 know brain patterns so you will see that
01:20:20.600 that you got these larger details like
01:20:24.000 for example this one here which then
01:20:26.320 made off of
01:20:28.120 smaller details and then those again
01:20:31.520 kind of curling up as sausages again
01:20:33.960 divided into smaller details so if I
01:20:37.080 could describe it it's like a sausage
01:20:39.600 fractal effectively layering smaller and
01:20:42.960 smaller like kind of curling swirling
01:20:46.159 sausage details so how do we create
01:20:50.199 this so in houdin
01:20:53.639 um we now have uh a new noise type which
01:20:58.880 is called Cloud noise so if I just
01:21:02.600 showing you here applied in a simple
01:21:04.679 grid this is how it looks like
01:21:08.760 so so if I just go back comparing it uh
01:21:13.040 to all of these details here it's it's
01:21:16.560 pretty much uh representative so and how
01:21:22.040 how did we do it so This Cloud noise
01:21:25.120 exist as a a cloud noise V so this is
01:21:30.520 labeled as Cloud noise but actually
01:21:32.960 whoever like want to be knows more about
01:21:35.719 noises and want to me want to be more
01:21:37.800 precise this is actually a cloud
01:21:41.639 fractal uh and the difference is that
01:21:45.920 the cloud fractal is actually layering
01:21:48.760 Cloud noises on top of each other with
01:21:51.320 different varying element size and
01:21:53.880 amplitude
01:21:56.040 and to show you this um um if I set the
01:21:59.480 Distortion to zero for the cloud noise
01:22:02.800 you will see that I'm getting exactly
01:22:05.000 the same uh Simplex noise as I would be
01:22:09.320 getting with uh an attribute noise as
01:22:12.000 well so this is just a simple custom
01:22:15.920 fractal and as you see Distortion is the
01:22:19.080 key factor here so as I move the
01:22:21.560 Distortion up higher on the positive
01:22:24.199 direction Direction you will see the the
01:22:27.000 sausage effect is getting more prominent
01:22:29.800 so uh what I'm doing is in each rectal
01:22:32.920 iteration I'm just pushing uh areas with
01:22:36.880 Val with value with higher values
01:22:39.520 towards the areas with lower values and
01:22:42.800 if I go to the negative side uh you will
01:22:46.159 see the opposite happens and I'm getting
01:22:48.199 this very stringy kind of highy looks as
01:22:51.440 well and the parameter is sort of
01:22:53.600 optimized that between uh uh minus one
01:22:57.960 and one it gives the best
01:23:00.040 result so and then there are a couple of
01:23:02.639 other uh interesting parameters to
01:23:04.920 mention for example the
01:23:06.800 fold then you will get the more
01:23:09.639 prominent kind of sausage look again we
01:23:11.960 can compare it more of to to these kind
01:23:15.040 of
01:23:18.080 details
01:23:19.760 then what is interesting is the droop we
01:23:25.320 if I now starting to move it the details
01:23:29.880 will be stretched well moved along the
01:23:33.480 droop Direction creating this kind of
01:23:36.159 interesting
01:23:38.320 um like wet paint effects let's just
01:23:42.840 say and then there is one other uh
01:23:46.239 parameter to mention the ad Wordly
01:23:48.320 details and I just enable GMA here to
01:23:51.239 see it
01:23:52.280 better so this is coming from the guys
01:23:57.480 uh who did the Horizon zero done so they
01:24:01.040 did some amazing work on uh Cloud
01:24:04.120 generation for games and they've been
01:24:07.280 already doing many presentations about
01:24:09.480 it and one of the things they mentioning
01:24:12.520 in their presentation is this thing
01:24:14.880 called the pearlin worly noise and this
01:24:17.679 is just my implementation of that prob
01:24:21.280 worly noise they talking about and when
01:24:23.840 you enable this check boox uh this
01:24:26.280 worldly details are overlaid on the on
01:24:30.280 the cloud noise and this gives a
01:24:33.199 completely different Char characteristic
01:24:35.639 to it and uh um you can um you know use
01:24:40.800 it to your like but again this is
01:24:43.040 actually different from the look I've
01:24:45.360 been showing you on the references so I
01:24:47.280 will generally I will be not using that
01:24:50.639 in the in the demos actually
01:24:54.560 uh that said one more interesting um
01:24:58.119 parameter to uh to clarify is element
01:25:02.119 size versus stretch so if you want to
01:25:06.239 make those sausage details a bit more
01:25:08.360 stretched in certain direction you would
01:25:10.639 apply uh a larger element size like five
01:25:14.320 here but we have now a stretch parameter
01:25:18.360 on the cloud noise which I show you here
01:25:21.679 so if I go down
01:25:24.600 stretch set to five as well so this
01:25:28.159 preserves the finer details while still
01:25:32.800 stretching uh the details are out very
01:25:36.080 similarly and this just gives a much
01:25:38.320 more natural look to the uh to the
01:25:42.360 stretch details
01:25:45.840 effectively so um then how is this all
01:25:50.400 applied to making a cloud so this is
01:25:53.760 where the new uh py noise comes in so
01:25:58.040 well first of all let's just show you
01:26:00.440 the
01:26:02.760 the the test subject which is uh volume
01:26:06.119 sphere so on this test subject I apply
01:26:10.000 the existing uh Cloud noise node which
01:26:12.960 we had already for for many releases so
01:26:17.360 I had several issues with this uh node
01:26:22.360 and when it cons when we consider the
01:26:24.840 look of it what it generates one of the
01:26:27.280 main concern is the jigo puzzle look I'm
01:26:30.840 getting with it so you can see here
01:26:33.480 these like dips here that goes around
01:26:37.560 like an edge of like a jigo puzzle
01:26:40.320 effectively so this is very unnatural
01:26:43.080 istic so um I could never really use
01:26:46.800 this Cloud noise to generate any
01:26:48.719 realistic looking Cloud noise really
01:26:52.360 then the second thing is the little
01:26:55.600 broken enough pieces which are really
01:26:57.679 annoying and when I model clouds I kind
01:27:00.600 of want to control them uh either to
01:27:03.840 have them or not but currently with this
01:27:06.440 Cloud noise you cannot control it if you
01:27:08.520 increase the amplitude and you like the
01:27:11.360 amount the displace the amount of the
01:27:14.679 displacement but you might end up with
01:27:17.719 these uh broken up pieces and there is
01:27:19.880 no way to control
01:27:21.880 it so to combat all of these uh now we
01:27:26.280 have the new Cloud bowy noise which
01:27:28.800 meant to create all of this nice bowy
01:27:30.760 details using the the cloud noise I
01:27:33.639 showed you before so let's look at this
01:27:36.560 one so this Cloud below noise is pretty
01:27:40.560 much the default nothing changed I
01:27:43.320 increased amplitude added a bit of gain
01:27:46.520 and changed the O octave so so nothing
01:27:49.320 very harmful but what you see here it's
01:27:52.800 well not really what I would expect and
01:27:56.560 the reason is because the
01:27:59.360 iterations
01:28:01.880 so I kind of realized that the best way
01:28:04.760 to apply bow noise and to generate bowy
01:28:07.480 noise is to take again uh what we see in
01:28:12.480 the reference which are all of these
01:28:15.560 like you know fractals like larger and
01:28:19.159 smaller and even smaller details so
01:28:22.600 therefore I also added a iteration
01:28:25.000 parameter
01:28:26.679 on on the uh on the cloud belon and as
01:28:32.119 soon as I enable iterations so in this
01:28:34.840 node I nothing has changed if I just go
01:28:38.480 to the default tab nothing has really
01:28:41.719 changed but just the iteration enabled
01:28:44.400 to three and I immediately getting
01:28:47.760 details that are a lot more interesting
01:28:51.280 and looking a lot more like I would
01:28:53.679 expect the Bel noise to look like so all
01:28:57.080 the all the difference is that I enabled
01:29:00.480 iteration
01:29:03.440 here and then we have separate controls
01:29:07.639 for ad vaction so this can stretch the
01:29:09.600 details out giving you even more
01:29:11.679 interesting looks and the the best part
01:29:15.280 of it is uh the attenuation so here you
01:29:20.159 can control how much in each iteration
01:29:23.040 your amplitude M size or all other
01:29:26.040 parameters are reduced and here I'm
01:29:29.159 saying that in each iteration the value
01:29:31.520 should be reduc to only 35% of its
01:29:35.159 previous iteration uh you can also scale
01:29:37.960 them up as well so you can go into the
01:29:40.199 positive scale Direction so and it's
01:29:43.440 very interesting to play with play
01:29:45.520 around with this parameter and see what
01:29:47.800 do you get if you apply gamma gain bias
01:29:51.000 Etc um so
01:29:54.520 so yeah we came from something like this
01:29:57.280 to looking well
01:30:00.159 something like more of a a cloud
01:30:04.040 look then next thing is a cloud clip so
01:30:08.119 I was mentioning we need a tool for
01:30:10.080 clipping the bottom so this is now
01:30:12.800 called the cloud clip so
01:30:15.920 so this is
01:30:18.960 um very much similar to what uh uh what
01:30:24.600 the clip so does for geometries it just
01:30:27.119 does it for volumes and uh you can also
01:30:30.960 apply displacement to it so when this is
01:30:34.840 again based on the cloud noise so all of
01:30:37.880 the cloud noise parameters are promoted
01:30:40.400 here and you can able to apply some
01:30:44.320 really interesting variation and
01:30:46.679 patterns to the bottom of the cloud just
01:30:48.600 like
01:30:49.880 this then what is interesting uh is the
01:30:54.199 workflow related part of this note so
01:30:57.440 here we split out both the bottom and
01:31:01.000 the top so later you can combine them in
01:31:03.280 your workflow and we have a thing called
01:31:06.880 a clip mask so if I display the clip
01:31:10.199 mask you will see that this is just a
01:31:13.000 simple density volume that is zero at uh
01:31:19.239 the where the clipping plane is and the
01:31:21.960 further is from the clipping plane we
01:31:23.719 can control the fading range and we can
01:31:26.920 get effectively a shrank mask out of it
01:31:29.800 so I could use this mask then to
01:31:32.800 control um let's say the vispy noise in
01:31:36.600 the bottom of the cloud from the Kling
01:31:39.280 plane so so this is super handy and
01:31:42.639 because it's a mask it we have to make
01:31:44.679 sure that this mask is uh incompasses
01:31:48.320 all the regions where my nose might be
01:31:51.520 displaced to so therefore for the we
01:31:55.280 have upper and lower padding controls to
01:31:58.239 then able to create a large enough mask
01:32:01.560 volume out of this uh clip
01:32:04.719 mask and I will show you this in
01:32:06.960 practice as well uh the next thing is
01:32:10.040 the vispy noise so again taking the The
01:32:14.320 Blob shape I just created uh I have to
01:32:17.440 activate the VDB here so making sure you
01:32:20.360 have enough activated VDB cells and and
01:32:24.239 then applying a cloud vispy noise I'm
01:32:26.960 able to
01:32:28.119 create um the vispy details so again
01:32:32.760 Works similarly you have sort of
01:32:34.840 substeps telling you how many substeps
01:32:37.360 you should take while also you have
01:32:39.880 iterations so you can apply the same
01:32:42.760 pattern multiple times as well but this
01:32:45.239 node actually based on the already
01:32:48.360 existing noise STP like analiz flow
01:32:52.239 Etc and what is is more interesting in
01:32:55.000 this note as well is creating wind so on
01:33:00.639 if I show you this
01:33:02.520 one yeah right here for
01:33:06.400 example what you also notice in the
01:33:08.520 Disney cloud is that this wispy details
01:33:11.040 the further they are from the the the
01:33:14.480 cloud shape the more they start to bend
01:33:17.040 towards the wind which is a very really
01:33:20.560 nice effect and uh if you and I just
01:33:26.000 have to change the visualization here so
01:33:28.639 if I convert the the cloud to uh VDB
01:33:33.679 surface and then provide that as a
01:33:36.320 surface volume then I can add wind and I
01:33:40.199 can scale the wind strength by this
01:33:42.760 surface distance so if I not disable
01:33:46.440 wind you will see that uh now the detail
01:33:50.400 starting to stretch towards the wind
01:33:52.560 direction
01:33:58.239 so after this uh I think we're ready to
01:34:01.800 show you uh um an example of uh
01:34:07.760 generating a cloud from start so for
01:34:10.560 this one I use the cloud shape generate
01:34:14.920 node so this is very much like um a pyro
01:34:20.520 bur Source node where you can generate
01:34:25.119 some random Cloud shapes so I just have
01:34:28.520 here on the side another one of these
01:34:30.600 noes and to show you an example and I
01:34:34.480 can change the seed and I'm getting you
01:34:37.880 know variety of uh of cloud shapes and
01:34:42.800 this is made off of actually primitive
01:34:46.440 spheres and these primitive spheres
01:34:50.080 are are actually provided with a p scale
01:34:53.719 Point attributes so that means that you
01:34:56.080 can just simply connect a VDB from
01:34:58.320 particles nodes right after it for a
01:35:00.920 very fast volume
01:35:03.760 conversion um and again going back to
01:35:06.159 the node um it has lots of option to
01:35:10.080 control the shape and again similar to
01:35:12.239 the Pyro bur Source uh you can just
01:35:15.199 input a grid and you can just populate
01:35:18.080 your sky with all different kind of
01:35:20.840 shapes if you would like to take this
01:35:22.639 approach for your
01:35:24.280 uh Cloud modeling as well but right now
01:35:27.960 I just go back to Cloud shape
01:35:31.119 generate and using the setup I just do a
01:35:35.600 mountain to kind of aride the shape yet
01:35:38.760 again then as I said I can just apply
01:35:42.199 VDB from particles and I do a cloud clip
01:35:46.239 for the
01:35:48.639 btom then uh Cloud adjust density
01:35:51.960 profile is yet another new node
01:35:55.920 so so here I want to create the same
01:36:00.320 profile as density profile as the Disney
01:36:03.199 Cloud does and this is just just because
01:36:07.000 why not so if I show you the Disney
01:36:10.719 Cloud profile this is how it looks like
01:36:13.400 which is
01:36:15.239 one well the there is a value much
01:36:18.520 stronger value like value of of larger
01:36:21.440 than 0.5 to1 in this areas and then the
01:36:25.000 inside is like
01:36:26.560 0.5 and and then of course with the visp
01:36:29.119 details they they also Vari the the
01:36:32.280 bottom of it
01:36:33.719 here but then I'm able to create similar
01:36:37.280 patterns here
01:36:39.040 so so if I go back here before the cloud
01:36:44.040 below noise I apply this density profile
01:36:47.440 and here I'm simply saying that the edge
01:36:50.199 thickness should be 0.5 so this distance
01:36:53.320 here
01:36:54.040 where the edge density should be one and
01:36:56.639 the internal density everything inside
01:36:59.119 should be
01:37:00.880 0.5 so after this I run my cloud Bel
01:37:05.480 noise which
01:37:07.199 generates all of these nice curly
01:37:10.480 sausage details so here um again just
01:37:15.280 some custom values enabling gain
01:37:18.719 GMA
01:37:20.520 um I apply a direction to it way that
01:37:24.480 actually stretches out these details
01:37:27.760 into more even more kind of sausage
01:37:30.320 pattern looks so which is really great
01:37:33.119 and then um yeah just some actually very
01:37:37.119 minimal attenuation settings so there is
01:37:40.199 really nothing much to
01:37:42.159 it then next thing is another Cloud
01:37:46.719 belowing noise and here I do not apply
01:37:49.679 any iteration actually because the first
01:37:52.040 Cloud bals already did the job of
01:37:55.239 getting the generic shape done this is
01:37:57.679 just to add a bit tiny bit more detail
01:38:02.440 uh into into the cloud and that's some
01:38:05.520 variation but now if I show you the
01:38:09.480 volume slice now you will see that we
01:38:12.480 getting there we are getting a very
01:38:15.880 distorted shape around the edges with
01:38:19.000 varying density values while we have the
01:38:22.520 inside set to 0.5 but this is very
01:38:26.480 chaotic in the inside yet so after
01:38:28.719 applying another Cloud density profile
01:38:32.119 uh I can just clean up the
01:38:34.360 internal um uh areas and then just make
01:38:38.560 sure they're all you know
01:38:41.199 unified
01:38:43.440 then let's clip again the bottom of it
01:38:46.760 so that we have a flat button button but
01:38:49.560 in this now I apply a display placement
01:38:53.800 noise as well to create some interesting
01:38:55.599 details there and
01:38:58.840 then now to apply the vispy details I
01:39:03.119 just do an other clipping to just
01:39:05.520 separate out a tiny random layer from
01:39:09.480 the bottom with some random
01:39:13.040 thickness and
01:39:15.000 then activate it apply
01:39:18.599 some
01:39:20.679 POG so that uh this will just simply
01:39:25.400 multiply the the density so give it more
01:39:29.080 variation and then on the other side
01:39:31.360 here as I showed you before I just
01:39:33.280 converted to a surface field and now
01:39:36.719 when I apply the cloud whsp noise I will
01:39:40.159 get something like this out of
01:39:44.080 this and then when I combine the two
01:39:47.560 together then I will be ending up with
01:39:52.199 uh very simple below Cloud that has whp
01:39:56.280 details at the
01:39:59.400 bottom however this is not the only way
01:40:02.080 you can create clouds and I want to show
01:40:04.040 you another setup so with this one I I
01:40:08.960 use a a line and Scatter shapes around
01:40:12.320 the line then replicate those shapes and
01:40:15.920 then with the below noise and when it's
01:40:18.960 volume I can get some uh really nice
01:40:22.679 details that matching exactly my uh
01:40:25.000 input shape
01:40:27.320 so and this setup was actually used to
01:40:30.960 generate uh uh This Cloud
01:40:35.239 so these are all like the same typical
01:40:38.679 below clouds with uh withp noise at the
01:40:42.520 bottom and
01:40:45.159 U and I just lined them up and and then
01:40:48.119 just having the camera pen through them
01:40:50.920 and we have another V VIs izer for
01:40:54.119 Houdini for volumes which is now we
01:40:57.560 provide uh control over the ambient
01:41:00.840 colors uh that you want to set and when
01:41:03.960 you set them to the right colors you can
01:41:05.920 get some pretty nice looking results
01:41:07.840 like this out of the box so the the bowy
01:41:13.000 uh noise soap actually has a checkbox
01:41:16.159 with a visualizer that is able to just
01:41:18.320 immediately turn on this kind of
01:41:20.159 visualization so it switches between
01:41:22.560 this and the previously shown like gray
01:41:26.000 look so going back to the the setup then
01:41:30.360 so this new setup as I said this will
01:41:32.719 generate clouds such as uh this one
01:41:39.000 so so this is the line which I was
01:41:42.040 showing you and the cloud shape from
01:41:44.320 line does the shapes uh as I mentioned
01:41:48.000 but here for the setup I did couple of
01:41:50.840 uh different uh uh variations actually
01:41:55.239 so
01:41:58.639 um
01:42:00.239 so there is one
01:42:02.960 horizontal and there is one where
01:42:05.800 vertical but I sort of bended it and I
01:42:09.560 can get shapes like this one and then in
01:42:12.159 the in the setup demo I just simply
01:42:15.599 randomly did a random selection for each
01:42:18.199 wedge to pick whichever uh Source they
01:42:21.560 want or the top ones so then the next
01:42:25.440 thing is a flatten so which the purpose
01:42:29.239 of this is that I can move these spheres
01:42:32.080 or points above the ground so that the
01:42:34.119 Spheres sit actually on the grand plane
01:42:37.360 now this is a very much generic node so
01:42:42.960 I can demonstrate it on a plane
01:42:47.400 um
01:42:49.880 it's it's just a typical uh it's it's
01:42:54.000 not as like the clip node which the clip
01:42:56.239 would actually remove these Primitives
01:42:58.560 but the flatten it just simply moves the
01:43:01.440 the points to the clipping plane and the
01:43:04.719 nice option is you can enable uh uh a
01:43:08.520 second clipping plane to clip something
01:43:10.639 in
01:43:12.040 between and you can then move them all
01:43:14.760 together but if you want to do this
01:43:16.960 there is an act simpler way to go single
01:43:19.480 plane and then uh you only have one
01:43:22.599 single plane to control
01:43:25.320 actually and the nice thing about this
01:43:27.840 is that it has a thickness attribute and
01:43:30.119 then this attribute is then considered
01:43:32.719 into calculating the the distance uh to
01:43:36.880 the clipping plane and this is actually
01:43:38.800 the feature I can use here for the the
01:43:41.880 flattening of these clouds primitive
01:43:44.080 spheres because knowing the radius I can
01:43:46.840 make them sit on top of the the grid so
01:43:51.520 after that I use the cloud shape
01:43:53.119 replicate which is a very custom like
01:43:55.719 skatter replicate kind of mix um it's
01:43:59.920 it's
01:44:00.920 very artistic node whatever I find
01:44:04.840 working as um promoted here so the
01:44:09.360 purpose of this node is just to get
01:44:11.199 additional details out from a shape like
01:44:14.080 this and then I just blessed out couple
01:44:16.520 of more primitive spheres and then I
01:44:18.920 apply even more uh uh cloud shapes on
01:44:23.599 that and when I merge these two together
01:44:25.639 I get a shape like this which you
01:44:27.199 already seen on the the image and just
01:44:30.800 another flattening so that everything
01:44:32.639 sits on the ground and the VDB from
01:44:35.960 particles to get the the volume and I'm
01:44:38.760 getting this this really nice shape
01:44:42.119 here then what is interesting to mention
01:44:45.000 on the right side here I use a cloud
01:44:46.840 shape from intersection so this note
01:44:50.280 finds out where are the intersection
01:44:52.239 between the primitive spheres and then
01:44:54.080 it just replicates or copies more
01:44:56.400 primitive spheres on those intersection
01:44:58.880 and here I copy just enough to make them
01:45:01.360 look like it's a
01:45:02.760 donut and then merging the two together
01:45:05.960 it looks like this and now you can see
01:45:08.119 that it can be used to fill up the the
01:45:10.520 large like gaps between these primitive
01:45:12.960 spheres if that's what you need arst
01:45:15.520 strictly and just run another flaton VDB
01:45:19.080 from particles and I just simply run
01:45:22.119 some shape operation on it and while
01:45:26.159 this is not necessary I just merg the
01:45:28.679 shape back uh this shape into the uh
01:45:34.159 into the shape on the left and I run the
01:45:37.760 cloud adjust density profile again and
01:45:40.920 you will see that from here on it's
01:45:42.840 pretty much exactly the same
01:45:45.960 thing except the only thing is on the
01:45:48.599 right side I take this shape which I
01:45:50.639 created and uh I just create a a volume
01:45:55.239 mask out of it which drives the below
01:45:57.480 noise so so because this is not
01:45:59.760 considered as a mask uh you can see that
01:46:02.440 some areas were not as affected by for
01:46:07.199 example here inside by the uh below
01:46:12.119 amplitude and you can see it more at the
01:46:15.199 bottom
01:46:17.719 here and now I can also use another
01:46:22.040 below noise here here and this only
01:46:24.719 applies to the areas which I did not
01:46:28.119 touch much in the with the other below
01:46:30.719 noise so I can get some
01:46:32.880 additional uh uh details there so
01:46:36.840 therefore this is kind of trying to show
01:46:38.599 you the kind of amount of controls you
01:46:40.760 can have in certain areas of the cloud
01:46:43.520 same similarly how the Disney Cloud did
01:46:47.480 it and then uh as a next note I just go
01:46:52.560 on
01:46:53.719 and uh do another uh below noise here
01:46:57.840 where I just only randomly push out some
01:47:01.599 certain areas to give some more detail
01:47:04.239 to it and then from here on it's again
01:47:07.280 exactly the same thing so I don't even
01:47:09.800 think it's necessary to go over you can
01:47:11.599 even recognize the same setup here to
01:47:13.800 make it wispy at the bottom so I just
01:47:17.080 simply jump to the actual generated
01:47:19.760 Cloud here and then uh
01:47:23.960 and then I just transform it uh flip it
01:47:27.880 and I ended up with this
01:47:31.320 Cloud now when it comes to
01:47:34.880 rendering there are two ways there is
01:47:37.880 the sort of simple way but less
01:47:39.960 realistic and then there is the well
01:47:43.239 also simple way more realistic but takes
01:47:46.239 longer time to render so if we look at
01:47:50.760 the the last time consuming approach
01:47:54.440 then what you can do is to use a volume
01:47:58.000 ambient occlusion node and this
01:47:59.880 generates an occlusion volume out of
01:48:02.360 your
01:48:03.320 density and you can use it as an
01:48:06.360 emission volume in your Cloud uh Shader
01:48:09.679 to make it uh you
01:48:12.360 know look to create the internal
01:48:15.040 scattering for the cloud instead of
01:48:16.920 actually calculating it by bouncing Rays
01:48:19.639 inside the cloud so if I just uh enable
01:48:24.760 this and I show you this is the kind of
01:48:28.440 result you got now uh if I lower this so
01:48:32.320 again this is how it is by just using a
01:48:35.440 default kop physical light and um if I
01:48:39.000 jump to the Shader you can see that in
01:48:42.599 the scatter
01:48:43.840 option uh I have the scatter ramp and
01:48:47.360 the scatter is actually driven by this
01:48:51.040 uh generated occlusion wall
01:48:53.760 so you can get some really nice looking
01:48:57.400 like occlusion details
01:48:59.440 here but the issue is that you kind of
01:49:03.440 work against your um your light sources
01:49:08.360 for your directional lights let's say if
01:49:11.040 I now just as I had it before starting
01:49:13.440 to increase it you will starting to get
01:49:16.040 more details into the cloud but in the
01:49:18.400 expense of this occlusion volume not
01:49:20.760 being so dominant anymore and you kind
01:49:23.560 of have to find uh ways to balance it
01:49:26.639 out and kind of make it work um it's
01:49:29.880 depending what you like but the good
01:49:31.520 thing about this method is that you
01:49:33.000 don't use any volume aray limit so the
01:49:35.440 rendering is actually can be considered
01:49:38.080 rather uh rather fast and actually it
01:49:40.960 should be even much faster I just simply
01:49:43.800 had a really large uh um uh P traced uh
01:49:49.400 sample size here so this is actually
01:49:51.840 really fast
01:49:55.000 and not so fast approach but the more
01:49:57.440 physically correct is the
01:50:00.599 multiscattering
01:50:02.199 so so this is the same setup but I'm not
01:50:05.159 using the um this occlusion volume I
01:50:10.360 just simply set the volume limit to
01:50:14.679 32 and
01:50:17.719 um and just apply the default Cloud
01:50:20.960 Shader but I'm getting a lot more
01:50:24.000 interesting and uh you know more
01:50:26.560 realistic looking
01:50:28.119 cloud and I just let it to render in the
01:50:31.280 background and I want to show
01:50:35.239 you um the cloud Shader and talk about
01:50:40.239 shading clouds actually
01:50:43.760 so to set up uh um a cloud Shader uh
01:50:49.000 which works both on CPU and xpu you
01:50:52.280 would have to use the karma volume which
01:50:55.000 is a a wrapper around the um the matal X
01:51:00.360 notes to rendered volume volume so this
01:51:03.760 has all the absorption scattering
01:51:05.760 options um anisotropy and all other like
01:51:09.920 options you need to render with clouds
01:51:12.880 and if you just want to create a very
01:51:15.679 basic volume Shader effectively this is
01:51:19.280 the setup for that so A density which
01:51:22.599 which then can be multiplied up and then
01:51:25.480 you you multiply one with a black color
01:51:29.360 for your absorption and you multiply one
01:51:33.239 uh the other Branch with value of one
01:51:35.599 for the scattering and plug it into the
01:51:37.480 karma volume and pretty much that's how
01:51:41.400 this is the most basic uh uh volume
01:51:44.119 Shader you can
01:51:45.840 get now what are all of these parameters
01:51:49.199 and how did they get there so
01:51:53.119 taking this setup there are certain
01:51:56.480 modifications you can do to make it
01:51:58.599 suitable for cloud rendering
01:52:01.119 and and this is this network that shows
01:52:04.079 this modification and this is some sort
01:52:06.360 of like a we standard way to render
01:52:09.840 clouds and I will have an example up in
01:52:13.119 the in the Content Library that only
01:52:15.800 show you with the test in this setup and
01:52:19.719 you can you know implement this setup in
01:52:21.480 any other uh um you know render engines
01:52:24.079 you want to uh to successfully you know
01:52:27.679 render some sexy clouds but effectively
01:52:30.679 the trick here is that
01:52:33.960 um that uh we have a thing called
01:52:36.880 density fall off which is what what what
01:52:40.560 it what we do here and I dive inside to
01:52:43.040 show you I'm importing the ray level so
01:52:46.360 the r level means that the the bnce
01:52:49.159 level of the Rays so
01:52:53.719 so when the ray start to bounce inside
01:52:56.040 the cloud because you remember I set my
01:52:59.040 volume limit to 32 um if I just show you
01:53:03.119 here volume limit 32 it means that the
01:53:06.079 rays are allowed to bounce inside the
01:53:08.520 cloud 32 times and then this Ray level
01:53:12.280 will tell you like where is this
01:53:13.920 bouncing at now like 1 2 3 4 or or how
01:53:16.800 many bounces has to rate done already
01:53:19.440 and by simply taking that and uh
01:53:23.400 applying you know some exponential
01:53:25.520 function to it um I can scale down the
01:53:28.960 density with each new Ray BNS uh so
01:53:34.560 effectively what I'm saying here is that
01:53:37.560 the more the ray bouncing into the cloud
01:53:40.159 scale down the preceived
01:53:43.000 density uh and that will
01:53:45.560 also make the ray limit
01:53:50.400 to sort of uh to stop much earlier
01:53:54.440 because wherever the the density will be
01:53:57.760 perceived as zero then the ray BNS will
01:54:01.199 not happen again so effectively you can
01:54:04.400 also speed up your rendering by
01:54:06.880 providing larger uh density P off but
01:54:10.400 this there are caveat to that so and I
01:54:12.679 will show you later but this is a very
01:54:16.119 good way to get very you know nice
01:54:19.280 looking Cloud so this is one part of
01:54:21.440 that and the anot tropy controls
01:54:25.599 are based on the same principle so I
01:54:29.079 inside here I also taking the ray
01:54:31.800 import and um the anisotropy followup
01:54:35.599 tells me how fast I should be falling
01:54:39.040 from 0.877 so the default anisotropy
01:54:43.119 value towards zero so anop follow off of
01:54:48.599 like 0.3 would like get the anisotropy
01:54:51.840 done to zero in a matter of like three
01:54:54.040 four
01:54:55.320 bounces um
01:54:57.800 and so these are the main components to
01:55:00.400 it and uh what we did is this density
01:55:04.119 fall off it's actually we integrated
01:55:06.560 into the karma volume and it Lees as as
01:55:10.040 Extinction uh uh modifier so this is
01:55:13.280 exactly the same parameter as this
01:55:15.079 density fall off so you do not need to
01:55:18.480 implement this and uh our uh um uh pyro
01:55:23.239 Shader we have implemented this an
01:55:26.159 isotropy for love as well which I will
01:55:28.960 uh show
01:55:30.199 you and
01:55:33.239 then and then when it comes to the cloud
01:55:35.719 rendering I show you the the new
01:55:39.280 motorial x uh pyro Shader so this is
01:55:44.560 very much similar to
01:55:47.840 the previous pyro Shader that we had um
01:55:52.840 but it's much more modular and I I will
01:55:56.920 come back to it in a bit I just want to
01:55:59.079 show you now the uh uh the cloud options
01:56:03.719 so as you see we have anisotropy as well
01:56:06.840 as we had before but this rough
01:56:09.400 roughness to enable roughness this is
01:56:11.760 exactly what I showed you here
01:56:15.400 the the anisotropy fall off setting so
01:56:18.639 when you enable roughness you
01:56:20.639 effectively control this en tropy fall
01:56:23.000 off and then here the density fall off
01:56:28.000 is promoted as extension fall off um and
01:56:31.480 then we have couple of other controls
01:56:33.880 here um albo contribution is for example
01:56:37.880 telling
01:56:38.960 you you can set it to brighten up your
01:56:42.000 clouds um and the start level tells you
01:56:46.639 after how many Ray bances this extension
01:56:49.560 followup should actually take effect and
01:56:52.320 the default is z zero so it will
01:56:54.360 immediately you know start to to kick
01:56:57.679 in and uh so these are all great and I
01:57:03.159 prepared some actual render um uh test
01:57:08.920 actually how this whole things actually
01:57:11.159 looks like so this is just me um playing
01:57:15.400 it a bit like um some slower speed so
01:57:20.199 this is just a very standard Cloud uh as
01:57:23.920 you can see there is nothing else set
01:57:25.679 other than isot is on isotropy to a very
01:57:29.320 high value and u i just increased the
01:57:32.719 volume limit to to 32 and you will see
01:57:36.079 that the cloud getting brighter and
01:57:37.679 brighter and you can set it up all the
01:57:39.639 way to like 250 which is our clamp value
01:57:44.239 but of course you will get like very
01:57:46.760 very slow renders then so that is not
01:57:50.079 recommended so now as a next step I will
01:57:54.480 be uh changing the extension follow so
01:57:58.079 after you set your volume limit set your
01:58:00.239 an isotropy the next thing you should be
01:58:02.000 setting is the extension follow and and
01:58:06.840 this is a very interesting uh control
01:58:09.639 because as you
01:58:11.440 see there is a peak point where the
01:58:15.800 extension fall off is actually getting
01:58:18.360 very
01:58:19.320 bright and then after that it's slow
01:58:22.440 just dies off into like you know dark
01:58:24.960 and losing contous and the important
01:58:27.480 thing is thatth you have to find that
01:58:30.520 Peak point where your cloud is the most
01:58:32.560 brightest and usually this is between
01:58:34.440 value of 0. to1
01:58:37.440 0.3 uh Etc something along the line like
01:58:40.719 this
01:58:42.520 so after that
01:58:46.040 um if I now pick my extension fall off
01:58:49.719 which I said
01:58:50.880 0.21 then then I can enable the
01:58:53.320 anisotrophy roughness and you can see
01:58:56.920 that I immediately get some really nice
01:59:01.599 fluffy like powdery like candy looking
01:59:05.840 cloud like it's you know this uh the mix
01:59:09.480 of these controls can really nicely
01:59:11.320 bring out uh you know some some really
01:59:13.760 nice details in it and just to show you
01:59:16.800 with if you pick an extension follow off
01:59:18.840 that is like uh you know not in that P
01:59:22.639 brightness
01:59:24.239 then as you would see again here right
01:59:26.960 just simply again just changing the
01:59:28.599 anisotropy roughness the same way but
01:59:30.679 you see that that the cloud never gets
01:59:33.119 as bright and it has much less conscious
01:59:35.960 maybe that's something that you want uh
01:59:38.719 but generally I think this uh picking
01:59:41.960 the right Extinction value uh it's it's
01:59:45.560 actually
01:59:48.079 important and then in houdin as well we
01:59:51.560 have uh talking about SE anisotropy we
01:59:54.719 have another control here uh to use uh
01:59:58.079 secondary anisotropy so this is
02:00:00.199 something that um you would see in any
02:00:04.599 other render engines
02:00:06.920 implemented uh where you can have a mix
02:00:09.719 attribute and another anisotropy value
02:00:12.639 to set uh but well there are pros and
02:00:17.599 cons so this renders the cloud somewhat
02:00:20.679 sharper but also you can introduce uh a
02:00:24.960 lot more noise into your render as
02:00:27.280 opposed to simply just use roughness for
02:00:30.239 example which we I've been showing you
02:00:33.599 so roughness as you seen did not cause
02:00:35.920 any much noise
02:00:37.719 but sometimes you could tell that maybe
02:00:40.599 your Cloud a tiny touch bit softer than
02:00:43.840 it should
02:00:44.840 be uh but again um and just to show you
02:00:49.159 the secondary makes so here I have the
02:00:54.400 anisotropy
02:00:56.520 0.877 I have secondary anisotropy to
02:00:59.480 zero so this is the same value as my
02:01:01.719 roughness would fall to if you would use
02:01:04.599 the roughness uh settings and I just
02:01:08.040 changed the secondary mix in between and
02:01:11.560 you can see that based on different like
02:01:13.920 mix values you would end up with a much
02:01:16.480 noisier areas in these regions as well
02:01:20.199 so
02:01:22.280 but again the controls are there you can
02:01:24.599 even mix it you can enable roughness
02:01:26.560 with secondary and isotropy so it's
02:01:28.840 really really up to you how you have all
02:01:31.119 the kind of controls to to make some
02:01:33.719 sexy
02:01:34.800 renders um then the next thing is the
02:01:37.880 lbo controls which I quickly mentioned
02:01:40.119 before it just simply lets you like you
02:01:42.400 know um um scale up uh your brightness
02:01:46.880 of your
02:01:49.960 Cloud which again you can find
02:01:56.239 here and then what did not mention uh
02:02:01.159 but we have uh uh Karma physical sky so
02:02:06.679 this is what's been used to render all
02:02:08.800 of our examples so far uh
02:02:13.440 so uh and and what is very important
02:02:15.960 here actually is the right amount of
02:02:18.520 light so the cloud the the the light
02:02:22.560 you have to provide enough light for the
02:02:24.480 cloud to make it like nice and fluffy
02:02:26.960 and bright for example so if you're
02:02:30.079 light is very Fain don't expect your
02:02:32.440 Cloud to be looking you know very
02:02:35.520 fantastic and then just to show you
02:02:39.960 um the output of this uh um procedurally
02:02:47.000 generated Cloud so this is now they are
02:02:49.599 all rendered using the the cloud Shader
02:02:53.280 and um and here I just simply animated
02:02:56.440 our physical Sky um
02:02:59.880 from you know Sun uh from the morning
02:03:03.480 till uh the evening and you can see how
02:03:06.440 the the sun direction is changes with
02:03:08.719 all the different uh throughout the all
02:03:11.520 different variations
02:03:22.560 and then just quickly want to return to
02:03:25.560 um the Pyro Shader
02:03:29.000 so so we have now
02:03:32.840 um the karma pyro Shader and here I just
02:03:36.000 stopped the rendering so it doesn't
02:03:37.760 always
02:03:39.079 restart so we have kma pyro Shader which
02:03:42.400 is the the Shader I've been showing you
02:03:44.599 this is the new new Shader that is good
02:03:46.920 for both CPU and xpu and this is made of
02:03:51.159 this is a a modular Shader much more
02:03:53.360 modular than it was before so if I dump
02:03:56.840 in while it still has some nodes outside
02:03:59.400 here uh you can clearly see the
02:04:01.599 modularity of made off of multiple
02:04:04.719 different nodes like sched emission and
02:04:07.840 fire emission and
02:04:11.400 Etc and uh what I mean by modular is for
02:04:16.000 example um um the Pyro Shader uh which
02:04:21.760 which uh the previous pyro Shader which
02:04:23.719 we did for
02:04:25.000 18.5 it's for example had options for a
02:04:28.520 secondary fire so that was when you
02:04:30.880 wanted to enable additional Fires for
02:04:35.000 uh um for the trails for the tip of the
02:04:38.520 trails that would fly out from an
02:04:40.159 explosion and when you you have this all
02:04:43.079 in one volume with the big explosion
02:04:45.400 body then you kind of had to have a
02:04:48.520 second a secondary control over the
02:04:51.760 mission for those little trails and and
02:04:54.760 this is very arbitrary like like like
02:04:58.760 why to have a secondary one and and in
02:05:01.119 the new pyro Shader we did not included
02:05:03.280 this option because what you can do now
02:05:06.280 is to put down uh um a Karma fire uh
02:05:11.719 emission node so so you can use this
02:05:15.920 node and you can read in your uh
02:05:18.840 whatever volume you want to read in and
02:05:21.840 you can just simply connect it to your
02:05:24.520 emission and this will serve as an
02:05:26.760 additional emission and this is the same
02:05:29.840 note that actually here inside this note
02:05:32.440 that drives uh
02:05:34.920 um uh the the emission inside um and we
02:05:40.199 have also separate nodes like uh um the
02:05:44.719 volume mass so whoever is familiar with
02:05:48.239 uh uh with the how the scattering I
02:05:51.679 Mission Works and how we Max mask things
02:05:54.719 now you can actually do your own masking
02:05:57.440 outside of the Pyro Shader and just
02:05:59.599 simply connect it you know into the
02:06:02.840 emission part here and it's it's it's a
02:06:05.760 lot more customizable Shader
02:06:09.559 now and lastly when it comes to shading
02:06:13.320 I want to mention that um now we
02:06:17.199 effectively want to differentiate
02:06:19.000 between what is a Shader and what is a
02:06:20.760 material
02:06:22.480 so uh this is our volume Shader but if
02:06:27.000 you put down a material library and you
02:06:31.679 have now the opt you don't have the
02:06:33.800 option to put down shaders directly but
02:06:36.400 what you have is you have uh
02:06:39.159 presets uh to put down so for example
02:06:42.159 you can put down uh a Karma Cloud
02:06:45.880 material here and this will give you a
02:06:49.920 pyro Shader
02:06:51.960 and with all the defaults that you would
02:06:54.119 need for rendering a clouds and this has
02:06:57.599 volume limit already set to to certain
02:07:00.639 value so you don't even have to set top
02:07:04.880 the volume limit on your render node it
02:07:07.800 will automatically give you the right uh
02:07:11.040 uh volume limit which is which is really
02:07:13.119 superb and then if you want to
02:07:17.280 um uh go and do the uh the occlusion uh
02:07:23.040 rendering then we have the karma pyro um
02:07:27.520 baked material which will generate just
02:07:30.000 in a second and uh you can see here this
02:07:34.280 is actually set up to be used for the
02:07:38.760 occlusion so it's as simple and then
02:07:41.920 just diving in there are other ones like
02:07:44.719 uh carop pyro fire
02:07:48.159 explosion uniform volume Etc so check
02:07:51.960 them all out see how the defaults work
02:07:57.280 um and and yeah pretty much that's all I
02:08:00.840 can say about the new
02:08:02.960 features and then I can show you some
02:08:07.559 other interesting bits like as I said
02:08:11.559 there was not much simulation example I
02:08:14.280 did for this release um there is this
02:08:17.559 simulation the only one I did which uh
02:08:20.559 it's like uh a pyro simulation where the
02:08:24.000 smoke kind of just blowing towards your
02:08:27.239 the the the camera and then this is how
02:08:29.840 it is with rendered and I actually
02:08:32.159 really like this like really like stormy
02:08:34.920 darkening cloud look so this is how I
02:08:37.040 kind of went on rendering this and then
02:08:40.960 I did some like this is also another
02:08:43.679 render of it with the this is actually a
02:08:46.480 4K 4K render of of one frame of this
02:08:50.079 cloud and here here I actually freeze
02:08:52.960 the frame and uh I applied the cloud
02:08:56.079 below noise on on the simulated volume
02:09:01.119 and therefore I could get a lot more uh
02:09:03.760 finer details like all of these finer
02:09:06.280 details are coming from the the cloud
02:09:09.239 below noise on top of that then lastly
02:09:12.520 for um hero Cloud generation I have to
02:09:16.520 show you the cloud you seen in the um
02:09:22.040 presentation background so this are just
02:09:25.400 different variation of
02:09:27.679 this and I did it one did one from the
02:09:31.400 other side as well just a bit of
02:09:33.719 different um coloration to give you know
02:09:37.440 somewh I look to it and I also did a
02:09:41.040 closeup of this um so you can see that
02:09:43.840 even when you zoomed in quite a lot you
02:09:46.400 can still get like some really great
02:09:49.920 amount of details
02:09:52.400 and and this Cloud kind of served as a a
02:09:56.760 test on how I can generate like a a
02:10:00.280 massive massive Cloud
02:10:03.840 so so going to um and here I will not
02:10:09.079 show the the full setup really uh just a
02:10:13.000 bit of it but the whole purpose of this
02:10:16.119 is
02:10:17.320 that what if I have um a um a bowy cloud
02:10:22.880 like this and I want to make a cloud
02:10:26.559 that is just you know taking this entire
02:10:28.840 setup and now I suddenly want to plug in
02:10:31.679 a mes that is like five or 10 times
02:10:34.840 larger and will I get the same amazing
02:10:38.320 looking cloud and kind of the answer was
02:10:42.639 um sort of not really so the reason is
02:10:48.199 because um when you starting to make
02:10:51.679 larger and larger areas relatively
02:10:54.199 speaking um the the clouds as as I
02:10:57.239 showed you in the references are have
02:11:00.079 structures clouds or any kind of below
02:11:03.760 details have so much like larger and and
02:11:07.000 going back to this fractal in nature
02:11:08.760 that larger details are smaller and
02:11:10.559 smaller details and and this is kind of
02:11:14.119 hard to preserve when you kind of try
02:11:17.000 thing to scale up these effects and and
02:11:20.480 I tried couple
02:11:21.840 of ways on how to approach it and
02:11:25.079 actually the best way which I settled
02:11:27.880 with was that uh I uh actually used uh
02:11:33.199 instead of using a line and primitive
02:11:35.440 spheres on it I just simply decided to
02:11:38.520 model the cloud so so it's nothing more
02:11:43.440 than um than it's maybe taking a bit of
02:11:47.480 time to remeshing but uh it is simply
02:11:51.559 just a a polygonal mesh which I just
02:11:54.840 quickly modelled such as
02:11:57.639 this and then I used a a cloud
02:12:02.199 displacement on it so this is again
02:12:04.920 nothing more than taking the the
02:12:08.280 original shape uh applying the cloud
02:12:11.960 noise on
02:12:14.679 it I actually do quite a bit of a trick
02:12:17.920 here because I I applied the cloud noise
02:12:20.719 so the attribute noise now is able to
02:12:23.360 use uh a Simplex Cloud noise which is
02:12:26.360 the the the new Cloud noise and what I
02:12:29.480 did here I actually measured the
02:12:31.360 gradient of this noise and then I after
02:12:34.400 some smoothing operation I just have a
02:12:36.599 custom attribute triangle where I
02:12:40.239 push out the the geometry along the
02:12:44.440 normal using the the noise but I'm also
02:12:48.320 pushing them to the side using the
02:12:50.040 calculated gradient effectively to
02:12:52.119 making it a bit more um well interesting
02:12:56.000 looking um and to give it a bit of uh
02:12:58.960 you know detail along the the side of
02:13:02.320 the exclusion as well and effectively I
02:13:06.199 just randomly generated some shapes
02:13:09.079 based on some reference image and I just
02:13:13.280 started to populate certain elements
02:13:15.520 wherever I knew I want to add couple of
02:13:18.880 additional below details and then
02:13:21.960 running again another displacement on it
02:13:25.599 um and again this is going back to the
02:13:27.559 fractal nature of the cloud so that um
02:13:31.880 that I got this one and then using
02:13:33.800 another Cloud displacement now I can get
02:13:36.440 the the even smaller sausage details
02:13:39.320 into it and I think the new Cloud noise
02:13:42.320 is actually very very good to get all of
02:13:45.440 these uh all of these
02:13:48.360 details and um
02:13:51.719 and yeah I just simply then end up with
02:13:53.800 this cloud ship and then I had a a setup
02:13:58.400 where I could just simply carve
02:14:01.559 out the
02:14:04.360 um the the cloud shape uh into different
02:14:10.040 uh sections so I did a 4x3 by3 box so
02:14:15.119 all of these just carve out their own
02:14:17.040 little sections and then I could use the
02:14:19.960 same B
02:14:21.679 Cloud noise using the same settings on
02:14:24.400 these little individual pieces and then
02:14:27.719 the result is I can show you here um is
02:14:32.280 looking just of a little piece is
02:14:34.199 looking like this so you can get some
02:14:37.800 really really
02:14:40.599 um great looking details just by uh
02:14:44.119 going through each pieces of course you
02:14:46.119 can optimize this maybe because you
02:14:47.920 might not want to you might want to run
02:14:49.960 it on a whole lotion shape like just on
02:14:52.199 the outside surface and maybe you just
02:14:54.119 feel in the cloud later here I just did
02:14:56.639 it very simply to take the entire volume
02:14:59.000 as it is but you can see you can really
02:15:01.079 get some you can really tune in some
02:15:03.840 some super nice details into it and
02:15:08.079 um one thing I I noticed when doing
02:15:11.239 Cloud rendering is that when you're that
02:15:15.920 you can sort of push the details out you
02:15:20.280 have to push out the details in the
02:15:21.840 viewport a lot more to be visible in the
02:15:24.559 render so what I mean by that is that U
02:15:29.280 uh you might think that in the viewport
02:15:31.679 it has too much detail here but the
02:15:34.840 rendering might not but in the rendering
02:15:38.679 it doesn't shows up as well
02:15:41.400 so so the point being is that don't be
02:15:44.400 shy to make your uh uh volume in the
02:15:47.840 vport over detailed and and adding a lot
02:15:51.360 more tiny details because that's helps a
02:15:53.440 lot more in the cloud render to to make
02:15:57.079 your Cloud details and the cloud will
02:15:59.440 look somewhat less detail anyway what
02:16:01.559 you will see in the view part so that's
02:16:03.280 that's the whole takeaway from that and
02:16:06.639 then effectively I just ended up uh
02:16:09.159 combining these all Cloud pieces
02:16:11.639 together and this is like a very high
02:16:13.440 resolution Cloud so even this piece
02:16:17.320 alone has 52 million boxels at least so
02:16:22.800 um so yeah and then lastly uh I want to
02:16:27.760 talk about the um the Skybox notes so so
02:16:33.120 this is uh so this is now moving away
02:16:37.799 from generating hero clouds and more
02:16:40.040 like generating um like continuous Sky
02:16:43.920 pieces with procedural noise to create
02:16:47.840 clouds and this is the type of
02:16:52.398 um clouds that or Cloud Scapes that you
02:16:56.000 can get for
02:16:57.638 example and uh you have several controls
02:17:01.160 here on setting the size setting the
02:17:03.679 amplitude uh I actually make this a bit
02:17:06.638 lower resolution for the example you can
02:17:10.120 make curve Sky similarly as before but a
02:17:14.318 bit you know a bit easier control you
02:17:19.080 can you can move the the center of the
02:17:24.799 um uh the Sky Dome of course you can
02:17:29.000 make it a lot more extend
02:17:31.398 so um you have all the kind of cool
02:17:34.280 controls about it you can also erode the
02:17:38.280 boundary so this is if you want to make
02:17:41.040 a sky piece that let's say you know when
02:17:44.760 you don't want your flat boundaries all
02:17:48.718 over um and there arep couple of other
02:17:51.359 controls here there is the bowy settings
02:17:54.240 and what is really nice is the wispy
02:17:56.558 settings so with the wispy controls you
02:17:59.120 can enable that certain parts of the of
02:18:03.040 your pattern turn into you know the the
02:18:06.359 kind of sort of whp detail as
02:18:09.080 well and just to show you some uh um
02:18:15.359 actual variations Oh but before that I
02:18:17.558 think it's worth to mention the the
02:18:19.760 coverage controls so these are the main
02:18:22.280 controls over so um with coverage you
02:18:25.840 can control how much Cloud do you want
02:18:28.879 we have precipitation and and sort of
02:18:32.280 envil controls so that it just fills up
02:18:35.359 the top of the cloud etc etc and yeah so
02:18:39.718 should show you so Sky coverage so this
02:18:42.920 is um
02:18:45.280 um again just a small Sky pattern
02:18:48.478 rendered with uh animate coverage
02:18:51.478 attributes so you can see here how the
02:18:53.959 clouds kind of just builds up or the sky
02:18:57.000 kind of just builds off from the clouds
02:18:59.439 and you can get some really nice you
02:19:01.519 know tiny details all across and this
02:19:05.200 video just shows different variation so
02:19:07.478 starting with a more bowy look you can
02:19:10.280 create all kind of
02:19:13.760 um Cloud patterns with this
02:19:19.080 node and then
02:19:23.599 and going back uh there is one other
02:19:27.120 thing important to mention are the sky
02:19:30.280 fields so the sky fields are
02:19:34.000 2D volume similar to the height Fields
02:19:37.318 so in this example I created a height
02:19:40.398 field I created a mountain on it and I
02:19:43.519 just use a sky field to to add to this
02:19:46.760 heightfield system you don't have to you
02:19:49.040 can just start off straight with this
02:19:51.760 but because I added it I also moved up
02:19:54.520 the skyfield up to above the the
02:19:58.120 mountains and you have certain you know
02:20:01.680 different layers to automatically
02:20:04.720 generate and there are two ways to use
02:20:07.680 sky fields one is on their own so what
02:20:11.319 you can do is you can use uh um skyfield
02:20:16.760 pattern node that is and I disable
02:20:21.280 the um height field for better
02:20:24.240 visibility um with the skyfield pattern
02:20:27.080 you can create all kind of default
02:20:29.280 pattern the the default is like the
02:20:31.920 kumulus the bowy details but we have
02:20:35.000 like some pre-made fractus focus and
02:20:37.720 other different pattern times that that
02:20:40.240 you can kind of use and um you can use
02:20:45.120 this to just even just render it for
02:20:48.280 example you can put it to Karma and and
02:20:50.800 just render it when you don't want to
02:20:53.560 generate a full 3d Cloud because these
02:20:55.760 are like up high in the sky and when
02:20:58.880 where like you know a simple 2D uh
02:21:01.479 volume works it's uh it's perfect for
02:21:04.479 that and because of that uh you can also
02:21:08.160 use a sky field from map node where you
02:21:12.359 can just uh you know apply a monkey or
02:21:16.240 any other uh you know Sky image you had
02:21:20.439 and and then and then you can create
02:21:22.439 your own Sky field pattern ready to
02:21:25.000 render but the other option is to drive
02:21:29.399 the the uh Sky Box uh using um the sky
02:21:35.120 field
02:21:36.520 so so here I just simply appli the the
02:21:39.920 bow noise and then now because the
02:21:43.439 default Sky controls the the coverage I
02:21:46.280 can just set it to use Sky layer and
02:21:48.880 then you will see that this will uh uh
02:21:52.200 adjust according to my uh
02:21:57.200 uh generated noise so I can even you
02:22:00.960 know scale them up now the the thing
02:22:04.399 with this one is the tricky part is that
02:22:06.960 because you are sampling into a
02:22:09.399 2d volume you will not get much um
02:22:13.520 vertical information out so you will end
02:22:15.640 up with this rather well ugly looking um
02:22:21.840 sides and what you can do here is that
02:22:25.720 uh we have
02:22:27.160 control
02:22:29.080 over the
02:22:31.479 vertical
02:22:33.040 um like profile using the sample with
02:22:36.840 noise so here you will actually apply
02:22:42.319 a a noise to your sampling positions
02:22:45.960 effectively you are able to control the
02:22:48.800 the sides much better but as you see the
02:22:51.319 problem is the caveat with this is that
02:22:53.840 you have to be careful otherwise you can
02:22:56.240 destroy the actual underlying pattern
02:22:59.479 that you created so this is already with
02:23:01.600 this value you already kind of getting a
02:23:04.560 much nicer shape uh on the sides while
02:23:08.240 still relatively maintaining the
02:23:12.520 uh the the pattern that you have
02:23:17.720 created and just to show you couple of
02:23:21.800 uh other well this is a render actually
02:23:25.359 so this is like from above uh a Skyscape
02:23:28.880 so you can actually you you know
02:23:30.920 generate like really uh goodlooking you
02:23:34.840 know skyscapes if you need something
02:23:37.279 very quickly and then uh another um less
02:23:41.880 quicker method is if you want to compose
02:23:44.080 a sky using multiple uh sky fields and
02:23:47.560 this is what I did here this is like a
02:23:50.080 around 10 15 different uh Sky boxes just
02:23:54.359 simply combined together and render to
02:23:57.000 give a much more customized uh um
02:24:04.680 Cloudscape and pretty much that's it for
02:24:08.359 my presentation so I hope you you will
02:24:12.160 enjoy all of the features and uh I
02:24:15.640 really hope that uh um that you will
02:24:19.399 have you know lots of fun with it and
02:24:21.680 I'm very much looking forward to uh to
02:24:25.240 see all the clouds you guys going to
02:24:29.340 [Music]
02:24:33.240 generate uh so yeah hey everyone I'm
02:24:35.200 Cameron I'm a senior software developer
02:24:36.800 at side effects and work on a variety
02:24:38.680 areas if you do need like crowds brige
02:24:40.439 bodies destruction and so on and so yeah
02:24:42.840 today I'm going to be diving into the
02:24:43.960 new soft based crowd tool set in Houdini
02:24:46.080 20 so for quite a while now in Houdini
02:24:48.399 we've had a pretty extensive tool set at
02:24:50.000 the dop level for simulation based
02:24:51.760 methods based around the crowd solver
02:24:53.800 and so when we were starting to look at
02:24:55.319 how to bring this up to the sof level
02:24:56.800 and make some more crowd tools
02:24:57.960 accessible in softs uh rather than
02:25:00.279 actually just wrapping up the crowd
02:25:01.439 solver in a soft level HDA like what
02:25:03.240 we've done recently for solvers like
02:25:04.800 bullet uh we instead decided to take a
02:25:06.720 different approach that's not simulation
02:25:08.319 based at all so not wrapping the crowds
02:25:10.040 solver or any other underlying do
02:25:12.160 Network to try to address some
02:25:13.760 challenges that are hard to do in
02:25:14.960 simulation based approaches so instead
02:25:17.080 based around this idea of manipulating
02:25:18.760 motion paths or curves that control the
02:25:20.560 agent motion and animation over time and
02:25:22.840 so because this isn't just wrapping the
02:25:24.240 crowd solver it's its own different uh
02:25:26.279 method and different sort of workflow
02:25:28.399 it's got its own advantages and
02:25:29.680 trade-offs and sort of different
02:25:30.920 scenarios that it's suitable for so the
02:25:32.560 idea is that it's an alternative set of
02:25:34.040 tools that you can use depending on
02:25:35.640 whatever is more suitable for a
02:25:36.840 particular shot um so do to do a super
02:25:39.399 quick review of the crowd solver just so
02:25:40.720 we can talk about how it Compares
02:25:42.040 against non-simulation based approaches
02:25:44.200 um the basic idea with the crowd solver
02:25:45.680 is a state machine where agents can be
02:25:47.240 in one of many states that You' Define
02:25:48.800 maybe like Idol or fleeing and each
02:25:50.880 state can Define things like uh what
02:25:52.680 animation Clips the agent should be
02:25:54.120 following and also Its Behavior like
02:25:55.520 maybe it should be following a path or
02:25:57.359 turning its head to look at obstacles or
02:25:59.720 other things in the scene um and a lot
02:26:01.600 of these forces are also done by
02:26:03.200 applying like particle style forces for
02:26:05.279 things like flocking curve following uh
02:26:07.160 seeking out goal positions and so on and
02:26:09.319 so this is done by stepping forward one
02:26:11.160 time step at a time you evaluate
02:26:12.600 triggers which are things that can cause
02:26:14.000 you to switch from one state to another
02:26:15.800 and then run another round of updating
02:26:17.479 the animation and behaviors and forces
02:26:19.439 that are being applied to the agents and
02:26:20.960 so we go forward One Step time step at a
02:26:22.640 time and evolve the crowd's behavior
02:26:24.200 over time uh so this can be a really
02:26:26.120 powerful tool set you can build some
02:26:27.479 very Dynamic and complicated behaviors
02:26:29.720 you have interaction with the rest of
02:26:31.040 dots Rd dolls and RBD and so on and it
02:26:33.399 can also scale well to large crowds from
02:26:35.000 a workflow point of view because you're
02:26:36.359 defining these sort of higher level
02:26:37.640 behaviors and so adding a few more
02:26:39.279 instances of some agent doesn't really
02:26:40.800 change your uh State machine setup very
02:26:42.800 much uh but a few challenges to kind of
02:26:44.680 point out with this are that you kind of
02:26:46.040 have an indirect control over the agent
02:26:47.760 motion so there's a lot of different
02:26:49.319 things contributing to what each agent
02:26:50.680 is doing like whether it's trying to
02:26:51.920 follow a path or avoid other agents so
02:26:54.040 if you get feedback that you know your
02:26:55.399 shot looks good but that one guy over
02:26:56.960 there needs to do something a little bit
02:26:58.319 differently it can be kind of hard to
02:26:59.760 figure out how to tweak those parameters
02:27:01.600 to get a very specific result and then
02:27:03.840 related to that when you're trying to do
02:27:05.439 those changes you're then going back and
02:27:06.840 res simulating to see if that actually
02:27:08.399 worked out and if you're not careful
02:27:10.160 about locking down the motion of the
02:27:11.439 other agents small changes to One agent
02:27:13.399 can kind of cascade because other agents
02:27:15.080 are reacting to it and so on um and then
02:27:17.960 depending on the type of shot you're
02:27:19.200 actually trying to do if you just want
02:27:20.319 have some you know background agents
02:27:21.640 cycling through some clips the stay
02:27:23.279 machine can be a more complicated
02:27:24.840 approach than what you actually need so
02:27:26.680 with the soft base tool set we wanted to
02:27:28.640 along with the initial goals of just
02:27:29.800 making crowd tools more accessible at
02:27:31.359 the soft level and artist friendly we
02:27:32.640 wanted to try to hit some of these uh
02:27:34.120 challenges that you have with simulation
02:27:35.680 based methods so in particular having
02:27:37.960 really precise fine grain control over
02:27:39.760 individual agents um with not having a
02:27:42.279 simulation involved having really fast
02:27:43.760 feedback kind of instant scrubbing be
02:27:45.200 able to see what changes you're affect
02:27:47.120 or what your changes are actually doing
02:27:48.920 to affect the crowd's motion and we
02:27:50.760 wanted to do this in a general enough
02:27:52.240 way to let a wide variety of tools be
02:27:54.200 implemented so not just simpler cases
02:27:56.000 like maybe cycling a curve a clip along
02:27:57.840 a curve but things like avoidance that
02:27:59.720 can do really arbitrary things to what
02:28:01.439 each agent's path is and so the idea
02:28:03.600 with the motion paths is to take some
02:28:05.040 similar ideas to what we have in K
02:28:06.359 effects with motion Clips where in that
02:28:07.720 case you have a SK copy of the skeleton
02:28:09.960 laid out over time and so operations
02:28:12.080 that need to accumulate data over time
02:28:13.720 for example like blending Clips or
02:28:15.600 smoothing out motion over time are
02:28:17.399 really easy to implement because you
02:28:18.520 have all the time samples in your
02:28:19.680 geometry you're not trying to recook
02:28:21.279 some big chain of soaps on each frame
02:28:23.439 and try to accumulate some sort of data
02:28:25.120 over time and so we wanted to take
02:28:26.920 something similar but tweak it to be
02:28:28.720 more suitable for crowds so obviously
02:28:30.479 storing the full skeleton of every agent
02:28:32.439 for thousands of Agents over hundreds of
02:28:34.399 time samples would be pretty expensive
02:28:36.560 but also just awkward to work with and
02:28:38.279 manipulate so one thing that agents have
02:28:40.760 is this idea of a clip Library where you
02:28:42.279 can be sampling and blending between
02:28:43.720 Clips uh and so we can use that to
02:28:45.760 instead just store some information
02:28:47.120 about how to evaluate the agent's pose
02:28:48.880 instead of storing the actual pose
02:28:50.720 and so then on top of that we just need
02:28:51.920 to know well where is the agent supposed
02:28:53.279 to be overall in the scene and so if you
02:28:55.680 represent this by creating a point at
02:28:57.160 each time sample for the agent with some
02:28:58.840 attributes to you know describe the
02:29:00.760 transform at that point and then connect
02:29:02.760 together the Rel points for one agent
02:29:04.160 into a polyline curve you have a nice uh
02:29:06.800 curve based representation that's really
02:29:08.439 convenient to deal with in stops so more
02:29:10.720 concretely just going through some of
02:29:12.240 the common attributes that we deal with
02:29:14.080 attributes like P and transform on the
02:29:15.560 points describe the agent's overall
02:29:17.200 transform at that particular sample in
02:29:18.880 time we keep a Time attribute to track
02:29:20.800 what scene time that actually
02:29:21.720 corresponds to and then various
02:29:23.399 attributes to describe how to actually
02:29:25.080 compute the agent's pose at that time so
02:29:26.640 in the simple case you know which clip
02:29:28.080 to playb back what time to sample it at
02:29:30.120 if there's multiple clips what the blend
02:29:31.800 weights are and then there's some more
02:29:32.920 advanced options if you have more
02:29:34.680 complicated cases like layered animation
02:29:36.479 Clips getting applied to parts of the
02:29:37.880 skeleton and so before we jump into
02:29:39.920 hudini and see how this all looks the
02:29:41.640 kind of quick overview of the workflow
02:29:42.920 is that there's two streams being passed
02:29:44.760 along through the chain of softs one is
02:29:46.240 containing our motion path so these
02:29:47.600 curves describing the agent's motion and
02:29:49.720 then we also carry along the agents so
02:29:51.319 that we can preview the motion and do
02:29:53.200 things that sample from the agent clip
02:29:54.800 and other data that the agents have and
02:29:56.880 then each swap is just modifying
02:29:58.720 whatever input motion paths it got
02:30:00.240 there's no complicated you know setting
02:30:01.840 up Behavior rules that get evaluated
02:30:03.680 further Downstream or something it's
02:30:05.319 just a normal modeling style workflow in
02:30:07.359 Sops and then again because all of these
02:30:09.520 motion paths contain all of the time
02:30:10.880 samples none of these nodes are time
02:30:12.279 dependent and recooking on each frame
02:30:14.319 but at the very end of the chain you can
02:30:15.680 evaluate them to introduce the time
02:30:17.200 dependency and produce an animated uh
02:30:19.279 sequence of Agents
02:30:23.439 so let's look at what this actually
02:30:24.880 looks like so for a quick overview of
02:30:26.160 the workflow um the initial part of the
02:30:28.000 crowd setup hasn't changed at all so you
02:30:29.399 still populate your crowd build your
02:30:31.200 agent definitions in the normal way but
02:30:33.240 instead of jumping over into the crowd
02:30:34.760 solver we'll instead start using the
02:30:36.279 motion path stops and so the entry point
02:30:38.120 is usually the crowd motion path swap
02:30:40.000 which builds you some initial paths to
02:30:41.600 start from and so the default mode on
02:30:43.840 this is to just build it from the
02:30:45.040 agent's clip based on sampling The
02:30:46.680 Locomotion data that the clip has
02:30:48.319 cycling that over time and building a
02:30:50.439 path out of those transforms so it
02:30:51.800 builds it over whatever frame range that
02:30:53.960 you've specified that you want to work
02:30:56.720 on and so the default Behavior with this
02:30:59.160 is to just use whatever clip you had
02:31:01.000 already assigned Upstream when you were
02:31:02.240 populating the crowd but you also have
02:31:03.960 the ability to kind of take over that
02:31:05.240 and do all of the clip assignment
02:31:06.479 related options here so you can do
02:31:08.359 things like offsetting or randomizing
02:31:10.120 the initial start time of the clip to
02:31:11.520 introduce some variation uh varying what
02:31:13.680 the clip playback speed is going to be
02:31:15.560 which will change the length of the
02:31:17.000 motion path and then you can also take
02:31:18.840 over and set up you know Rand
02:31:20.120 distributions of clips and so on and
02:31:22.560 then all these settings can be varied
02:31:24.200 you know per group of Agents if you have
02:31:25.640 a more complicated setup with a lot of
02:31:27.160 different agent types and then looking
02:31:29.399 at the outputs just to kind of reinforce
02:31:30.960 what I talked about on the last slide
02:31:32.720 first output is just containing the
02:31:33.960 motion path geometry so just these
02:31:35.479 polyline curves that are describing the
02:31:37.160 agent's motion over time and then the
02:31:39.200 other output is just carrying along the
02:31:40.720 agent Primitives but when I have the
02:31:43.000 display flag on the motion paths no
02:31:45.000 you'll actually notice that we can see
02:31:46.960 an animated preview of the crowd's
02:31:48.640 motion as we scrub along and so this is
02:31:50.240 actually just being drawn as guide
02:31:51.359 geometry so the idea is that all the
02:31:53.240 motion path nodes will do this so
02:31:54.600 wherever you are in your long chain of
02:31:56.080 Sops you can always immediately see what
02:31:57.960 the crowd's motion looks like with
02:31:59.160 whatever the current version of those
02:32:00.520 motion paths are and so you don't have
02:32:02.000 to manage some display flag off to the
02:32:04.080 side somewhere and then after you've
02:32:05.920 done a bunch of operations to minate the
02:32:07.520 motion paths you can use crowd motion
02:32:08.960 path evaluate to produce just an
02:32:10.520 animated sequence of agent Primitives so
02:32:12.279 this is what you would use for rendering
02:32:13.720 purposes or to go for into any other
02:32:16.279 crowd tools that just expect an animated
02:32:18.399 sequence of agents and so this just
02:32:20.359 takes what frame to evaluate at it could
02:32:22.279 be a fractional frame for interpolation
02:32:24.439 finds the closest two points on the
02:32:25.680 motion path and uses that to set the
02:32:27.399 agents transform and skeletal pose and
02:32:29.760 so
02:32:30.760 on and yeah so at this point you could
02:32:33.279 uh you know start doing some more
02:32:34.680 additions to layer edits on top of the
02:32:36.479 crowd's motion so you could for example
02:32:38.080 use the agent terrain adaptation soap to
02:32:39.920 add some foot planting or ik or in this
02:32:42.200 case we'll just use the agent look at
02:32:43.479 soap to adjust the skeletons to look at
02:32:45.560 some particular Target
02:32:52.319 so getting into some nodes for actually
02:32:53.720 manipulating the motion paths uh the
02:32:55.439 first one we'll look at is motion path
02:32:56.760 follow so this is kind of a path
02:32:58.200 following style of tool and so there's a
02:33:00.240 third input on this node where you can
02:33:01.479 wire in any curve geometry that you've
02:33:03.080 set up in Sops and this will be used as
02:33:04.600 a guiding curve so in this case we'll
02:33:06.640 just use the curve soop to draw a smooth
02:33:08.120 nerves curve and then this will deform
02:33:10.160 all of the motion paths to follow along
02:33:11.720 with the orientation changes that are
02:33:13.279 being described by that curve so as we
02:33:15.160 draw the curve we'll start seeing the
02:33:16.760 motion paths deforming along with that
02:33:20.840 and then as we move the display flag
02:33:22.160 back onto motion path follow right away
02:33:23.680 we can just scrub through and see how
02:33:25.319 our motion's
02:33:27.319 looking and then in more complicated
02:33:29.359 cases if you have multiple guide curves
02:33:31.200 that are being passed in then the
02:33:33.520 default behavior is just that motion
02:33:34.840 paths will deform according to whatever
02:33:36.359 was closest in proximity to the initial
02:33:38.600 point on the motion path so in most
02:33:40.319 cases this can give you a pretty
02:33:41.760 sensible result just by
02:33:43.840 default and then if you want a bit more
02:33:46.000 fine grain control over uh what paths
02:33:48.240 are actually being affected and which
02:33:49.359 paths are following you can of course
02:33:51.160 just limit this to only deform certain
02:33:52.840 motion PS in the crowd if you just want
02:33:54.200 to affect certain agents and also pick
02:33:56.200 out certain curves from whatever your
02:33:57.840 input is if there's a big jumble of
02:33:59.240 curves that you want to select from and
02:34:01.080 then if you don't like that default
02:34:02.240 behavior of picking by proximity you can
02:34:04.439 also do various attribute based controls
02:34:06.520 to match up agents to specific motion
02:34:08.240 paths so a really quick example of that
02:34:09.880 would be if you set up a cluster
02:34:11.120 attribute on the agents and we'll just
02:34:13.000 set them to have be partitioned into
02:34:14.600 three different clusters and then we can
02:34:16.479 turn on Match by attribute and match
02:34:17.880 that against the Primitive number of the
02:34:19.200 curves and then that's just a really
02:34:20.880 quick way to get each group of Agents
02:34:22.520 individually following along with the
02:34:23.840 different curve and one other thing to
02:34:25.680 mention too is that the other option
02:34:27.600 with this if you wanted to have very
02:34:29.080 different you know curves that each
02:34:30.600 group of Agents is following is to just
02:34:32.000 sequence a few motion path follow nodes
02:34:33.720 one after the other because you're just
02:34:35.000 chaining edits that are modifying the
02:34:36.840 geometry and then for a more advanced
02:34:38.880 case just to show some other options uh
02:34:40.560 you can also pass in a closed curve and
02:34:42.080 this will let agents kind of loop around
02:34:43.840 and their motion P will keep deforming
02:34:45.359 to follow around that Loop and then this
02:34:47.520 makes it easier to see the effect of a
02:34:48.880 couple more advanced option so you have
02:34:50.720 distance variance control so basically
02:34:52.600 how far away the agents are allowed to
02:34:54.080 stray from their initial distance from
02:34:55.520 the motion path or if they just kind of
02:34:57.279 inherit the orientation changes that
02:34:58.880 they're picking up from the curve and
02:35:00.720 then for agents that are farther away
02:35:01.960 you also have some smoothing and
02:35:03.319 sampling controls so if motion paths are
02:35:05.399 really far away their closest point on
02:35:06.880 the guide curve can jump pre suddenly
02:35:08.800 going from one sample to the next so
02:35:10.240 this lets you sample a wider range of
02:35:11.920 points on the guide curve to get a
02:35:13.279 smoother
02:35:15.399 result and then for more fine grain
02:35:17.560 control over really specific paths we
02:35:19.160 have a mo path edit tool and so the idea
02:35:21.160 with this is that it's an interactive
02:35:22.680 tool so you're just working in the
02:35:23.680 viewer State and when you click anywhere
02:35:25.760 on the curve you can set up a Target
02:35:27.200 position for that specific point and so
02:35:29.160 as you drag that away the Sol the node
02:35:31.120 will try to solve for how to deform the
02:35:32.920 curve to try to hit all of those Target
02:35:34.399 positions but also still preserve the
02:35:36.439 length but also the original local shape
02:35:38.880 and characteristics of the motion path
02:35:40.359 so you'll see like the original path
02:35:41.720 isn't perfectly straight because it
02:35:43.279 comes from just like a motion capture
02:35:44.800 clip and so the deform Curve will
02:35:46.479 actually still preserve those
02:35:47.560 characteristics so you're not like
02:35:48.680 smoothing out or distorting any of the
02:35:50.760 original details of your initial motion
02:35:54.080 and then each of the target points can
02:35:55.680 have their own individual weights so
02:35:57.120 this just controls How likely the
02:35:58.840 deformed result is actually going to hit
02:36:00.359 that Target point so by default uh the
02:36:02.479 first point on the curve gets pinned
02:36:03.800 with a really high weight so that way as
02:36:05.600 you drag away other points you're not
02:36:06.840 pulling agents away from the start
02:36:08.319 position because usually you
02:36:09.640 intentionally place them at a certain
02:36:11.160 spot when you're populating the crowd uh
02:36:13.319 but each of these weights can be
02:36:14.359 controlled individually for each set of
02:36:15.960 points so this gives you a pretty nice
02:36:17.600 way to be able to have a really fine
02:36:19.560 control over setting up you know very
02:36:21.200 specific paths for individual agents
02:36:22.960 really quickly um and you can also use
02:36:25.000 it for kind of a fining style workflow
02:36:26.840 and doing some you know last minute
02:36:28.439 tweaks according to feedback so when we
02:36:30.760 jump over to this other part of the
02:36:31.840 crowd there's a bunch of agents that are
02:36:33.399 almost walking through each other and
02:36:34.560 have some really uh near misses so while
02:36:36.960 there are automated tools for fixing
02:36:38.479 this this can also be a really useful
02:36:39.760 tool if you just want to have you know
02:36:41.279 very fine grain control and make
02:36:42.760 specific changes and know exactly what
02:36:44.520 result you're going to get
02:36:51.240 and then finally to show a couple more
02:36:52.600 advanced options uh you can multi select
02:36:55.000 all these pinpoints so you can pull
02:36:56.600 around multiple points from different
02:36:57.920 motion paths on the agents um you can
02:37:00.200 also delete any of the pinpoints and
02:37:01.720 also undo edits for specific agents so
02:37:03.640 you don't have to blow away all of your
02:37:04.920 manual changes if you kind of screwed
02:37:06.560 things up for one particular
02:37:09.160 path and then in the other direction we
02:37:11.319 also have an automated avoidance tool so
02:37:13.160 first actually just turning off the
02:37:14.680 actual avoidance uh one of the features
02:37:16.200 that this has is it can output some
02:37:17.640 information about what collisions were
02:37:18.960 left over at at the end uh based on the
02:37:20.800 Collision radius that you've specified
02:37:22.200 and it can either just visualize those
02:37:23.640 points or dump them out into a point
02:37:25.200 group that you can use Downstream but
02:37:27.160 this just provides a really quick way to
02:37:28.840 get some instant feedback on whether
02:37:30.680 there are any collisions or potential
02:37:32.040 near misses that you might want to look
02:37:33.680 into further and try to fix
02:37:35.439 up so then turning back on the avoidance
02:37:38.200 uh this just kind of an anticipation
02:37:39.600 based method uh to try to deform motion
02:37:41.760 paths ahead of time to avoid potential
02:37:43.640 future collisions and so if you want to
02:37:45.560 have a bit more control you can limit
02:37:46.960 this to specific agents so that only
02:37:48.640 certain agents can move go out of the
02:37:49.880 way to avoid other agents and there's
02:37:51.680 also some more Advanced Collision
02:37:53.000 filtering options as well and then on
02:37:55.560 top of that you have options to apply
02:37:56.760 multiple rounds of avoidance if the
02:37:58.359 first round happen to introduce new
02:37:59.760 collisions while moving agents out of
02:38:01.479 the way and then you have usual controls
02:38:03.600 for things like the anticipation time
02:38:05.600 how to find nearby agents and so on and
02:38:07.600 then you also have a lot of controls for
02:38:09.439 how quickly agents can turn out of the
02:38:10.960 way to try to avoid those collisions and
02:38:13.000 also some more advanced options too like
02:38:14.520 being able to entirely rotate the
02:38:16.359 initial point of the motion path by a
02:38:17.800 large amount which can help if there's a
02:38:19.600 bunch of collisions right at the start
02:38:20.880 and agents normally wouldn't be able to
02:38:22.439 move out of the way in time uh you can
02:38:25.080 also control how much agents are going
02:38:26.600 are likely going to try to steer
02:38:28.680 themselves back towards the original
02:38:30.000 endpoint if they can uh rather than just
02:38:32.160 going off in whatever Direction the
02:38:33.600 avoidance sent them off
02:38:35.160 in uh finally you can also uh do
02:38:37.920 obstacle avoidance with the same node
02:38:39.479 just by wiring in some geometry into the
02:38:41.319 third
02:38:44.160 input and so this behaves most mostly in
02:38:46.600 the same way just you have some a
02:38:48.240 different set of controls for how far an
02:38:50.120 advanced agents can actually see the
02:38:51.720 obstacle what their field of view is and
02:38:53.319 so
02:38:56.640 on and then jumping over to the clip
02:38:59.080 blending side of things um in the crowds
02:39:01.000 solver workflow one of the things that
02:39:02.319 we had was this concept of triggers that
02:39:03.960 could be evaluated on each frame based
02:39:05.960 on you know maybe whether the agent was
02:39:07.279 in a bounding region or near other
02:39:08.800 agents to control when clip or when
02:39:10.960 State transitions should take place and
02:39:12.800 so we wanted to take some similar ideas
02:39:14.680 in the motion path workflow to be able
02:39:16.120 to have ways to kind of procedurally
02:39:18.080 specify when clip and things like that
02:39:20.160 should take place and so we wanted to
02:39:21.600 kind of take those ideas but refrain
02:39:23.120 them to work in a sensible way on motion
02:39:24.960 paths and so with this uh because our
02:39:27.000 motion path describes where the agent is
02:39:29.120 over the whole time range we basically
02:39:30.760 just need to evaluate this trigger
02:39:32.279 condition on All Points which we can
02:39:33.600 usually do in parallel depending on the
02:39:34.920 trigger type and then this just gives us
02:39:36.760 like a true or false result for every
02:39:38.520 Point like maybe whether that point was
02:39:40.200 inside the boundy box or not and so the
02:39:42.040 really natural way to represent this in
02:39:43.479 Sops is just a point group so in the
02:39:45.560 motion path workflow triggers are just
02:39:47.279 any point group that you've created
02:39:50.680 and so to uh kind of wrap this up for
02:39:53.399 common uh crowd style operations we have
02:39:55.680 a motion path trigger Swap and so this
02:39:58.399 really just ends up creating a point
02:39:59.720 group for you underneath uh but this
02:40:01.439 just provides some really convenient
02:40:02.800 ways to set up sort of common operations
02:40:04.520 and things you would want to use for
02:40:05.680 crowds to uh uh trigger animation
02:40:08.040 changes so this will just create a point
02:40:09.840 group according to whatever trigger name
02:40:11.359 you specified so you can change that to
02:40:12.760 something more meaningful because you'll
02:40:14.040 probably be using it Downstream for some
02:40:15.680 operations and then you can of course
02:40:17.640 limit the effect of this to specific
02:40:19.319 agents in the crowd too of course if you
02:40:20.720 want to um you can also combine
02:40:23.040 different triggers together on this node
02:40:24.520 in the combined triggers folder if
02:40:25.960 there's uh you know you want to do some
02:40:27.720 Union or intersection between different
02:40:29.479 conditions uh so the first trigger type
02:40:31.319 is just triggering based on the time
02:40:32.640 attribute along the motion path so this
02:40:34.080 just lets you quickly isolate you know
02:40:35.840 whether agents are past some particular
02:40:37.600 frame in the scene along their motion
02:40:39.680 path you can also set up various
02:40:41.240 bounding region triggers so you can
02:40:42.840 manually set up a bounding region using
02:40:44.600 the interactive Handles in the Vier
02:40:45.960 State uh or set it up to be a bounding
02:40:48.319 Sphere for example and do various
02:40:49.840 comparison types like whether the motion
02:40:51.359 path is inside or outside or just
02:40:53.040 starting to enter or just leaving that
02:40:54.960 bounding
02:40:56.160 region and then in more complicated
02:40:58.240 cases you can provide your own Collision
02:40:59.760 geometry through that third input uh so
02:41:01.720 in this case we're just going to set up
02:41:03.359 a simple Taurus just to position it
02:41:04.760 somewhere in the crowd and this can also
02:41:06.560 actually be a time dependent animated or
02:41:08.520 deforming sequence of geometry if you
02:41:10.399 turn on the time dependent toggle and so
02:41:12.479 that'll just reevaluate that for every
02:41:14.359 point or every time sample along the
02:41:16.240 motion path so it is a bit more
02:41:18.000 expensive but gives you the flexib when
02:41:19.680 you need that type of
02:41:22.520 test and then beyond the bounding region
02:41:25.040 you can also do some similar trigger
02:41:26.680 types so there's an object distance
02:41:28.399 which just tests you know how close the
02:41:30.279 agent got to a particular surface or
02:41:32.240 closest point on the geometry uh within
02:41:34.279 some trigger threshold uh and then uh
02:41:36.880 you can also do ray pass so basically
02:41:38.439 sending out Rays from each point along
02:41:39.760 the motion path to see if uh some
02:41:41.800 particular Collision object was
02:41:48.240 visible and so th those Rays can be sent
02:41:50.640 out either in the agent's current
02:41:52.200 orientation like what direction it's
02:41:53.560 facing uh velocity along the path or any
02:41:56.040 sort of custom attribute that you've
02:41:58.359 specified and then kind of similar to
02:42:00.439 the avoidance node you can also do
02:42:01.479 triggers based on uh proximity of nearby
02:42:04.120 agents so basically testing whether
02:42:05.359 there's any other agents nearby at the
02:42:07.160 same point in time along the motion path
02:42:09.279 and you can do that within whatever
02:42:10.479 distance threshold or time window or
02:42:12.720 also within a field of view threshold to
02:42:14.240 only see agents in front of a particular
02:42:15.920 agent for
02:42:17.560 example uh and then finally there's a
02:42:19.399 bunch of common trigger types based on
02:42:21.120 whatever clip the agent is currently
02:42:22.399 playing uh so you can trigger based on
02:42:25.279 uh some name or pattern of clips that
02:42:27.279 and whether the agent is currently
02:42:28.319 playing one of those options um you can
02:42:30.319 also trigger based on the clip time so
02:42:32.439 basically how what percentage of the way
02:42:34.080 through the agent's current cycle it is
02:42:35.680 or how many seconds through its cycle it
02:42:37.200 is and then also how many uh Loops it's
02:42:39.359 actually played back of whatever its
02:42:40.600 current animation clip is so far so that
02:42:42.840 can just be a useful trigger to be able
02:42:44.240 to you know switch into new clips after
02:42:45.760 a couple Cycles or something like
02:42:47.800 that and so then when it comes to
02:42:49.720 actually uh using triggers to drive a
02:42:51.720 transition uh we have a motion path
02:42:54.040 transition stop and so this will blend
02:42:55.800 into a totally new clip uh based on a
02:42:58.240 trigger group and the idea is the first
02:42:59.640 point on the path where that is in the
02:43:01.319 trigger group is where it can start
02:43:02.560 doing that clip blending uh so you can
02:43:04.800 select just an arbitrary trigger group
02:43:06.479 as well if you want to have really fine
02:43:07.920 grein control over specific transition
02:43:09.720 points uh but more likely it'll just be
02:43:11.640 some trigger group that you've already
02:43:12.840 set up upstream and then um yeah so
02:43:16.200 we'll see it using the bounding trigger
02:43:17.760 here and then you can also comine
02:43:19.359 triggers right away on this node if you
02:43:21.479 don't want to set that up Upstream with
02:43:22.840 the trigger soft so you can do various
02:43:24.920 logic operations there and then also set
02:43:26.920 up uh random delays for uh just
02:43:29.120 offsetting when the transition will take
02:43:30.560 place to get a bit of
02:43:32.000 variation and so once the clip lending
02:43:33.960 is done uh it'll basically finish
02:43:35.960 blending over into the new clip and so
02:43:37.359 the rest of the motion path gets
02:43:38.720 replaced with the new clip's
02:43:41.160 Locomotion and then you have all the
02:43:42.840 usual options for setting up what clip
02:43:44.640 to actually transition into so being
02:43:46.040 able to set up a random distribution of
02:43:48.200 Clips to blend into and so on in this
02:43:50.040 case we had a clip called run so the
02:43:51.479 default Behavior just happened to
02:43:53.080 actually give us something useful and
02:43:54.640 then you can also vary things like the
02:43:56.040 clip speed as usual as well and then one
02:43:58.240 other thing to mention is that you'll
02:43:59.880 notice that even though all the agents
02:44:01.319 sort of enter the bounding region at the
02:44:02.880 same point in space they don't actually
02:44:04.640 start blending right away and that's
02:44:05.960 because the clip transition graph is
02:44:07.640 being used so this is basically delaying
02:44:09.080 the transition until agents get to a
02:44:11.120 certain point in their current clip that
02:44:12.520 they can nicely blend into the new clip
02:44:14.120 so when the foot's planted for example
02:44:16.399 um so that's why yeah you don't see the
02:44:18.160 agents all blending in immediately right
02:44:20.120 away so one change to point out with
02:44:22.000 this workflow to in H 20 is that the
02:44:24.120 transition graph used to be the separate
02:44:25.479 stream of geometry that you'd have to
02:44:26.960 like manually wire into the crowd solver
02:44:28.840 and manage separately uh but in H20 you
02:44:31.000 can actually embed this in the agent
02:44:32.319 definition so that way you'll just carry
02:44:34.040 along with the agents and you don't have
02:44:35.279 some extra stream of geometry
02:44:36.840 crisscrossing through your chain of ss
02:44:39.720 and then for instead just layering
02:44:41.200 animation on top of the skeleton there's
02:44:42.800 a motion path layer swap which has a
02:44:44.560 kind of similar interface and works in
02:44:46.319 mostly the same way so again you can
02:44:47.760 drive this based on um some trigger
02:44:49.640 group or manual selection of points and
02:44:51.640 then pick which clip you want to layer
02:44:53.479 the animation on with so in this case
02:44:55.840 we'll just layer on some cheering
02:44:57.000 animation but we only want to apply that
02:44:58.880 on say the upper body so we can pick
02:45:00.640 whatever group of joints we want to
02:45:02.040 apply that to so somewhere Upstream we
02:45:04.279 defined a joint group just containing
02:45:05.800 those specific joints that we
02:45:09.560 want and again the basic idea is pretty
02:45:11.800 similar as the motion path transition
02:45:13.600 STS you have a lot of the usual options
02:45:15.479 so you can do things like uh combining
02:45:17.960 together different Triggers on the app
02:45:19.600 adding a random delay to uh when the
02:45:21.439 trigger or animation is actually being
02:45:23.160 activated uh but then the one difference
02:45:24.920 of behavior here is because we're not
02:45:26.359 actually blending over into a totally
02:45:28.000 new clip we're just trying to layer on
02:45:29.439 motion so uh what happens instead is
02:45:31.600 that the layered motion stays active for
02:45:33.319 as long as you're in a consecutive
02:45:35.319 region where the trigger is active so
02:45:37.160 just while we're in the bounds for
02:45:38.279 example here and so it can blend in and
02:45:40.000 out over some number of frames but you
02:45:41.479 can also instead just fire off like a
02:45:43.120 single shot animation if you want to
02:45:44.760 make sure that you play a full
02:45:47.680 cycle and then finally you have a lot of
02:45:50.000 the usual Advanced options for the clip
02:45:51.640 blending so you can pick between you
02:45:52.880 know interpolation or additive blending
02:45:54.600 and so on and control the blend ratio
02:45:56.560 and also set up the usual options for
02:45:58.359 random distributions of Clips uh whether
02:46:00.560 to follow the base Clips timing or
02:46:02.439 separately Loop the layer dation clip
02:46:04.359 and so
02:46:08.399 on and then getting into a couple more
02:46:10.680 interesting things to talk about is
02:46:11.880 combining uh the simulation and
02:46:13.840 non-simulation based workflows together
02:46:16.279 so first we'll look at going from
02:46:17.720 simulation into motion path so here we
02:46:19.880 have just a super simple crowd
02:46:21.319 simulation with seeking agents towards a
02:46:23.160 couple different goal positions and some
02:46:25.040 Lookouts just so we have some ik
02:46:26.359 adjusting the skeletons and so on the
02:46:28.279 motion Path stop instead of using the
02:46:30.040 default mode of generating motion Clips
02:46:32.040 or motion paths based on an agent's clip
02:46:34.120 you can say generate from a simulation
02:46:35.800 and so what this will do is actually
02:46:37.520 cook its input over that time range and
02:46:39.200 build a motion path out of each agent's
02:46:41.160 position and orientation over time and
02:46:43.840 then on top of that it can also flag
02:46:45.240 those agents as having a custom pose so
02:46:47.399 in this case we had the heads turning
02:46:48.960 for some Lookouts that we had already
02:46:50.160 set up so this basically Flags it so
02:46:52.000 that you don't override all of those
02:46:53.600 manual edits that you made based on just
02:46:55.520 reevaluating the clips over and over and
02:46:57.760 so you can then just send these motion
02:46:59.479 paths into other nodes like motion path
02:47:01.120 edit and just do a couple final tweaks
02:47:03.279 after using the simulation based tools
02:47:05.240 for the initial motion so this is kind
02:47:06.800 of a nice way to uh take the best out of
02:47:09.160 both worlds if you want to combine the
02:47:10.800 two
02:47:12.520 workflows and then going in the other
02:47:14.359 direction if you wanted to take agents
02:47:16.160 you had animated from the motion path
02:47:17.520 tools and bring them into dots you would
02:47:19.479 just use motion path evaluat to get an
02:47:21.319 animated sequence of agents that you can
02:47:22.880 send into the crowd solver and then just
02:47:24.760 set up whatever other attributes you
02:47:26.439 need in order to uh set that up so in
02:47:28.479 this case assigning some initial state
02:47:30.000 to the agents and then we also use this
02:47:31.840 crowd animated attribute which basically
02:47:33.960 tells the crowd solver these agents
02:47:35.319 should just follow whatever animation
02:47:36.840 they had in Sops there's no need to take
02:47:38.720 over them and steer them and overwrite
02:47:40.399 their animation and so on and then in
02:47:42.479 DOS we just have a simple ragd doll Sim
02:47:44.279 where basically the agents will once
02:47:45.680 they get hit by an impact stop following
02:47:47.880 their initial animation instead turn
02:47:49.760 into a motoren rag doll thatly to follow
02:47:52.840 the initial guiding anation we set ups
02:47:55.080 and so if we run the simulation we'll
02:47:56.640 get something like this where once the
02:47:58.319 agents get hit they'll still try to move
02:47:59.680 a little bit for a second or so just to
02:48:01.640 inherit a bit more of their motion so
02:48:03.040 this lets you kind of combine both
02:48:04.359 workflows and use the motion path tools
02:48:06.359 to set up your initial motion and then
02:48:07.840 the crowd solver for things that it's
02:48:09.399 good at like rag
02:48:14.600 Dooms and then finally one topic to
02:48:17.080 discuss is just some things to keep in
02:48:18.240 mind if you're building custom tools to
02:48:19.680 work with motion paths so building
02:48:21.439 things like generating curves from
02:48:22.720 scratch or deformer style tools is
02:48:24.600 pretty straightforward because you're
02:48:25.520 just editing polyline curves there's
02:48:26.960 tons of tools and stops you can use uh
02:48:28.960 but a couple things to keep in mind is
02:48:30.240 that the length of the curve is really
02:48:31.479 important so if you do some operation
02:48:33.319 that stretches out the distance between
02:48:35.160 two points for example the agent going
02:48:36.960 to be traveling more distance within the
02:48:38.760 same amount of time in their animation
02:48:40.240 unless you also adjust the animation in
02:48:42.120 order to compensate for that so you do
02:48:44.279 need to be careful about things that
02:48:45.520 might introduce foot sliding uh and if
02:48:47.600 you're shifting points around you also
02:48:49.080 want to be updating the transform
02:48:50.359 attribute to reorient the agent to go
02:48:52.560 along with that change in direction that
02:48:53.920 you're describing so along with that you
02:48:55.640 do want to make sure you are introducing
02:48:57.439 some sudden orientation changes because
02:48:59.040 those will be really noticeable flips
02:49:00.479 when you try to play back the crowd
02:49:02.520 animation and then building custom
02:49:04.319 trigger types and so on to uh drive when
02:49:06.760 clip transitions are going to take place
02:49:08.200 is really straightforward because those
02:49:09.240 are just basic Point groups so you can
02:49:10.840 use any soft tools to set that up uh and
02:49:13.200 one other cool thing to point out is
02:49:14.439 that this is actually basically the same
02:49:15.880 format as a kin effect skeleton so we
02:49:17.560 have a bunch of points that have
02:49:19.359 position and transform attributes we've
02:49:21.200 connected them together with a polyline
02:49:23.120 curve so you can look at this as just
02:49:24.479 being a super long joint chain in KX
02:49:26.720 where the first point on the motion path
02:49:28.439 is like your root joint and so there's
02:49:30.239 actually a lot of kex tools you can use
02:49:31.680 right out of the box to do interesting
02:49:33.120 things uh the main thing to keep in mind
02:49:34.880 is that uh the motion paths don't have a
02:49:36.920 name attribute by default so kind of
02:49:38.760 joint name based tools you might need to
02:49:40.600 set up the name attribute for that uh
02:49:42.520 but to just give you a couple ideas for
02:49:44.840 inspiration uh as a simple example you
02:49:46.920 can just use the rig POS tool to do some
02:49:48.720 FK style posing on your motion path and
02:49:50.880 so if we wire that into motion path
02:49:52.520 evaluate we can see the Agent following
02:49:54.319 that deformed path and obviously in this
02:49:56.200 case you are introducing a really sudden
02:49:57.880 orientation change so you might not want
02:49:59.560 to actually do something like this in
02:50:01.200 this specific way in practice but uh it
02:50:03.239 kind of shows the basic principles and
02:50:05.439 then for something more interesting we
02:50:06.479 can actually run the motion path through
02:50:07.720 an ik solver so in this case uh I'm just
02:50:10.200 adding an ID attribute to match up my
02:50:11.920 target points that I'm going to use for
02:50:13.239 the ik to the base points of my original
02:50:15.439 motion pass and then just picking a
02:50:17.200 couple points along one motion path to
02:50:18.920 use as my ik targets and so then just
02:50:21.560 wiring this into the full body ik slap
02:50:23.479 from the kex tools and then as those ik
02:50:26.040 targets are moved around we're just
02:50:27.520 deforming that motion path as if it were
02:50:29.160 an ik
02:50:32.000 chain and so this actually gives you
02:50:34.439 kind of a very different result than the
02:50:35.800 motion path edit tool it's not really
02:50:37.239 trying to preserve the original shape of
02:50:38.960 the motion very much so it's definitely
02:50:40.840 something you could use for some more uh
02:50:42.319 creative type of approaches so hopefully
02:50:44.239 this gives you kind of a taste of uh
02:50:46.080 some of the cool things you might be
02:50:47.160 able to do by combining together some
02:50:48.640 some of the ks tools with uh motion path
02:50:50.640 tools so we'll see the final result
02:50:53.479 there and that's everything I wanted to
02:50:55.520 cover for this talk so thank you very
02:50:57.239 much for listening and I've got time for
02:51:03.920 questions I can't see anybody so I'll
02:51:06.319 let Chris or someone sort that out
02:51:09.720 questions yeah
02:51:22.840 thanks hey great presentation the tools
02:51:24.840 look really fleshed out for what feels
02:51:26.720 like version one of the so tools I was
02:51:28.680 wondering though is there when would you
02:51:31.160 recommend to still use dots over the new
02:51:34.000 soaps um I would say for cases that need
02:51:36.520 to be a bit more Dynamic like agents
02:51:38.760 reacting to each other and so on like
02:51:40.560 where you're trying to kind of evaluate
02:51:42.680 something on each time sample to decide
02:51:45.040 what agents are going to do next and if
02:51:46.279 you're trying to combine together a lot
02:51:47.600 of things like you know really
02:51:49.399 complicated path following seeking out
02:51:51.160 goal positions you know avoidance and so
02:51:52.880 on like a lot of things a lot of rules
02:51:54.880 interacting with each other um the stay
02:51:56.760 machine type of approach is probably a
02:51:58.120 lot better or if you want to send up a
02:51:59.880 much longer simulation where agents
02:52:01.600 might be hitting the same trigger
02:52:02.880 multiple times and so on uh it's a lot
02:52:04.960 easier to do that with sort of the the
02:52:06.880 crowds solver type approach whereas in
02:52:08.279 the soft workflow you'd be kind of
02:52:10.359 reapplying the same operations
02:52:12.399 Downstream a lot of times or going in a
02:52:14.040 for Loop or something that you know
02:52:15.720 starts to get a little bit more
02:52:16.760 complicated and then obviously things
02:52:18.200 like dolls or things like that are more
02:52:20.319 suitable for dos as well yeah thank you
02:52:27.640 yeah hi uh so is the plan to at some
02:52:31.200 point fully replace the um dop workflow
02:52:34.479 with the soft workflow or is it going to
02:52:36.040 be more of a hybrid thing in the future
02:52:38.359 um no plans to replace the dot worklow
02:52:40.399 because yeah I think there's use cases
02:52:41.840 for both so it's about you know making
02:52:43.800 sure that it's there's useful tools for
02:52:45.720 whatever type of scenario you're working
02:52:47.279 on so there's definitely lot of use
02:52:48.880 cases where these tools are all you need
02:52:51.000 in order to get a shot done which is
02:52:52.319 great but if you do need the type of
02:52:54.880 things like I was talking about in the
02:52:55.840 last answer for uh things that the crowd
02:52:57.800 solver is a lot better at doing um then
02:52:59.720 that's the idea there I mean we
02:53:00.800 definitely might consider wrapping up
02:53:02.160 the crowd solver itself a bit more at
02:53:03.640 the sof level for you know making rag
02:53:05.479 dolls a little easier to set up or
02:53:07.239 something without going into dots but I
02:53:09.120 think the simulation based approach
02:53:10.600 still has uses that and we'd want to
02:53:12.600 keep that around for sure great thank
02:53:14.319 you
02:53:27.560 yeah we have two question the first one
02:53:29.399 is how does it behave with the terrain
02:53:31.800 you know with the food detection and the
02:53:33.720 fot loing and the terrain and the second
02:53:36.319 one is y I'm Dreaming to have more tools
02:53:39.640 to um postprocess like if you've got
02:53:43.239 after adop simulation is character is
02:53:45.640 not working could be cool to export that
02:53:48.560 as an euro tweak a bit the bonds and
02:53:51.000 bring it back into the cloud package
02:53:54.200 without uh because for the moment I'm
02:53:56.439 getting Heros in the Renda which is
02:53:58.479 sometime affecting the colors so I'm
02:54:00.760 wondering if you have anything about
02:54:02.520 those kind of tools yeah um let me try
02:54:04.920 to so the first one was the train
02:54:06.479 adaptation so you typically do this as a
02:54:09.000 postprocess in in most scenarios so uh
02:54:11.600 you can do something like the agent
02:54:12.800 train adaptation top afterwards which
02:54:14.439 will you know adjust the height of the
02:54:16.000 agents maybe or uh do the Ike on their
02:54:17.920 legs um and so you do that as a
02:54:19.680 post-process after youve Define your
02:54:21.160 motion path so that'll fix up any foot
02:54:22.840 sliding and get the feet locked on the
02:54:24.479 train um so it'll be yeah the usual
02:54:26.560 postprocess would be to do that after
02:54:28.080 motion path evaluate um and then I if I
02:54:31.080 remembered everything you asked in the
02:54:32.239 second question um was it more about
02:54:34.560 using like kect style tools to kind of
02:54:36.279 take over agents as like Hero characters
02:54:38.319 and so
02:54:39.399 on sorry I couldn't hear your reply
02:54:41.800 there I think the mic disappeared yeah
02:54:43.800 and put them back then in a big crowd
02:54:47.080 cach not having them separated get
02:54:49.960 everything back
02:54:51.319 into um so I think if if you did unpack
02:54:54.439 the agents with the agent animation on
02:54:56.439 Packa for example that'll bring it into
02:54:57.840 a kect skeleton and then after you've
02:55:00.120 modified that with whatever tools you
02:55:01.760 want to use um you can bring that back
02:55:03.840 onto agents either with agent pose from
02:55:06.439 rig soft which will just update the
02:55:07.880 agent transforms to match some skeleton
02:55:09.920 that you've given it um so that's the
02:55:11.600 most basic way or you could take that
02:55:13.520 new animation you made and turn it into
02:55:15.200 a motion clip and add that as an actual
02:55:17.120 clip in the agent defin if you wanted to
02:55:19.279 use that manually tweaked animation to
02:55:21.920 drive a bunch of different agents I
02:55:23.239 think there's probably a couple
02:55:24.319 different options depending on what
02:55:26.200 exactly result you want to use there is
02:55:27.840 no way to pack it back in the cash it's
02:55:30.760 more than you
02:55:32.080 get cash then I'm deleting the wrong guy
02:55:35.000 and then I'm rendering the wrong guy as
02:55:39.160 somebody oh if youve like fully heroed
02:55:41.479 up the character and you're not actually
02:55:42.920 going back to agents is that what you
02:55:44.920 mean yeah I'm going back to agents but
02:55:47.359 not to the CR cash after the simulation
02:55:50.200 after the simulation during the post
02:55:51.960 process then you can delet the guys that
02:55:54.600 is wrong tweak it but then it start to
02:55:57.760 be very hard to put it back into the
02:56:00.239 cach with the right uh with the right
02:56:04.520 pack being backed the right way okay
02:56:07.640 well we can maybe talk about it
02:56:09.080 afterwards as well there's probably a
02:56:10.239 lot of time back there but I think
02:56:11.359 probably you'd either if you were
02:56:13.040 completely heroing out Delete the
02:56:14.520 original agent and then you're just
02:56:15.520 going to render whatever heroed
02:56:17.120 character using your normal character uh
02:56:19.160 pipeline or use something yeah like
02:56:21.080 agent post from rig or uh motion clip
02:56:23.080 tools to bring the animation back onto
02:56:24.760 the agents after you've kind of heroed
02:56:26.279 it partially heed it out and wanted to
02:56:27.840 bring it back to crowds
02:56:34.479 yeah um I'm sorry I I i' quite like to
02:56:38.200 ask how um crowd skeletons and uh the uh
02:56:43.080 simulations and stuff will work with the
02:56:44.960 new rigging tools that's a great
02:56:47.640 question so more of a future work that
02:56:49.479 we want to think about guess um so being
02:56:51.680 a to for example like take a a rig graph
02:56:54.720 that you built with Apex or something
02:56:55.960 like that and running it on a crowd
02:56:57.760 skeleton is something that would be very
02:56:59.800 cool to do we haven't done that yet but
02:57:02.040 um a future thing would yeah be able to
02:57:04.120 to sort of take your hero Rigs and run
02:57:05.640 them on a crowd character at some point
02:57:07.040 if you wanted to and I was also
02:57:08.560 wondering because with how everything's
02:57:10.439 turning into more curves and points and
02:57:13.120 going down into the basics with the new
02:57:16.000 rigging tools and how they're built up
02:57:18.239 and then this new editing the motion
02:57:20.880 path which now has a bunch of you know
02:57:23.359 all of these points and stuff of the
02:57:24.720 collisions is there any way that you'll
02:57:28.200 be able to segment them so that they
02:57:30.239 don't get a bit confusing between like
02:57:32.239 all of
02:57:33.720 the say you were running a simulation on
02:57:36.319 one type of curve without having to
02:57:38.040 create all of these groups and stuff can
02:57:39.359 you just straight up I know like layer
02:57:41.479 them into separate layers throughout
02:57:43.399 your um process so that you don't um
02:57:47.520 have to affect the skeletons as well as
02:57:50.040 then the motion paths and then as well
02:57:51.760 as um I think if I understood your
02:57:54.160 question I think it just depends a bit
02:57:56.040 on your workflow but you can definitely
02:57:57.720 do things like using some of these tools
02:57:59.319 to just edit like plain curves and soaps
02:58:01.319 that don't necessarily have to be
02:58:03.080 specifically tied to agents um and same
02:58:05.040 as like the KX examples I was showing
02:58:06.600 where you can kind of just treat a cur a
02:58:08.600 motion path as being a k effect skeleton
02:58:10.239 so we kind of have this you know loose
02:58:12.439 coupling of geometry formats I suppose
02:58:15.120 where you can take advantage of a lot of
02:58:16.479 different tools to do kind of creative
02:58:18.560 things and mix and match workflows but
02:58:20.960 yeah you definitely can use these motion
02:58:22.479 bath tools to not change the skeleton of
02:58:24.800 your agents but just to kind of reorient
02:58:26.880 it its transforms and so on all right
02:58:28.920 thank you so much
02:58:31.479 yeah the questions
02:58:43.920 yeah hello awesome stuff I I love sof
02:58:47.399 crowd workflows
02:58:48.720 um kind of a weird question I'm assuming
02:58:51.560 right now because it's V1 something like
02:58:53.800 a banking horse wouldn't work you can't
02:58:56.560 inject like oh I'm going around a sharp
02:58:58.800 corner I want to do is that something
02:59:00.439 that could be added in the future
02:59:01.640 version or was that is that too yeah I
02:59:03.399 think that'll be something we'll
02:59:04.319 probably be looking at for the next
02:59:05.399 version most likely it's actually not
02:59:06.880 very far off from the tools that we have
02:59:08.960 it's it's not incredibly hard to do but
02:59:10.760 basically like that motion path layer
02:59:12.200 node that I was showing for layering
02:59:14.080 Clips on part of the skeleton um that's
02:59:16.720 basically all you need to do it it's
02:59:18.279 just like a layer on top of that to
02:59:19.880 decide to blend between you know
02:59:22.319 different banking Clips based on the
02:59:23.960 turn rate along the motion path so
02:59:25.760 that'll be something I think we'll
02:59:26.800 probably look at for the next version
02:59:27.960 because it's a very not too hard
02:59:29.920 extension on top of the tools that we
02:59:31.560 already have yeah awesome yeah
02:59:36.680 aesome other questions
02:59:46.399 yeah hey cool update so um I'm wondering
02:59:49.600 if um I saw some random motion clip
02:59:52.200 selection I'm wondering if there's I've
02:59:54.399 had to make my own weighted uh motion
02:59:56.520 clip selection tools in the past I'm
02:59:57.800 wondering if there's an easier or easy
02:59:59.439 straightforward way to do a weighted
03:00:01.680 motion clip selection let me see if I
03:00:03.239 can backtrack through the videos I
03:00:05.319 believe it's in there if I'm
03:00:06.439 understanding you right we'll just need
03:00:08.000 to find a a node where I can actually
03:00:10.160 show you it so like 20% of cheer 30% of
03:00:13.600 run that sort of thing yeah we'll see if
03:00:15.040 this
03:00:16.359 plays let me jump ah quickly I think it
03:00:19.080 is in there I believe we'll just scroll
03:00:22.760 down oh maybe it was further
03:00:25.920 back yeah so if I turn that on if you
03:00:29.279 added another entry for the clip groups
03:00:31.120 there then you can have some name or set
03:00:33.720 of clip names that'll get uh assigned
03:00:36.080 with that particular probability so okay
03:00:40.160 cool and then also about field of view
03:00:43.120 so uh is there a way to like assign a
03:00:46.479 field of view to say the head or joint
03:00:48.880 or is it based on the particle um I
03:00:51.640 believe for the option for the trigger
03:00:53.520 option that we had there for the field
03:00:54.920 of view that was uh based on the
03:00:57.880 particle because it was looking for
03:00:59.319 nearby agents also based on like the
03:01:01.279 motion path's position so in that
03:01:03.399 particular case it's kind of just a yeah
03:01:05.319 search angle from the agent's particle
03:01:06.920 as it's looking for other particles um
03:01:08.880 in the look at tools um which is totally
03:01:12.080 separate from these new tools you do
03:01:13.640 have a field of view that's based on the
03:01:15.520 head joint because it's looking for
03:01:17.040 actual targets to turn to yeah
03:01:21.880 awesome other
03:01:23.840 questions
03:01:25.359 yeah hey I guess my question is more
03:01:27.439 focused towards kind of once you finally
03:01:29.160 got all the crowd motion and then
03:01:30.319 rendering it in Solaris and Karma from
03:01:32.479 having like a fairly working or a
03:01:34.479 successful crowd kind of Stadium setup
03:01:37.000 and then getting that to render in it
03:01:38.800 with USD would you be re would you have
03:01:41.239 to go about recreating all of those
03:01:42.960 agents as rendera bles and then kind of
03:01:44.840 working with them at the object level
03:01:46.359 and then bringing them back in and kind
03:01:47.680 of dealing with variants and those kind
03:01:50.000 of things is there any kind of things in
03:01:52.080 the new release of 20 that kind of help
03:01:54.239 with that transition and once you've
03:01:56.040 built your crowd motion finally actually
03:01:58.000 rendering them and getting them into a
03:01:59.359 shot um in ag 20 I don't think there are
03:02:01.920 any changes to the major changes to the
03:02:03.960 workflow of bringing agents into saris
03:02:06.200 um but you shouldn't need to actually
03:02:08.560 bring them up to the object level or
03:02:10.040 anything like that you should be able to
03:02:11.120 use like sop import or sop crowd import
03:02:13.319 lops in Solaris to bring them in um but
03:02:16.319 one thing we do want to do in the future
03:02:17.439 for Stadium style crowds especially is
03:02:19.880 uh have an equivalent to mantra's agent
03:02:21.520 procedural which is doing some very
03:02:23.040 clever instancing behind the scenes to
03:02:24.640 try to uh render background agents as
03:02:27.120 instances of the deform geometry of
03:02:28.840 other agents so that's definitely
03:02:30.200 something on our radar to try to bring a
03:02:32.200 USD equivalent uh into the picture to be
03:02:34.760 able to do something similar and would
03:02:36.760 you embed like your materials because
03:02:38.399 obviously before it was lots of sty
03:02:39.680 sheets and those kind of things would
03:02:40.960 you embed that in when you're making
03:02:43.399 your initial kind of single agent would
03:02:45.520 you do that in Solaris to start with and
03:02:47.680 then take those agents back into the
03:02:50.080 object level is that the best way of
03:02:51.960 currently doing it uh I'd say that
03:02:53.920 mostly depends on your pipeline if you
03:02:55.279 want to have a very USD Centric pipeline
03:02:57.479 where like your Source character is in
03:02:59.120 USD and then you you know bring that
03:03:01.520 into sofs and then go back um setting up
03:03:03.880 yeah some of your material options there
03:03:05.640 would probably be good and then just
03:03:06.800 layer on your crowd instances kind of on
03:03:08.920 top of that as you go back um but you
03:03:11.080 could also go in the other direction of
03:03:12.359 maybe your Source asset is just fpx or
03:03:14.319 whatever and then just do your material
03:03:16.080 assignments after you export the crowd
03:03:17.920 back into Solaris for your final render
03:03:20.239 and is the best way to do that at the
03:03:21.439 moment with the collections and stuff
03:03:23.520 that's one thing we've kind of struggled
03:03:24.880 with is drilling down into the kind of
03:03:26.800 the skeletons and those things and is it
03:03:28.800 is is collections the best way to do
03:03:30.560 that with material assignments with big
03:03:32.279 big crowd setups uh generally I think so
03:03:34.960 because you're unless you remove the
03:03:37.239 instancing you're generally hitting the
03:03:38.560 problems of trying to assign materials
03:03:40.680 under to some primitive that's
03:03:41.960 underneath an instance which is an oo in
03:03:43.840 USD so if you either turn off the scene
03:03:46.120 graph instancing which might have some
03:03:47.319 downside otherwise yeah collection based
03:03:49.439 material assignment is often a good one
03:03:51.000 or primar type overrides as well as an
03:03:53.160 option excent thank
03:03:55.200 you it's other time we have for
03:03:57.160 questions for Cameron thanks Cameron all
03:03:59.040 right thanks
03:04:00.090 [Applause]
03:04:04.940 [Music]
03:04:08.680 everyone Hi everyone I'm Esa Trish from
03:04:12.080 side effects and I want to show you
03:04:14.560 today a few more information about how
03:04:17.279 to actually set characters up with the
03:04:19.399 new Apex workflow and I in general want
03:04:22.439 to give you a few more technical goodies
03:04:24.399 and what it means to work with
03:04:27.000 Apex and in the beginning I'm going to
03:04:29.239 iterate about a few points that some of
03:04:31.399 you might have already heard in the
03:04:32.520 launch but they're very essential for
03:04:35.200 everything that we're doing with Apex so
03:04:37.840 no worries there's going to be a bit of
03:04:39.239 iteration but I'm jump into the details
03:04:41.279 right after
03:04:43.399 that so what we know from uh what we you
03:04:47.840 already might have learned is that what
03:04:49.520 we are doing now with Apex in comparison
03:04:51.800 to Kinex is we started with Kinex
03:04:54.000 bringing the skeleton into geometry and
03:04:56.279 now with Apex we're bringing everything
03:04:58.920 that is relevant for our animation to be
03:05:01.600 working in the viewport to be animated
03:05:03.479 and play back we bring all these data in
03:05:06.080 a completely data driven approach into
03:05:09.279 geometry and one of the reasons for that
03:05:12.120 is that it allows us to be much less
03:05:14.279 dependent on heavy HDA networks which
03:05:16.800 makes the life for Ator a lot easier and
03:05:19.200 also opens up a lot of procedural power
03:05:22.120 purely for character setup work um and
03:05:25.920 everything driving it underneath is
03:05:27.600 called
03:05:29.239 Apex so now that we have all these data
03:05:33.160 in Geometry we need to have an EAS way
03:05:35.160 of organizing them so we are using
03:05:37.560 packed geometry folders in order to do
03:05:39.840 so so we're going to just start freshing
03:05:42.880 nice and easy with one character so our
03:05:45.600 one character is us usually needing some
03:05:49.279 inputs so we're going to have a rest
03:05:50.600 geometry we want to deform that usually
03:05:52.920 we use a skeleton that gets some
03:05:54.840 transformation data and then our
03:05:56.640 character can move around everything
03:05:59.000 driving it is our rig the rig is an apex
03:06:02.040 graph and that graph usually determines
03:06:04.640 what kind of inputs you get from the
03:06:06.040 animator what kind of parameters they
03:06:07.720 have what kind of Logics they have do
03:06:09.760 they have ik do they have FK and so on
03:06:11.920 and so forth and we pack all of this
03:06:14.000 night nice and neatly together to our
03:06:16.040 geometry one thing that you can see here
03:06:18.800 is that the names of our geometry
03:06:20.960 actually have extensions similar to file
03:06:23.399 extensions that you might be familiar
03:06:25.000 with and we can use that for the
03:06:28.000 viewport for example to associate
03:06:30.000 certain file types with certain
03:06:32.120 behaviors for example have a rig and the
03:06:34.319 viewp put knows what a rig is and can
03:06:36.120 fatch certain for example the input rest
03:06:38.200 geometry and so on so forth from these
03:06:40.560 extensions so bear that in mind that we
03:06:42.920 not just have files and folders we also
03:06:45.000 have file extensions that you also
03:06:46.600 familiar with from any other file and
03:06:48.200 folder structure and the nice thing
03:06:50.920 about our geometry picture is this is
03:06:52.880 the most simple case what a character
03:06:54.600 could be it's literally just one
03:06:56.680 geometry it's that simple and nice and
03:06:59.960 neat so now we're coming to our
03:07:01.960 animation scene we have a lot more data
03:07:03.680 to handle with so we might have one or
03:07:06.279 multiple characters and that's the
03:07:07.600 beauty of it we now geometry can we can
03:07:09.640 add as many characters as we want to our
03:07:11.479 one data stream but the most important
03:07:14.279 thing is we do of course also want to
03:07:16.359 add animation to it it and animations
03:07:19.720 are in the end nothing but Curves in 2D
03:07:21.720 space we know that we can store sub
03:07:24.200 curves like usually as geometry and
03:07:27.080 we're now Translating that over to these
03:07:29.560 called Channel Primitives into geometry
03:07:32.479 as well that we can store along
03:07:34.200 interactively modify with our animation
03:07:37.239 editor with setting keys and all these
03:07:39.120 things that we do in the viewport and in
03:07:40.560 our uis they actually changing these
03:07:42.560 animation curves that we are creating
03:07:45.040 and of course we're also going to have
03:07:46.319 other data that the animator wants to
03:07:48.200 create in the viewport such as ad hoc
03:07:50.200 constraints locators you already saw the
03:07:52.800 dynamic notion tool all these things can
03:07:55.120 be stored and modified Along on our
03:07:57.040 scene so we get so we can boil it down
03:07:59.720 to the very simple animation Network
03:08:02.439 which means our animator can focus on
03:08:04.160 the scen animator node so the lowest Noe
03:08:06.399 in the Nebo picture that's where our
03:08:08.200 animator lives that's where he's happy
03:08:10.479 and that's what allows us to have that
03:08:12.239 VPR Centric
03:08:14.960 workflow so
03:08:17.560 what's driving it underneath this
03:08:19.399 beautiful hopefully not always that
03:08:21.200 graph
03:08:23.279 but um but what's driving it underneath
03:08:26.040 is Apex and with Apex we gain a few huge
03:08:30.040 advantages when it comes to evaluation
03:08:32.399 we already know now that the Apex graph
03:08:34.640 can be stored as geometry and that means
03:08:37.960 first of all that we can have the full
03:08:39.800 power of proceduralism at our hand to
03:08:41.920 modify that geometry either through Sops
03:08:45.080 or through python AK the viewport so so
03:08:47.520 we're fairly flexible on where we're
03:08:49.040 changing it and when we're changing it
03:08:51.279 next principle that we can reduce from
03:08:52.960 that is we're just storing the graph
03:08:54.319 along we are not getting any inputs or
03:08:56.160 outputs out of it it's just a graph so
03:08:58.640 when we actually want to fetch something
03:09:00.200 we can decide what we're going to fetch
03:09:01.680 and when we going to fetch that is also
03:09:03.600 by the way it's called delayed
03:09:04.800 evaluation and we're going to combine it
03:09:06.479 with partial evaluation that means we
03:09:08.800 just evaluate what we actually need and
03:09:11.200 that means that everything in the
03:09:12.319 viewport is going to be nice and fast
03:09:14.040 and that's what we want in order to have
03:09:15.920 a good animation workflow
03:09:18.439 another concept and by the way that
03:09:20.279 heart is dynamic it's being recreated as
03:09:22.760 we're playing and I'm just going to play
03:09:24.160 it again because I can um we have the
03:09:28.279 concept of it being uh of a graph being
03:09:30.520 self-healing you that means you can
03:09:32.439 actually change that graph at any time
03:09:35.960 and you can tailor it to the current
03:09:38.080 needs that you have either in the
03:09:39.399 viewport or on stof level it's been
03:09:41.279 compiled on the Fly which keeps
03:09:42.600 everything nice and uh nice and fast so
03:09:45.359 everything we're doing here is designed
03:09:47.680 for live realtime proceduralism and very
03:09:49.920 much tailored for viewport
03:09:55.840 workflows do
03:09:57.720 something
03:09:59.680 and here we go so now we know that we
03:10:04.000 have of course also the concept that we
03:10:05.880 determine what we evaluate when here we
03:10:07.960 evaluate our scene in the viewport for
03:10:10.160 the animator but what we actually
03:10:11.399 storing along is the scene now we look
03:10:14.080 at the graph that's actually driving
03:10:15.680 this animation and we can see here here
03:10:17.840 that it's in fact really points so when
03:10:20.439 we are now in the graph UI where you
03:10:22.319 usually do your changes you can see that
03:10:24.080 the geometry in the viewport is actually
03:10:25.880 updating as I'm doing it the graph is a
03:10:28.640 combination of numerical custom type and
03:10:31.840 um and geometry operations and in this
03:10:34.479 case I'm just creating a few verbs and
03:10:36.479 I'm going to turn Electra into Taurus
03:10:38.640 lady so all sub verbs are available here
03:10:41.439 plus the given uh extension that I me
03:10:44.239 mentioned for the C++ lovers it's a
03:10:46.840 custom open open custom type system so
03:10:49.560 you can actually even extend it now we
03:10:51.920 go back to our animation we see that the
03:10:54.399 updates are live they're directly there
03:10:56.359 I you can see I just changed the whole
03:10:58.200 geometry the time dependency is just
03:11:00.359 introduced at the very last point this
03:11:02.239 is essential your scene is going to be
03:11:03.600 much Slicker and faster if you do so so
03:11:05.880 we're just fetching again even from that
03:11:07.880 scene invoke note just the bit that we
03:11:10.479 need just at the very end so everything
03:11:13.479 is intended to be kept lightweight
03:11:19.680 and because it is such an important
03:11:21.720 point I'm also going to show you this
03:11:23.760 concept of the graph dynamically
03:11:25.640 changing again so this is the locator
03:11:28.399 tool and you can see these changes it's
03:11:30.319 actually creating a little control
03:11:31.880 hierarchy in the viewport any every time
03:11:34.560 you're actually adding one of these
03:11:36.040 locators or it's removing it and that
03:11:38.600 that's what I mean it's like the graph
03:11:39.840 is tailored to your current needs if you
03:11:41.479 don't need a control anymore it's simply
03:11:43.239 going to be kicked out of the graph and
03:11:45.479 that's how easily you can update these
03:11:47.000 graphs graphs using either python that's
03:11:49.160 what we're doing via the viewport or
03:11:51.800 using soaps and graph operations in
03:11:54.160 order to get
03:11:56.080 there so now we know that we can modify
03:11:58.960 our graph of course with a graph UI you
03:12:00.920 just saw that but when we want to set up
03:12:03.359 a whole rig you definitely don't just
03:12:05.000 want to do that manually purely in the
03:12:06.760 graph UI you want to have procedural
03:12:08.399 tools we all want to work with maximum
03:12:10.439 rears so um we also looked into that for
03:12:13.920 you guys but before I go into those
03:12:15.520 details there's a few ESS to point out
03:12:18.200 that might be a tripping Stone so this
03:12:20.279 is the most possible simple the most
03:12:22.720 simple rig I can build for you guys this
03:12:24.880 is flippy being attached to a control
03:12:27.760 and uh what you can see is the purple
03:12:29.600 Noe is our transform object that's the
03:12:32.080 bread and butter for riger so to say so
03:12:34.920 you can Define with a transform object
03:12:36.560 it's similar maybe to a null an object
03:12:38.359 level you can Define um transformation
03:12:40.920 hierarchies you can Define rest position
03:12:43.359 you can do all these numerical Matrix
03:12:45.160 operations that we usually do on in
03:12:47.279 order to achieve these typical uh like
03:12:49.840 acyclic Transformations that we know
03:12:52.080 that we know from rigging and animation
03:12:54.880 we can plug them and what we can do is
03:12:57.120 we can use skeletons in order to create
03:12:59.520 these transform objects they are not the
03:13:02.319 same though so we can use a skeleton in
03:13:05.040 order to know what the rest positions
03:13:07.040 for these elements are and in the end we
03:13:09.120 can transform a skeleton which is just
03:13:11.960 geometry right we can transform that
03:13:13.960 with those matrices it's not the same
03:13:16.319 there are two different things and they
03:13:18.120 don't even need to align in their
03:13:19.680 hierarchy very important skeleton and
03:13:21.960 graph are two different entities and the
03:13:24.600 skeleton for our rig logic is just a
03:13:27.239 geometry input and the red bits here by
03:13:30.000 the way that's flippy that's where you
03:13:32.000 can actually see how flippy is being
03:13:34.359 transformed with the a form information
03:13:36.399 from that
03:13:38.000 control so now rig components um of
03:13:41.640 course we want to work procedural and
03:13:43.160 modular maximum rig use is very
03:13:45.040 important for us and it is also very
03:13:47.600 important that we are creating a
03:13:49.000 structure that is maximum flexible you
03:13:51.000 saw this already with everything that we
03:13:52.439 are showing here uh we don't just want
03:13:54.520 to be purely dependent on hdas so what
03:13:57.120 we're using for the rig component
03:13:58.920 workflow is we're using soaps as an
03:14:01.120 interface the actual functionality is
03:14:03.960 not in soaps directly so that is also a
03:14:06.680 very important difference because why
03:14:08.680 what can we do if we have something
03:14:10.040 that's not just in soaps we might as
03:14:11.479 well also in the future want to use it
03:14:12.960 for the viewport another very important
03:14:15.319 point is we all know that every rigger
03:14:17.120 has a different idea and every animator
03:14:19.239 especially a different idea what the
03:14:20.840 perfect rig is so it's highly important
03:14:22.840 to us that it's op that it's possible
03:14:25.200 that you guys can customize this you
03:14:27.239 will all have it your uh and you can
03:14:29.319 fill it with your own components your
03:14:31.000 own tools and grow it into your rigging
03:14:34.560 structure so we're providing very much a
03:14:37.200 framework so and also one note to bear
03:14:40.319 in mind because that's something where
03:14:41.479 we are heading for the future the
03:14:43.239 rigging structure is not just built for
03:14:45.439 with the traditional rig picture where
03:14:47.120 we have one giant rig graph with lots of
03:14:49.560 functionality this is completely
03:14:51.200 supported as you could see but we are
03:14:53.800 also having maybe a different mindset
03:14:56.000 there that is more open to FML rigging
03:14:58.600 which means we're going to have smaller
03:14:59.840 tools that the animator applies while
03:15:01.479 they are in their viewport and that
03:15:03.720 means rig decomposition but that's a bit
03:15:06.319 more Beyond 20 but keep that in mind
03:15:09.120 there's more stuff to
03:15:11.680 come so now let's see that that in
03:15:15.880 action so here you can see my skeleton
03:15:19.160 and my geometry input and I'm now
03:15:21.160 creating one of these rig components
03:15:22.800 with the dropdown menu I'm getting
03:15:24.800 parameters created for me it's actually
03:15:26.960 just uh two or three different hdas that
03:15:29.160 we're having and the parameter interface
03:15:31.080 is a bit of a shape shifter all of those
03:15:34.080 um functions are pretty much applying a
03:15:36.600 function to the overall character and
03:15:39.160 you can see how your rig dynamically
03:15:40.960 changes how you have parameters to
03:15:42.479 change it and how it actually updates in
03:15:44.160 the viewport that's what I mean with
03:15:46.000 soap is a really good interface actually
03:15:47.760 for rigging because you can control your
03:15:49.640 parameters you can look at the graph but
03:15:51.279 you can also look at the actual output
03:15:53.600 in the interface and everything reacts
03:15:55.800 instantly this is not speed up this is
03:15:58.239 the actual interaction so you can see
03:16:00.359 here I turn mirroring off no control
03:16:02.720 anymore there you can also see that the
03:16:04.279 graph is updating I turn it on again you
03:16:06.520 can see the graph is changing mirroring
03:16:08.640 is there again and last but not least we
03:16:12.000 are also able to configure metadata on
03:16:14.359 our graph we are using them for example
03:16:16.000 for our control shape shapes and these
03:16:18.640 are being stored as dictionaries and
03:16:20.160 properties or as taxs this is essential
03:16:22.319 when you work with Ricks and you want to
03:16:23.640 modify data and fetch and filter
03:16:25.520 elements with that and that pretty much
03:16:28.080 brings me also to my next video oh yeah
03:16:32.000 and of course you can also modify it
03:16:33.520 with soaps with any kind of soap
03:16:35.239 operations that you have which is
03:16:36.880 wonderful so now you see no ik
03:16:45.399 anymore um
03:16:48.520 play so now of course we want to see
03:16:51.640 that we can also transfer these data
03:16:53.239 over and for that we are now using our
03:16:55.640 tag and property filtering system in
03:16:57.439 order to flexibly bring our over our
03:17:00.359 very simple character Electra over to
03:17:02.960 our more complex base rig from Lucha
03:17:05.760 from the Luchador and as you could
03:17:08.199 already see the base animation works we
03:17:10.120 can test our our rig right away and we
03:17:12.960 know we have set something up where the
03:17:14.439 functionality is there now I have the
03:17:16.520 different rig much higher joint or Noe
03:17:18.920 count and you can see here the
03:17:21.080 functionality is still being transferred
03:17:23.160 even now even if now my controls might
03:17:25.520 have completely different orientations
03:17:26.960 it's being dynamically picked up because
03:17:28.840 I have these generic component blocks
03:17:31.000 the animation is broken so I have
03:17:32.960 retargeting in order to fix that up I'm
03:17:35.520 not going to jump to that though there
03:17:37.720 because you guys might have a lot of
03:17:39.840 questions on how on Earth does this
03:17:41.840 component even work and and for that
03:17:46.000 we're going to come
03:17:47.920 to bit more in into
03:17:50.279 that so we already saw now we have these
03:17:53.479 daisy chain notes it's always the same
03:17:55.680 Noe and you might have noticed there's a
03:17:57.520 second
03:17:58.319 input and you can actually use that from
03:18:00.359 the dropdown here I have an example
03:18:02.560 where you actually see exactly that
03:18:04.040 second input we're using it in order to
03:18:05.720 create these locators that waren uses
03:18:08.120 for pivot Points and now you see that
03:18:11.359 we're actually feeding a graph in and
03:18:13.880 that graph fetches the whole character
03:18:16.359 AKA the rig and all its inputs you can
03:18:19.120 fetch the rig from it specifically you
03:18:21.760 can modify that rig with nodes and you
03:18:25.399 just update it and pipe the whole
03:18:26.920 character out again so we have actually
03:18:30.319 a bit of like visual coding Style with
03:18:32.520 notes that allow us to modify any given
03:18:36.319 input to your character and we are by
03:18:38.640 the way also relying again and you can
03:18:40.800 see here this parameter this locators
03:18:42.880 parameters that's actually what you're
03:18:44.680 seeing on your subnote so top is in a
03:18:47.439 way our nice interface in order to
03:18:50.040 control and up maintain a graph and what
03:18:52.960 you can see here is that I'm by the way
03:18:54.680 again using tags in order to fetch
03:18:56.479 certain data based from my
03:18:58.279 skeleton and just to iterate over that
03:19:00.680 concept again we can see here a very
03:19:03.120 simple rig inward foot setup and when we
03:19:06.279 go to the graph again you can see here
03:19:09.080 those are our input parameters and these
03:19:11.239 parameters that we have on the Node are
03:19:13.319 exactly that so the sub node is just
03:19:16.840 there so that you can easily configure
03:19:18.760 it test it tailor your rig changes
03:19:22.040 exactly to what you need for your
03:19:24.399 function that operates on your
03:19:27.279 character so this is there in order to
03:19:29.520 sum it up it's pretty easy actually in
03:19:31.479 order to set it up all you need to have
03:19:33.199 for your rig modifier graph is character
03:19:36.720 in you do something with that character
03:19:39.720 out why is it the whole character and
03:19:41.840 not just one specific rig if you think
03:19:44.000 about what you can do with rigs you have
03:19:45.960 actually a multip of options it's
03:19:47.760 usually not just a rig that you might
03:19:49.000 want to change maybe you want to change
03:19:50.640 your skeleton maybe you want to add a
03:19:52.600 blend shape maybe you want to kick a
03:19:54.319 blend shape out you can do all of that
03:19:56.680 you have the whole character plus its
03:19:58.160 inputs available in order to change and
03:20:00.720 modify that as you go and we have a very
03:20:03.239 generic format that always works like
03:20:05.640 always character plus a bunch of
03:20:07.479 parameters in updated character out and
03:20:10.279 in between you're fairly free to do
03:20:13.600 whatever you want
03:20:17.920 so how would I create one of those
03:20:20.680 there's a few points and a few uh that
03:20:22.880 will make your life a lot easier and uh
03:20:25.520 so I'm going to run quickly through one
03:20:27.840 of the processes how I would usually
03:20:29.479 approach it for example so in my case I
03:20:32.520 want to create a super simple twist
03:20:34.359 setup and I'm starting just with FK not
03:20:37.000 twisting not great so I'm creating
03:20:39.960 myself here a little
03:20:43.720 example and um you can see I actually
03:20:46.239 just mod modified that graph wide away
03:20:48.120 so I just put that in in order to test
03:20:49.840 what I actually want that's the typical
03:20:51.800 prototyping thing you just have a small
03:20:53.399 example you test the functionality and
03:20:55.479 then you continue but what I already did
03:20:58.120 is I created myself subnets in this
03:21:00.439 graph so you can have in the graph you
03:21:02.120 are you can have subnets that you might
03:21:03.479 know from any other so from from soaps
03:21:07.239 so we can do the same here so I'm
03:21:08.680 already organizing it because I want to
03:21:10.760 make reuse now out of it because twists
03:21:13.080 are of course great but usually you
03:21:14.800 don't know how many twist shines you
03:21:16.239 might end up having so we want to have a
03:21:18.319 flexible setup so creating a generic
03:21:20.680 solution for that is much better than
03:21:22.399 always just copying something into your
03:21:24.920 rig so now that we continue you can see
03:21:28.600 when we dive into the subnets there's
03:21:31.160 really just a few numerical operations
03:21:33.080 I'm really just grabbing the twist float
03:21:35.279 well you there's no magic happening
03:21:37.199 there but I can bundle them up knees
03:21:39.840 night and knees uh nicely in order to
03:21:43.560 get there so one cool thing that we can
03:21:46.199 see with these two red notes is wouldn't
03:21:48.279 it be cool if we can store them like an
03:21:49.920 HDA that would save so much work I don't
03:21:52.319 need to create seven notes all of the
03:21:54.080 time I can just drop this new one and
03:21:56.880 yes you can do this and we call this
03:21:58.640 concept subgraphs and you can actually
03:22:01.160 just store them to disk load them again
03:22:03.040 and you can use them like any other HDA
03:22:05.040 and I can just like highly recommend
03:22:06.680 working with that um in your pipelines
03:22:09.399 because it will save a lot of work
03:22:12.279 whoops let me jump back
03:22:16.880 and let me jump to that
03:22:21.399 point and here we are so now you can
03:22:25.239 what I'm doing actually is I'm isolating
03:22:27.319 these two subnets that I'm having I'm
03:22:29.319 just packing them into a pack folder
03:22:31.000 give them a name for my little well well
03:22:34.040 Apex HDA AKA subgraph then I'm just
03:22:37.319 storing it to disk and you can see I can
03:22:39.199 just drop it down like any other note
03:22:40.960 and it just has exactly the name that I
03:22:42.520 gave it to it that's great so when we
03:22:45.359 now actually want to bring
03:22:47.040 that setup in all we actually need to do
03:22:48.920 is we just need to add these notes and
03:22:50.720 we need to connect them up right and
03:22:53.560 that's all we're doing with the
03:22:54.720 component script we have now a flexible
03:22:57.040 input to test everything and the first
03:22:59.199 thing that we starting with is that we
03:23:01.680 actually just creating these pink notes
03:23:03.640 AK we fetch the rig re update the rig if
03:23:06.640 we now look at our lower part there in
03:23:09.479 the lower graph you can see well nothing
03:23:11.399 has changed because why we haven't
03:23:13.160 really done anything what we are doing
03:23:15.600 now in the next step is we creating
03:23:17.279 these green
03:23:18.479 notes so let's see what we're doing here
03:23:21.479 look at our parameter inputs we actually
03:23:23.279 have now parameter inputs to enter in
03:23:25.199 order to fetch the start in the end and
03:23:27.439 what I very quickly did in this video is
03:23:29.560 I pressed that little update button
03:23:31.920 there and that creates these parameters
03:23:34.199 on the sub node for me so now I can
03:23:36.120 actually set up my test inputs in order
03:23:37.720 to get the start the end and the middle
03:23:39.359 part of my little twist
03:23:42.399 setup now that we have that we can
03:23:45.319 continue and next thing we do is we
03:23:47.840 actually add the nodes and see it's
03:23:49.439 literally operations like graph add node
03:23:52.439 and it adds the note with the given name
03:23:54.040 in the given functionality now we're
03:23:56.120 setting up a few
03:23:57.520 parameters and the rest of these
03:23:59.600 operations are pretty much just
03:24:01.160 operations in order to connect these
03:24:02.680 elements up and one very important point
03:24:05.600 is that dark bluish tures set of notes
03:24:10.000 is a loop we actually support loops and
03:24:13.319 conditional structures in Apex they're
03:24:15.439 great and they really great if you have
03:24:17.800 graphs that modify these other graphs
03:24:20.199 like our component scripts don't put
03:24:22.640 them in the r themselves you're going to
03:24:24.160 kill your performance and you will be
03:24:25.960 happy for a very small second because
03:24:27.720 you have a dynamic rig and you're going
03:24:29.000 to be very unhappy because the rig is
03:24:31.000 going to be dark slow and the reason for
03:24:34.080 that is simply it's intrinsic to the
03:24:36.120 natures of how Loops are being built
03:24:38.279 remember we are having the profit of
03:24:39.720 working with partial evaluation so we
03:24:41.399 just evaluate what we need if we throw
03:24:43.640 all our data constantly into Loops we
03:24:45.760 cannot really do that anymore so in
03:24:48.479 order to keep your Ricks very light
03:24:50.560 right rather regard them as a result and
03:24:53.239 put the heavy structures such as Loops
03:24:56.199 rather into your components they can
03:24:58.439 tolerant tolerate that a lot better than
03:25:00.960 the actual rig that the animator
03:25:02.359 interacts with the whole time so this
03:25:04.479 might be a very essential
03:25:08.160 tip so and now that we have this we're
03:25:10.960 going to connect in our little twist
03:25:12.760 inverter again we are actually just
03:25:14.560 operating with like connect and uh
03:25:16.880 connect operations in the end we just
03:25:18.640 promote our rotation
03:25:20.560 out and now we're just packing it into
03:25:22.920 subnet so it's nice and readable and we
03:25:25.600 can test our functionality so now we
03:25:28.080 just reproduced our prototype exactly
03:25:31.439 with that now we Chang The Joint number
03:25:33.680 in order to see if our prototype is
03:25:35.279 still holding up and yay I have a
03:25:38.199 modular twist component isn't that great
03:25:42.199 and again why are we doing this in
03:25:44.880 graphs
03:25:46.560 one again what can we do with grass in
03:25:48.640 the future we can bring them to the
03:25:50.040 viewport so don't forget
03:25:56.279 that let me go to the next
03:26:01.760 slide and in order to prove my point
03:26:04.239 that the system is actually scaling up I
03:26:06.279 already mentioned that the chicken is
03:26:07.920 being set up exactly in that way and you
03:26:10.680 can see that we are craw uh that we can
03:26:12.800 see how uh the rig is kind of following
03:26:16.160 the Evolution so we're starting with a
03:26:17.800 very simple FK setup we add more
03:26:19.920 functionality we can see how our graph
03:26:22.160 changes and we can see how the
03:26:23.840 functionality changes and what we're
03:26:25.359 getting out of this is a very nice and
03:26:27.479 neat vertical layout um that can be very
03:26:30.680 well organized in the sof picture of the
03:26:32.600 rig so that you have the maximum read
03:26:34.560 there as well and in the end of course
03:26:36.840 we get you can see how much the graph
03:26:38.800 has grown how complex it has become
03:26:41.319 because we have of course so much
03:26:42.520 functionality in there which is great
03:26:44.040 and we can all execute it for the
03:26:45.399 animator and in the end we see the final
03:26:48.640 controls
03:26:54.920 there
03:26:58.040 and I'm going toip the
03:27:03.399 one and another goodie that I have for
03:27:05.960 you is now we saw these typical controls
03:27:08.080 that you know all with a handle this one
03:27:10.160 is a different one that's an abstract
03:27:11.680 control what you can do with that is you
03:27:13.120 can control float values such as for
03:27:15.479 example blend shapes and you can just
03:27:17.439 drag around in the viewport in order to
03:27:19.239 get these like combo shape interaction
03:27:21.960 Styles you can also use the channel
03:27:23.479 widgets for them and you can also very
03:27:25.399 easily set them up in your rig so that
03:27:27.359 might be a nice convenience in order to
03:27:29.080 interact with
03:27:33.560 that
03:27:37.279 and and so if we um but now we're going
03:27:41.199 to pushing it one step further this is a
03:27:43.840 bit more experimental but it might also
03:27:45.720 going to show you a bit of power of what
03:27:47.279 we can do if we put everything into
03:27:48.880 graphs is we also going to have the Rick
03:27:51.000 script and what it allows you is to work
03:27:53.520 with your Ricks and templates so instead
03:27:56.239 of focusing on the rig as an output we
03:27:59.120 rather focusing on the what let's call
03:28:01.680 it recipe on how you actually got to
03:28:04.680 your rig and we can store that and we
03:28:06.920 can use that either for creating bigger
03:28:09.520 tools out of smaller tools or we can
03:28:11.840 simply really use it as a fully rig
03:28:13.520 template that you can apply to various
03:28:15.279 other characters
03:28:18.319 and when we look at it you can see the
03:28:20.160 advantages here in the
03:28:22.319 scene so here you see it looks very
03:28:25.600 similar to start with to the normal Auto
03:28:27.760 rig component Noe but now the graph that
03:28:30.479 we are seeing is actually not the rig
03:28:31.800 graph but that's the Rick script graph I
03:28:34.359 our template that builds up note by note
03:28:37.640 and what it actually stores is exactly
03:28:39.920 that component that is being executed
03:28:42.439 plus all the parameters that you
03:28:44.319 configured so you can see it's a mirror
03:28:45.880 to what we have here so it is very much
03:28:49.560 a um so the vertical picture that you
03:28:53.160 have from your soaps is a mirror of the
03:28:55.640 horizontal picture that you get in your
03:28:57.279 graph so you can just draw everything
03:28:59.040 that you did in soaps and that is
03:29:00.319 connected to the red line now in one
03:29:02.520 graph and you can execute it in one
03:29:05.560 go so when we now look at the graph this
03:29:08.279 here is now in the end building the
03:29:10.239 whole rig that's great now we take that
03:29:12.880 red output where we know that the whole
03:29:14.560 template is and we just use it as any
03:29:17.120 other component and you can see it
03:29:18.880 builds the whole rig in one go just one
03:29:21.000 node needed great and that is of course
03:29:23.880 cool for templates but I can still even
03:29:25.880 configure that thing with parameters so
03:29:28.120 you can see I have a whole rig and I
03:29:29.439 just turned mirroring on or off so for
03:29:32.640 that we even provide more
03:29:34.600 functionalities and um you can see in a
03:29:37.199 second how we actually set this up so
03:29:39.439 now I go to my ik arm you can see I have
03:29:41.560 a mirror attribute and what I can do is
03:29:44.560 I can go to promote parameters and I can
03:29:46.520 actually promote that parameter and you
03:29:48.640 can see that it's doing exactly that in
03:29:50.239 the graph and everything starts to look
03:29:52.680 a lot more like one of these rig
03:29:54.479 components again and what we're doing is
03:29:57.239 pretty much we're just creating a bigger
03:29:58.640 component out of all these smaller
03:30:01.199 components so that's of course great but
03:30:03.920 now I already said we can transfer it to
03:30:06.040 other characters we have the Luchador
03:30:07.800 here and you can see I can now easily
03:30:10.319 also transfer the complete template over
03:30:12.920 and I can configure it exactly in the
03:30:14.720 same fashion that I just did
03:30:16.479 so that should facilitate any kind of
03:30:18.199 template workflows and if we think in
03:30:20.239 the viewport about animator applying
03:30:22.279 elements just with a button click in the
03:30:24.120 viewport that might be one of these
03:30:26.239 things that facilitates exactly that
03:30:28.120 because you can execute and apply a rig
03:30:30.479 just with a button
03:30:37.640 click
03:30:43.199 nope so just to iterate this our Rick
03:30:46.199 script components is actually nothing
03:30:48.279 but a bigger component scripts just with
03:30:50.439 lots of little baby component scripts
03:30:52.880 inside
03:30:55.080 it so now we talked a lot about graphs
03:30:58.000 modifying graphs of course we also have
03:31:00.520 a python API we know a lot of rigers are
03:31:02.680 familiar with that and it also comes
03:31:04.760 with a lot of advantages so that is
03:31:07.439 always an option you uh and it is
03:31:10.359 something that is also very much
03:31:12.640 combinable so here we have an example
03:31:15.319 from Magnus Miller and he actually built
03:31:18.040 in a very short time this little Auto
03:31:19.800 riger modifying these graphs of python
03:31:23.279 and um in order to set these two little
03:31:26.680 cuties
03:31:29.199 up and you can see that we have two
03:31:31.640 different
03:31:33.000 characters
03:31:35.080 wonderful and we we can see we have the
03:31:37.399 full functionality of ik and FK here to
03:31:39.880 our disposal completely set up here and
03:31:43.600 the cool thing about it being built in
03:31:45.080 Python is of course it's easy to set up
03:31:47.080 has the advantages of creating Loop
03:31:49.640 structures very easily in Python um one
03:31:52.040 thing to bear in mind though this setup
03:31:54.800 is very much HDA bound because we have
03:31:57.520 different python steps that means we are
03:31:59.560 now bound to hdas for everything that I
03:32:02.319 mentioned with the viewport of working
03:32:03.840 more viewport heavy as a rigger that is
03:32:06.840 a little bit more complicated when it
03:32:08.359 comes to python the graph is very well
03:32:10.319 maintained um python not necessarily
03:32:13.279 because you can do anything in here and
03:32:15.399 he's all also making here in this case
03:32:17.920 one very good example of the use case of
03:32:19.880 TXS so here TXS are being used to define
03:32:22.880 the various
03:32:23.920 functionalities and we're using TXS and
03:32:26.160 loop structures in order to create
03:32:29.199 elements like ik exactly on the defined
03:32:32.160 limbs that are being taged with the
03:32:34.319 given tag and that concept applies to
03:32:36.720 python it also applies to the graph and
03:32:39.000 it is incredibly powerful working with
03:32:41.199 these Texs anything that you hook
03:32:43.439 together like Lego blocks and these
03:32:44.840 components um is something um where you
03:32:47.960 can make use of TXS in order to be name
03:32:50.040 independent and if we talk about various
03:32:52.199 teag inputs that's how you do it and
03:32:53.920 here of course you can see again how our
03:32:56.880 graph is being assembled using Python
03:32:59.399 and how we can use the python API and
03:33:01.359 Des segmented using python Sops for
03:33:05.840 that I
03:33:08.439 already I already mentioned that uh TXS
03:33:11.560 are essential and here you can see it
03:33:12.920 again I have my two graphs using these
03:33:15.160 TXS and what we are doing is we're
03:33:17.160 providing actually a completely um new
03:33:19.399 filter Syntax for our graphs and that
03:33:23.439 filter syntax can be seen down below
03:33:25.319 here and it's relying on the same syntax
03:33:28.160 that you might be familiar from uh
03:33:30.319 Solaris and that allows us to filter
03:33:32.800 after tax as I already mentioned you can
03:33:35.080 use tax as you know it from any other
03:33:37.239 applications it's just a string array
03:33:38.880 and you can assign certain names to
03:33:40.279 certain elements you can transfer them
03:33:42.439 from skeletons over to your transform
03:33:44.520 objects for filtering which is
03:33:46.239 incredibly handy um you can also um and
03:33:50.520 you can also filter for example after um
03:33:53.760 note type and all these kinds of things
03:33:55.960 we also have properties available
03:33:57.479 properties is a custom metadata type so
03:33:59.560 you could store for example the
03:34:00.680 information like my limb name is leg and
03:34:03.840 you can filter after that and you can
03:34:05.319 filter after the keyword as well so
03:34:07.920 think about that when you set up your
03:34:09.080 structures for maximum uh reusability
03:34:11.800 and maximum
03:34:14.160 flexibility and last last but not least
03:34:16.319 I'm going to show you again um how Apex
03:34:19.080 and K effect can work lovely together
03:34:22.040 with our wonderful
03:34:25.080 chicken
03:34:28.000 and and I'm going to say a few more
03:34:29.960 details while I'm going to show you
03:34:32.479 this so when we come now now we have our
03:34:35.640 rig setups and we want to work
03:34:37.199 dynamically more as a tech animator we
03:34:39.199 have now the option that we can animate
03:34:40.800 directly in Apex and we've already seen
03:34:43.399 that um what we can do now is we can
03:34:46.239 actually convert our rigs back to a
03:34:48.439 skeleton by extracting controls based on
03:34:51.520 their path and we can be very selective
03:34:53.399 here now I'm actually really grabbing
03:34:55.840 again a motion clip uh uh a MOAB clip
03:34:59.239 and I can transfer my data over using
03:35:01.960 the ri copy to transform uh uh RI copy
03:35:04.439 transform notes in order to do so it is
03:35:06.880 very important to point out here that
03:35:09.479 the purple Noe that you're seeing AK the
03:35:12.840 well the the one in the uh the upper one
03:35:15.720 needs a twin and that's the control
03:35:17.319 update Palms node so first you fetch
03:35:19.439 your control then you're modifying it in
03:35:21.760 kin effect L and then you need to update
03:35:24.000 that in order to work and that's how we
03:35:26.600 can then track back to our according
03:35:29.120 proper character so a very important
03:35:31.279 point to make and when we pipe these
03:35:34.760 information into the scene in Vogue we
03:35:36.680 can directly use it we can directly get
03:35:39.239 our scene being updated by that but
03:35:41.560 usually we want to update our Channel
03:35:43.359 Primitives for this we always need to
03:35:45.279 create a motion clip and we have the uh
03:35:48.080 Channel primitive from motion clip node
03:35:49.880 in order to update it accordingly both
03:35:51.880 nodes are necessary again we're working
03:35:54.800 now with dense data so what we uh we can
03:35:57.199 do is we can do we can reduce the sample
03:35:59.479 rate and now we can hand animate on top
03:36:01.960 of our given map animation in order to
03:36:03.880 have a fluent workflow so now we just
03:36:05.920 created the first Loop here this is
03:36:08.840 actually a full Apex animation and I can
03:36:10.960 even you can see I can even splice that
03:36:12.479 up and just isolate the chicken and work
03:36:14.279 with that in this case I'm also just
03:36:16.680 isolating one joint instead of the whole
03:36:18.680 skeleton that I'm filtering out and now
03:36:21.120 I'm applying my K effects changes here I
03:36:23.840 have my curve I resemble the curve for
03:36:26.279 better distribution and I have a very
03:36:27.800 simple transform path vop in order to
03:36:30.840 modify the joint position again you can
03:36:33.279 see this twin Noe and then the motion
03:36:35.080 path essential in order to update our
03:36:37.680 Channel Primitives now we are fetching
03:36:40.279 with the pink note the existing General
03:36:42.359 Primitives update them and just then is
03:36:45.680 it possible that our chicken will follow
03:36:47.720 along and from this point on I could
03:36:50.279 again reduce the samples that I got from
03:36:52.399 the chicken rout and continue working
03:36:54.239 from it I could also go back out of it
03:36:56.920 continue with the same workflow or could
03:36:58.760 update on the top part and just update
03:37:00.760 my channel Primitives as I'm going
03:37:07.560 along and last but not least I'm not
03:37:10.239 sure if I still have time here's my hard
03:37:12.239 Goodie and that hard goodie is a bit of
03:37:14.279 a crazy example example because it's a
03:37:16.080 rigged rig and it might make actually so
03:37:19.279 it's completely useless of course but
03:37:21.720 it's a it's a good example of half far
03:37:23.880 you can actually push things so what I'm
03:37:27.120 actually internally
03:37:28.359 doing if I'm getting there
03:37:32.120 ever
03:37:35.199 maybe so that's also what I mean it's
03:37:37.279 for the curer mind is I'm first
03:37:41.120 deforming my little heart skeleton and
03:37:43.960 I'm doing this with this abstract
03:37:45.160 control and I'm actually just
03:37:46.399 manipulating a few blend shapes that's
03:37:48.279 this graph that you're seeing great now
03:37:50.680 I'm grabbing that I'm fetching the
03:37:52.720 invoked
03:37:54.160 information and well now I can animate
03:37:56.880 it I just use the times letter and I go
03:37:58.680 back and forth and what I'm doing now is
03:38:00.960 I feed that thing my animated skeleton
03:38:03.880 into a rig build and you can see I
03:38:06.000 actually have a little FK heart skeleton
03:38:07.479 now that's great and that's what you can
03:38:09.000 see there that's our graph and now I can
03:38:11.800 drag in the timeline and every time I
03:38:14.399 drag that rig is being rebuilt with a
03:38:16.479 complete new rest position based on my
03:38:19.560 animated input
03:38:21.000 skeleton it's a bit dangerous we don't
03:38:23.279 want to introduce time dependency but I
03:38:25.080 think it's a good point of showing how
03:38:27.160 interactive and responsive the whole
03:38:28.720 system actually is because that is one
03:38:30.960 of the big advantages that we can
03:38:32.399 introduce that you have a very
03:38:33.840 responsive system that you can modify
03:38:35.479 now in various ways and you always have
03:38:38.600 an instant feedback on the behavioral
03:38:40.359 changes that you do either in the
03:38:41.680 viewport or simply by debugging it
03:38:43.840 through the graph directly
03:38:46.359 so with that I'm going to
03:38:50.279 say thank you maybe yes I
03:38:55.110 [Applause]
03:39:04.120 am questions might have time for
03:39:08.080 one better be good
03:39:16.399 but we do have time for
03:39:18.319 one
03:39:28.720 yeah yeah so the the uh folder and
03:39:32.439 extension type thing to me is a pretty
03:39:34.840 big paradigm shift I'm just wondering if
03:39:36.960 you could say any more kind of low-level
03:39:39.160 details about what that stuff is it's
03:39:42.439 nested pack Primitives in the end and we
03:39:44.880 are just reversing through the nested
03:39:46.520 pack primitive structure in order to
03:39:48.880 fetch certain elements and we can use a
03:39:51.840 primi intrinsic to decide if we want to
03:39:55.040 use uh a treat a primitive as a folder
03:39:58.520 meaning that you can actually dive
03:40:00.120 inside of the geometry and analyze the
03:40:02.880 the given sub elements or if R treat it
03:40:05.040 as a file in that uh in that case you
03:40:07.960 cannot dive any further in and you're
03:40:10.199 pretty much blocked up to that part when
03:40:11.680 you do a path traversal if that makes
03:40:14.080 sense so would you be able to do like
03:40:16.600 your own extensions or is it limited to
03:40:18.920 the you can you can do your own
03:40:20.720 extensions nobody is stopping you from
03:40:23.120 that um the current extension that we
03:40:25.199 have are partly being used by the
03:40:26.720 viewport though so for example the do
03:40:28.920 Char extension that we use for
03:40:30.439 characters is essential for the viewport
03:40:32.760 in order to identify a folder as a
03:40:35.080 character so and that might be also a
03:40:37.479 good point to say is do Char sounds like
03:40:41.239 anything that has two legs and moves
03:40:42.720 around a character is defined as a rig
03:40:44.920 with its inputs so if you have a prop
03:40:47.560 with a control that's also a character
03:40:49.760 so if you use do prop that thing will
03:40:51.479 not show up in the viewport so we do
03:40:53.640 assign it for certain functionalities
03:40:55.319 but if you want to have your custom
03:40:56.680 functions for generic so workflows you
03:41:00.199 are you can set this up and um use it
03:41:04.000 accordingly yeah thank
03:41:07.439 you awesome stuff for that's true thank
03:41:09.880 you
03:41:13.770 [Music]
03:41:18.760 all right um so uh let's get take a look
03:41:22.080 at our new our brand new animation
03:41:23.640 environment uh in Houdini 20 um
03:41:27.000 including the built-in physics uh for
03:41:29.080 such things as ragd doll and uh Dynamic
03:41:31.279 motion and it's all with the viewport
03:41:33.199 Centric uh workflow for
03:41:36.359 animators so uh first of all we're going
03:41:38.439 to take a look at some posi and and
03:41:40.359 animation and we're just going to go
03:41:41.720 through some workflow things such as
03:41:43.199 selection sets our new volatile hotkey
03:41:45.399 control shift um moving controls around
03:41:49.040 any pivot and posing ik in a FK Manner
03:41:53.960 and some of the tools and features we'll
03:41:55.560 go over as some of our animation sliders
03:41:58.000 uh locators and
03:42:01.600 constraints so um as I mentioned we're
03:42:05.199 going to be um working entirely in the
03:42:07.880 viewport here but just at the beginning
03:42:09.760 I just wanted to keep this panel open
03:42:11.520 it's our selection set panel and this is
03:42:13.720 for loading uh um and uh copying and
03:42:17.279 saving out files uh of your selection
03:42:19.560 sets and we also do our mirroring and
03:42:21.720 everything um in there so but once you
03:42:23.880 have that set up you have your your
03:42:25.560 selection sets loaded in get rid of that
03:42:27.600 panel let's just work in the viewport
03:42:29.159 because now we have our selection set
03:42:30.960 Huds here and this is more than
03:42:32.880 selection just selection sets it's also
03:42:36.080 um our display groups so we could turn
03:42:38.439 characters and controls on and off as we
03:42:40.920 want and we also use it as our Channel
03:42:43.159 groups for keying so you could pin your
03:42:45.520 sets to make sure that you're guaranteed
03:42:47.159 to uh key everything in that set um
03:42:50.040 similar to the way the channel groups
03:42:51.399 worked in the graph
03:42:53.680 editor um and the next thing we have uh
03:42:57.279 just we could throw it in is that we
03:42:58.960 have our um our handle here that we you
03:43:01.880 could see but we have a lot of
03:43:03.199 parameters in there so you can change
03:43:04.680 the line width of it you can change the
03:43:06.720 scale factor of it there's the
03:43:08.319 brightness so there's there's a bunch of
03:43:10.000 options in there so you can change your
03:43:12.600 handle to however you like working with
03:43:14.439 it I prefer a nice chunkier handle uh as
03:43:17.479 I work through
03:43:19.439 everything and um the other thing I want
03:43:22.359 to mention as we go through here is
03:43:24.760 something that you can't see and I meant
03:43:26.960 is our new volatile hotkey which is uh
03:43:29.399 control shift and that will allow us to
03:43:32.199 rotate around uh our controls around any
03:43:35.399 pivot so um let me take a look and show
03:43:38.600 you what that means
03:43:45.720 okay so here we have Electra and she's
03:43:48.960 just she's simple rig she's get just got
03:43:50.960 ik arms and legs she doesn't have any FK
03:43:53.319 in them um so typically if you wanted to
03:43:55.239 rotate the arms with the waist with the
03:43:57.520 ik they would just rotate around their
03:43:59.359 own axes or they translated around the
03:44:01.920 orientation that rigging set up for us
03:44:04.600 but now by holding control shift all you
03:44:06.960 now you can do you can rotate them as
03:44:08.560 groups together and you can translate
03:44:10.319 them as groups together as
03:44:12.840 well so this opens up a lot of
03:44:15.680 possibilities for posing and uh one of
03:44:18.279 the things uh that we'll do is I'm just
03:44:20.640 have a little display here um I just
03:44:23.319 have it a set called FK helpers um
03:44:25.680 they're not typical controls uh in a way
03:44:27.920 that they deform the rig or anything
03:44:29.479 it's just exposing the pivots for me to
03:44:31.439 use um as I rotate uh so I can use it to
03:44:34.880 rotate around so for example if we with
03:44:38.040 our normal ik um arm if I want to rotate
03:44:41.520 it uh move it up you would translate it
03:44:43.880 up you could rotate it the hand and then
03:44:45.920 you could translate it up and rotate the
03:44:48.120 hand that's typical ik kind of situation
03:44:51.600 but now by selecting the shoulder I can
03:44:54.000 rotate around that pivot I can rotate
03:44:55.880 around that pivot for the elbow now I
03:44:57.720 can rotate that around so effectively
03:44:59.880 I'm posing my I control in an FK Manner
03:45:02.880 and it's still just being an uh an ik
03:45:06.080 control so I have a set here just for
03:45:08.439 the legs just so quick really quickly to
03:45:10.600 be able to select things and I'm going
03:45:12.479 to just do the same thing as I select
03:45:14.159 that now I can use the hip uh the hip
03:45:17.159 pivot and I can rotate it out rotate it
03:45:20.520 across and I can do the same for the
03:45:22.120 knee and I can even uh use a pole Vector
03:45:24.960 that doesn't have a rotate on it but I
03:45:26.439 could still use that to rotate the ik
03:45:28.840 foot so you can get a lot of different
03:45:30.520 posing ways of posing things all while
03:45:32.960 still being ik and being able to pose it
03:45:35.279 wherever you want um as
03:45:37.640 normal this also allows us to move large
03:45:40.520 groups of controls around so just with a
03:45:42.600 set now I can invert Electra really
03:45:44.359 quickly and I can throw her arm down
03:45:47.040 still just with an ik and if we wanted
03:45:49.600 to balance her on our finger um what we
03:45:52.040 could do we got finger control so we
03:45:53.600 could turn those on and because it's a
03:45:55.080 control that means it's a pivot that
03:45:57.040 means we can uh rotate uh use that as a
03:45:59.680 pivot to rotate her
03:46:01.840 around so oh and you can also have the
03:46:04.880 handle down close by it so you can move
03:46:06.920 it closer so it's not so far away just
03:46:09.640 with your last selection and then we can
03:46:11.520 wrot a balance secture on our fingertip
03:46:13.760 and if we wanted to do it uh dangle her
03:46:15.920 by her foot all we have to do is select
03:46:17.760 the foot and now we can rotate it from
03:46:19.279 up there uh without any fancy switches
03:46:21.520 without any fancy setup uh in your
03:46:24.560 rig and you can translate and move it
03:46:26.920 but still when you don't use the
03:46:28.720 volatile hot key it just moves as
03:46:31.040 normal and so as you're posing you can
03:46:33.199 use uh ik just by posing it around but
03:46:36.359 then you can just select the elbow and
03:46:38.560 now you're posing it kind of in an FK
03:46:40.479 manner so lots of flexibility
03:46:43.279 there and now the next I want to do is
03:46:45.520 our new G key this will bring up a
03:46:47.399 little HUD for ourselves so if I select
03:46:49.760 the hand control for example you can see
03:46:52.439 all the values come up there I can use
03:46:54.120 my ladder now to adjust them and
03:46:55.840 fine-tune them if needed uh we can also
03:46:58.359 snap controls together we can copy paste
03:47:00.560 things all that stuff but um in this
03:47:03.319 case I'm just going to select everything
03:47:04.960 and just uh revert everything to default
03:47:08.080 so essentially um a rig has so many
03:47:10.760 pivots already in it when it's built and
03:47:13.680 an animator should be able to to use
03:47:15.159 them but uh what if you want to use a
03:47:17.920 pivot that's not part of the character
03:47:19.840 let's take a look at that
03:47:24.040 next okay so here we have just the
03:47:26.960 simplest of rakes it's just a point down
03:47:29.080 there just to position a chair
03:47:31.199 around so um but I want to do some more
03:47:34.000 with it so if we hold down B we now have
03:47:35.720 a radial menu that uh can allow us get
03:47:38.040 into our animation Tools in this case
03:47:39.760 I'm just going into a locator tool and
03:47:41.920 we could just drop down a locator here
03:47:45.520 and with this locator we have a few
03:47:47.040 other things that we could do with it
03:47:48.399 because it's not just going to be uh a
03:47:50.080 null there we can use the middle Mouse
03:47:51.920 button and by shift and middle uh we can
03:47:55.399 now change the shape for everything and
03:47:57.359 if you just uh use the middle Mouse
03:47:59.520 wheel now you can change the size as
03:48:01.279 well so you can really quickly an
03:48:02.560 animator can set up what they want in
03:48:04.439 this case I just put a couple of
03:48:05.640 locators down and now that uh now I can
03:48:08.199 go back out to animated and I can use
03:48:10.560 them as pivots so really easily I can uh
03:48:14.040 uh tilt the chair back back and tilt the
03:48:15.920 chair
03:48:16.800 forward so it's very straightforward
03:48:18.840 very simple um but what we want to do
03:48:21.399 now is add lecture to the chair and so
03:48:23.560 now elector sitting in the chair and
03:48:25.359 I've just set up a couple of sets for
03:48:26.960 myself a tilt back and a tilt
03:48:29.680 forward and just by isolating them I can
03:48:32.439 get the controls to show up and
03:48:34.399 selecting it now when I rotate I can
03:48:36.680 rotate Electro and the chair together
03:48:38.800 but it's not constrained at all they're
03:48:40.279 just completely separate it's just how
03:48:41.760 you're moving groups of controls
03:48:43.439 together so you don't have to deal with
03:48:45.439 the constraint there and I have a tilt
03:48:47.319 forward as well and in this case I just
03:48:49.319 didn't include the feet on it so they
03:48:51.120 stay flat on the ground but if I wanted
03:48:52.960 to include them for any reason just
03:48:55.120 shift select add them in so you can uh
03:48:57.880 quickly add and remove as
03:49:01.279 needed and so from here I just used this
03:49:04.080 and I just did a simple little animation
03:49:06.120 of lecture rocking back in the chair
03:49:07.680 standing up and sitting
03:49:09.520 down very straightforward and uh what
03:49:12.120 I'd like to do next is kind of look at
03:49:13.800 it doing a breakdown adding another key
03:49:15.600 in here so I see my two keys and what
03:49:17.720 I'd like to do so now's a good time to
03:49:20.040 take a look at our new animation sliders
03:49:22.000 and you can see there's too many down
03:49:23.399 there to talk about in the short amount
03:49:24.680 of time so I'll just go over a couple of
03:49:26.439 my favorites
03:49:27.520 personally and these are fully
03:49:29.199 customizable by the way you can decide
03:49:31.279 what and where those sliders go um in
03:49:34.319 this case I'm going to just shift them
03:49:35.880 to uh extra wide just so we could see
03:49:38.800 them a little bit better um for this
03:49:41.040 demo so now I have them here and I'm
03:49:44.040 just going to use blend to neighbor and
03:49:46.439 so I have my left key and the right key
03:49:48.080 and by selecting tilt back now I can
03:49:50.319 just drag it to the left favor the left
03:49:52.159 key favor of the right key if I hold
03:49:54.000 shift down I can uh overshoot the key as
03:49:56.760 well and just go past that um so really
03:49:59.880 quickly multiple groups multiple
03:50:01.960 characters lots of key groups uh and I
03:50:04.040 could just use a slider to move
03:50:05.279 everything together and the next thing
03:50:07.600 one I want to use is a blend to frame I
03:50:09.680 love this one because I could just blend
03:50:11.720 it to any frame I want in this case I
03:50:13.399 know electric sitting at frame and she's
03:50:15.159 standing at frame 50 so now we could
03:50:18.319 just make her stand up sit down stand up
03:50:20.319 sit down as much as we want anywhere in
03:50:22.560 between really quickly we've got uh uh
03:50:25.600 we've been able to get an extra pose
03:50:27.040 start our breakdown and we can continue
03:50:28.960 animating on from there so very handy
03:50:32.120 just to be able to use a simple slider
03:50:33.680 to move multiple uh controls around in
03:50:40.000 groups okay so one of the first things
03:50:42.479 animator does when they uh get a shot
03:50:44.720 assigned to them is they get gather
03:50:47.199 reference together in this case I just
03:50:49.520 went out back and I just shot a video of
03:50:51.120 myself just doing a pole thrust give
03:50:53.279 myself an idea of what that motion
03:50:54.960 should look like as I start blocking out
03:50:56.479 the shot but I wanted a second view uh
03:50:59.279 so I shot another view of myself uh just
03:51:01.239 on the from the side but I don't have a
03:51:03.319 two camera setup so obviously the timing
03:51:05.399 is not lining up you can see the PO the
03:51:07.560 thrust uh pull thrust isn't there so we
03:51:10.800 have a lot of options now so we can
03:51:12.560 actually uh trim our shot in there we
03:51:14.600 can change the start and end frame of it
03:51:17.120 but in this case I just sped up the the
03:51:19.040 shot and now we have that movement now
03:51:21.800 it's all lining up I have more
03:51:23.399 information for posing and starting my
03:51:25.279 animation from two different angles um
03:51:27.600 so really good quality of life because
03:51:29.960 uh it allows us to edit our videos uh
03:51:32.159 right in our
03:51:36.960 viewports all right so here's another
03:51:39.840 example of just sets and using our our
03:51:42.080 pivot so there's no constraints in here
03:51:43.920 at all this is just uh set up um like I
03:51:47.600 said with our sets and deciding what
03:51:49.279 pivot so really quickly I can just use
03:51:51.239 that one control and I can move all my
03:51:53.319 characters together again not having to
03:51:55.199 deal with any constraints or turning
03:51:57.159 things on or off really quickly we can
03:51:59.319 just pose out our characters uh very
03:52:01.680 simply and once we set a key on that we
03:52:04.239 could still go in everything's kind of
03:52:05.960 holding together and we could still use
03:52:07.760 our Sliders in between and as we go um
03:52:10.880 blending between them they all stay
03:52:12.840 connected um again without needing any
03:52:20.359 constraints here's another example um so
03:52:23.319 this is a five pivot setup I did
03:52:25.399 normally people you know you may get a
03:52:27.399 constraint and have driven and driver
03:52:29.479 and you may have a grab and release on
03:52:31.000 here in this case again I didn't want to
03:52:33.000 use any constraints um but what I can
03:52:35.680 still do is just uh with what I select
03:52:37.960 and with my last pivot is and now I can
03:52:39.800 move everything from the backand I can
03:52:41.960 move everything from the front hand I
03:52:44.920 can use the pole to move everything
03:52:46.560 around I can uh I have some locators
03:52:49.319 that are attached at the uh back and end
03:52:51.720 of it and I can use those again to move
03:52:54.080 everything if you're digging it in or
03:52:55.479 someone's holding the end of the pole um
03:52:57.760 and same with the back still using the
03:52:59.880 CLG uh we can just rotate everything
03:53:02.800 around um as well so instead of having a
03:53:06.319 really complicated setup of what's going
03:53:08.760 on for our constraint which could be for
03:53:10.359 this case and what's all happening um we
03:53:13.319 can go a little bit simpler and if I
03:53:14.880 wanted to do a grab and release instead
03:53:16.520 of needing to manage that all I do is
03:53:18.600 like my foot I just don't include that
03:53:20.560 control in it when I move it so now I
03:53:22.840 just edit the key when it's on and when
03:53:25.399 it's off I just don't include it in that
03:53:26.960 group very quickly you have a grab and
03:53:29.359 release without needing to manage
03:53:34.880 anything and so I've talked a lot about
03:53:37.359 not needing constraints so let's take a
03:53:39.399 look at an example of where I have so if
03:53:41.399 you see the screen left hand uh I've
03:53:43.800 just if it's plays yeah it's playing um
03:53:46.600 I've just deleted some keys so it's very
03:53:48.479 obvious that it's coming off the pole so
03:53:51.000 what do we want to do we want to put it
03:53:52.640 back on the pole obviously so if we just
03:53:54.399 go into our constraint tool um we select
03:53:56.920 our driven driver hit H and you can see
03:53:59.560 it's turned gray um so we know it's
03:54:01.399 constrained and now we have our hand
03:54:03.560 constrained to the pole and as we scrub
03:54:06.080 through it's all locked on but I want to
03:54:08.000 put this on the key on my actual control
03:54:11.080 and we can open up our uh constraint HUD
03:54:13.279 here and we a few options and we can
03:54:15.439 enable and disable the constraints so
03:54:17.680 just as you toggle it you can see where
03:54:18.960 it was where it's constrained when it
03:54:20.920 wasn't where it is so we just select
03:54:22.960 that control set a key on it and now
03:54:25.439 when we disable it we're locked on its
03:54:27.479 place exactly where it was so good we
03:54:30.479 could just go down a little bit further
03:54:32.720 uh to another key to do the exact same
03:54:34.960 thing so it's locked on and then we just
03:54:37.359 select the control we set a key on it
03:54:39.279 and then when we disable it it's locked
03:54:40.800 on space now we got our hand all locked
03:54:43.040 on perfectly but if you wanted to do it
03:54:45.319 every frame you may want it like very
03:54:47.239 close up and get it all locked on you
03:54:49.000 can just drag it out the timeline and
03:54:50.600 bake that range and now the with the
03:54:53.640 constraint disabled you don't have to
03:54:55.159 worry about the constraint anymore you
03:54:56.520 got the keys all on there if you need to
03:54:58.439 do any more animation so instead again
03:55:02.439 instead of uh having the constraints
03:55:04.840 being driving how the all this move is
03:55:07.600 uh happening instead I'm just using the
03:55:10.040 constraints to um kind of correct any uh
03:55:13.040 fixes that need to be done
03:55:16.399 all right let's go into some ragd doll
03:55:18.319 and some Dynamic motion that we have so
03:55:21.520 um for rag doll we'll just take a look
03:55:23.159 at adding uh complex motion onto
03:55:25.120 characters we're going to go over
03:55:26.720 recording Keys onto characters and
03:55:28.760 allowing animators to have control of
03:55:31.000 where those keys go um and in Dynamic
03:55:33.960 motion we're just going to go through
03:55:35.399 adding physics to your animation which
03:55:37.239 is very important sometimes um some
03:55:39.479 quick adjustments uh and changes that
03:55:42.040 you can do and to easily again easily
03:55:44.600 put the results back onto your
03:55:48.600 controls so here we just have a work in
03:55:51.239 progress uh shot that's going on just a
03:55:53.640 three jump with Electra and you can see
03:55:55.720 it's very rough still there's like
03:55:57.520 especially this there's lots of speed
03:55:58.960 ups and slow downs right there it's you
03:56:01.159 know just a work in progress going along
03:56:03.199 and you may notice at the bottom of the
03:56:04.760 screen there some colored lines and
03:56:06.439 these are our new animation bookmarks so
03:56:08.640 what you could do is uh you could set
03:56:10.600 them up I just set one up for each jump
03:56:12.120 and you double click in there and now
03:56:13.720 you can focus on that area of that you
03:56:16.159 want to animate on and you can jump
03:56:17.920 between the bookmarks really quickly so
03:56:19.800 you can go focus on one two three if you
03:56:21.640 want to just uh play those back and just
03:56:23.960 make sure that they are all working and
03:56:25.600 you can double click when it's out so
03:56:27.359 it's really good especially on a long
03:56:29.040 animation shot um to have a bunch of
03:56:31.560 them set up so you can quickly focus in
03:56:33.159 and you don't have to deal with that
03:56:34.239 whole long timeline and you can see we
03:56:36.239 have a bookmark editor here where you
03:56:37.840 can turn them on and off change color
03:56:39.399 change timing you can do that all there
03:56:41.279 as well um but you can also just do it
03:56:44.040 um
03:56:44.960 right in the toolbar so you can just
03:56:46.439 grab them and ship them as needed you
03:56:48.359 can grab the ends so you can retime them
03:56:50.520 do the all set up there so there's lots
03:56:52.439 of ways to do that either the bookmark
03:56:54.000 editor or right on
03:56:56.120 there so as I look at this I would
03:56:58.600 probably start working on the jump two
03:57:00.520 area I'd probably jump in there and
03:57:02.000 start focusing on it because that's the
03:57:03.920 roughest but let's go into Dynamic
03:57:05.840 motion uh because this will help us out
03:57:08.080 immensely instead of doing it by hand
03:57:10.080 and eyeballing it the whole time so as
03:57:12.439 we jump in there it's very simple to set
03:57:15.439 up what you the first thing you would do
03:57:17.840 is just in this case I'm just selecting
03:57:19.680 the cogg and I'm making that my center
03:57:21.680 of mass by hitting
03:57:23.080 H and now you can see that horrible
03:57:25.640 curve as the work in progress is really
03:57:28.239 not nice at all um but it's a good
03:57:30.479 representation of okay this is where we
03:57:32.319 were for it um the next thing we want to
03:57:34.560 do is we just want to set our takeoff
03:57:36.479 frame and you could do whatever frame in
03:57:38.000 this case I'm just using frame 24 I hit
03:57:40.359 H I start my motion and you can see the
03:57:42.840 gray um curve going on there and I just
03:57:46.159 set my end point that I wanted and now I
03:57:48.880 have a much better looking curve spacing
03:57:51.199 is all physically accurate built for us
03:57:53.920 I'm just going to do the exact same
03:57:55.239 thing with the second one my takeoff
03:57:56.920 frame and I'm going to pick my Landing
03:57:58.680 frame again now we get uh physically
03:58:01.840 accurate motion and spacing built for us
03:58:05.600 all while keeping the same keys in there
03:58:07.359 and not adjusting the keys in between
03:58:09.239 and so for the last one just doing the
03:58:10.640 same thing and I'll probably just do
03:58:11.920 yeah I'll do it on the the foot contact
03:58:14.880 there and I'll set my key there and now
03:58:16.880 we have all of our um animation as I
03:58:19.279 play it back you can see just with a few
03:58:21.760 clicks within less than a minute there I
03:58:24.479 have much much better motion rather than
03:58:26.199 having to handkey that and Eyeball it
03:58:29.120 but you can also see we could still make
03:58:30.479 creative changes that's not just the
03:58:31.840 result so if I want to raise up Electra
03:58:34.120 all throughout here if I want to change
03:58:35.640 their height at all in here I can just
03:58:37.720 grab these planes and now I can select
03:58:39.680 them and adjust her her in height so I
03:58:42.439 can change how she's I'm not locked into
03:58:45.040 what it was before and just the default
03:58:47.159 uh result from it I can do some creative
03:58:49.560 choices that uh we may want in there and
03:58:52.399 so now Again Play it through really
03:58:54.560 quickly we got the higher jump the
03:58:56.319 better spacing the physically accurate
03:58:58.720 uh arcs and we're good to go but
03:59:02.279 sometimes sets change on us and in this
03:59:04.680 case maybe a big block comes in the
03:59:06.800 middle of our jump and and this could
03:59:09.000 take us quite a while to redo by hand
03:59:11.199 but let's just take a look at it uh what
03:59:12.800 we do and all we have to do is select
03:59:14.600 these handles and now I can just shift
03:59:16.399 everything up and I can put lecture onto
03:59:18.399 that block and all the other motion all
03:59:20.680 my key frame in between stays there and
03:59:23.000 we still get all the physical accurate
03:59:24.760 and we could still do all the little
03:59:26.000 fine-tuning things like grabbing it and
03:59:28.199 you know little ficky things that an
03:59:30.199 animation supervisor may want to just
03:59:32.040 change to the last minute um and we can
03:59:34.319 get all that creative stuff in there so
03:59:36.840 really quickly we've uh improved the
03:59:39.720 motion physically it's now correct uh
03:59:42.880 we've been able to do cre creative
03:59:44.279 choices and we've been able to handle a
03:59:47.040 problem with our um ass set update so
03:59:50.279 now I want to get this back onto our
03:59:51.600 character and all I'm going to do here
03:59:53.399 is we have just update keys and this is
03:59:55.640 just going to take my existing keys that
03:59:57.159 I had in the rough animation that you
03:59:58.720 saw and it's just going to move them to
04:00:00.319 correct spots so now really quickly I've
04:00:03.359 just in a couple minutes in uh improved
04:00:06.199 this animation quite a bit and now I
04:00:08.279 still have just the exact same keys that
04:00:09.880 I had there you can still bake it out
04:00:11.399 every frame or every second there's lots
04:00:12.920 of options in there but I like the
04:00:14.520 update key one um since it just keeps
04:00:17.319 where it my spacing that I had before
04:00:19.640 but uh where it should
04:00:24.279 be and so we'll just look at it again
04:00:26.760 just so you can see the very rough
04:00:28.479 motion here especially in this area you
04:00:30.319 can see all that stuttering in there
04:00:32.040 it's uh you know just eyeballed hand and
04:00:35.120 now um and now the result just a couple
04:00:38.319 of minutes later with all the changes
04:00:40.399 now jumping on another block and you can
04:00:41.760 make these jump over the buildings too
04:00:43.279 it's very you just pull out where that
04:00:45.040 is and all the animation would remain
04:00:46.960 the
04:00:48.439 same all right so here's another example
04:00:50.800 we're in London so I had to do a
04:00:52.640 football shot not soccer football um and
04:00:56.560 I just stepped in uh did some steep
04:00:58.479 animation here where I just have uh
04:01:01.239 Electra just kicking the ball around uh
04:01:03.600 just with the
04:01:06.159 contacts and as I go into um start
04:01:09.560 working on the animation for lecture you
04:01:11.640 can see here I've worked on lecture
04:01:13.279 started doing that but I haven't touched
04:01:14.439 the ball at all it's just hitting its
04:01:16.000 context and it's just interpolating uh
04:01:18.439 to where it's uh going so again this
04:01:21.359 could take a long time hand hand keing
04:01:23.760 trying to guess how high it should go so
04:01:25.359 let's go into Dynamic motion and uh let
04:01:28.040 it help us out doing the exact same
04:01:30.080 thing setting the starts and ends here
04:01:32.680 now really quickly I get physically
04:01:34.720 accurate motion built for us just based
04:01:36.760 on its contacts and um and now we have
04:01:39.520 our kicking the ball around which is
04:01:41.199 great but again let's get this onto our
04:01:43.600 care onto our control so in this case
04:01:46.880 I'm just going to bring in our graph
04:01:48.000 editor just so we could take a look here
04:01:49.600 and you can see our Ty and when I look
04:01:51.720 at it here you can see the contact keys
04:01:53.279 and how spiny that motion was so we'll
04:01:56.000 bring up our baking tool
04:01:57.680 again uh and in this case um I'm going
04:02:01.279 to use bake essential keys and this will
04:02:03.560 just give us the fewest Keys needed to
04:02:05.439 represent that motion so you see the
04:02:07.640 spiny curve and now we have a really
04:02:09.520 nice looking curve with very simple Keys
04:02:11.880 ready to animate and go without having
04:02:13.920 to bake every frame uh
04:02:16.319 together and so uh again really quickly
04:02:19.760 just with a few clicks now we have uh
04:02:22.640 all that splining motion but now we have
04:02:24.479 now the nice bouncy kicky motion um on
04:02:27.359 our keys ready to go and while we're
04:02:29.439 here with the graph editor we've had a
04:02:30.800 lot of improvements here and here's just
04:02:32.239 a few so now when you select your keys
04:02:34.319 you use the middle Mouse button you move
04:02:36.239 it vertically it will constrain it in
04:02:38.040 value and if you move it horizontally
04:02:40.359 first it'll constrain it in time we also
04:02:43.359 have our vertical vertical adapt on here
04:02:45.040 so if you move um you move it out of
04:02:47.080 frame it will readjust for you and I
04:02:49.520 really like this one because it saves so
04:02:51.840 much time when you're uh doing curve
04:02:53.560 management because you can zoom in you
04:02:55.399 can pan across you can add controls you
04:02:58.120 can add curves it will always keep it
04:03:00.120 framed so when you're doing that curve
04:03:01.560 and Key Management you can really
04:03:03.319 quickly go and see where things uh uh
04:03:05.439 need to be adjusted here's another one
04:03:08.159 um in this case this happens a lot
04:03:10.000 there's overlapping keys and I just want
04:03:12.040 to use TXS but it could be kind of
04:03:13.920 tricky sometimes to just grab the keys
04:03:17.159 on the curve that you want so now you
04:03:18.760 can just grab that curve you hold down s
04:03:21.960 and when you drag it over it'll only
04:03:23.520 select the keys on that
04:03:25.319 channel and for those that like to use
04:03:27.399 tangents and bezier handles for
04:03:29.359 adjusting the curves we still have those
04:03:30.800 but we have another tool here to try out
04:03:32.600 uh curve pulling so when you just now
04:03:34.600 you can just select right on that curve
04:03:36.080 and just stting adjusting it just by
04:03:37.760 pulling um so that would be interesting
04:03:40.600 to give a go but for me I usually just
04:03:43.040 use Auto selecting everything and
04:03:44.920 keeping it on auto
04:03:50.359 slope and again so we'll just go through
04:03:53.399 really quickly you can see this spiny um
04:03:56.720 little motion just going to the
04:04:01.000 contacts and really quickly now we get
04:04:03.840 the really nice motion with very little
04:04:05.960 effort still uh fully keyable for the
04:04:08.479 animator since we have all our keys
04:04:10.120 right on
04:04:12.080 it all right so let's take a look at
04:04:14.479 ragd doll
04:04:16.319 now so in this example um white Electra
04:04:19.960 the top Electra I have barely done any
04:04:22.000 animation I've just moved her up and
04:04:23.199 down and started the throw you can even
04:04:24.600 see the hands intersecting with the leg
04:04:26.640 and there's very little motion on here
04:04:28.880 so let's see what ragd doll can do it
04:04:30.560 for us so with our ragd doll set up you
04:04:33.479 can see it here and um I'm just going to
04:04:36.680 open up our HUD and just uh toggle
04:04:39.319 offset so now we could see these two
04:04:41.720 together and see what's happening and so
04:04:44.439 with our ragd doll setup that we've got
04:04:46.600 as I press play you can see that the
04:04:48.120 hands no longer intersecting at all we
04:04:50.120 got some motion on now on the legs and
04:04:51.840 the head and the arms and um we're ready
04:04:55.080 to go and you can see if you wanted to
04:04:56.560 change anything you just select the part
04:04:58.000 of the rig and you can uh hold G and now
04:05:00.359 you get your uh HUD where you could set
04:05:03.040 your stiffness your dampening all the
04:05:05.520 things when it's uh turning on when it's
04:05:07.399 turning off so now we have our motion we
04:05:09.479 got the throw the toss and hitting into
04:05:11.600 the chair and all that nice detail again
04:05:15.000 um now we want to work on getting this
04:05:16.920 onto our character we could do this
04:05:18.640 several ways and one of the ways it's
04:05:20.479 doing is just selecting what controls
04:05:22.120 you want to put on so I just have a set
04:05:23.960 here which is just the arms legs and
04:05:25.760 head and if I go down uh you can see I'm
04:05:28.720 just going to start recording poses and
04:05:31.279 I don't want to bake it every frame I
04:05:33.040 have my key set up the way I prefer to
04:05:35.439 do it so I just want to update them and
04:05:37.600 now just as I go through the keys now
04:05:39.760 you can see my controls are being
04:05:41.359 updated uh based on the ragd doll uh
04:05:44.600 result and I don't have to go all the
04:05:46.560 way I'm just doing it on the keys that I
04:05:48.319 want to do it on and so I could stop the
04:05:51.159 recording and um what we now have that
04:05:54.479 rag doll very sparse keys on there
04:05:57.359 really easy the way I would like to uh
04:05:59.600 continue animating with it on and we
04:06:01.640 have no more intersection and now we
04:06:04.000 have some uh movement on the foot so
04:06:06.279 good spot for me to start going from
04:06:07.800 there but I want to get all this nice
04:06:09.640 tossing and throwing and all the detail
04:06:11.560 into the chair as well it's essentially
04:06:14.199 the same thing and you can see here I've
04:06:16.040 just actually jumped into a bookmark so
04:06:17.760 now we could just focus on that
04:06:20.960 area so um I'm going to just do the
04:06:23.640 exact same thing except I'm going to
04:06:25.279 select a different set that has more
04:06:26.760 controls um in it and I could do the
04:06:29.199 chair at the same time but I'm going to
04:06:31.000 just show you as an example doing it
04:06:32.760 separately so the the exact same thing I
04:06:35.479 could start recording poses and the
04:06:36.840 thing I love about this is I don't have
04:06:38.279 to use the whole result of the rag doll
04:06:40.560 if I just see a few poses in there I can
04:06:42.520 just grab these if I that's a key pose I
04:06:44.520 like that's a key pose I like that's a
04:06:46.040 key pose I could just stop there and now
04:06:48.040 I can continue animating without having
04:06:49.720 to worry about all that extra data that
04:06:51.439 comes
04:06:52.319 along but in this case we do have the
04:06:54.600 collision with the chair and um and uh
04:06:57.560 lecture so there's a certain area I'm
04:06:59.760 like let me just make sure I get every
04:07:01.399 frame on there just to get all that
04:07:02.920 detailed motion and so if I just hold it
04:07:05.120 down and drag across you can see it's
04:07:06.960 giving me um recording every frame you
04:07:09.520 can also hit play to do the same thing
04:07:12.120 so I just stopped a little bit early cuz
04:07:13.600 I plan on doing some animation and I
04:07:15.080 could just set a key at the end but in
04:07:17.040 this case uh I want to have it just
04:07:18.760 matching the whole way through so I'm
04:07:20.000 just going to again drag all the way
04:07:22.520 through and now really quickly if you
04:07:24.640 look at the two of them we've just
04:07:26.119 recorded all the ragd doll motion onto
04:07:28.840 our characters controls um and except
04:07:32.399 for the chair because I decided to do
04:07:34.000 this separately so let's do the chair
04:07:36.600 now and as we turn on the chair because
04:07:39.920 we don't need all those keys that
04:07:41.439 Electra needed as she's flying through
04:07:43.000 the air
04:07:44.000 now we could do the chair separately so
04:07:45.399 we don't again don't need all that extra
04:07:47.119 data let's just do it right before um
04:07:49.159 the contact and now we could just drag
04:07:50.960 it on there again every frame just
04:07:52.479 because I want to get all that detailed
04:07:54.840 motion and so stop recording and now
04:07:58.439 between the two of them we have um
04:08:01.080 gotten all the motion that we want and
04:08:03.399 that we'd like to do and we could start
04:08:05.399 either using that or um just right as is
04:08:08.800 or start continuing animating if we want
04:08:11.800 it so let's just go back out to
04:08:16.560 animation and there we go so what this
04:08:18.960 has allowed us to do is it allowed us to
04:08:21.080 key what characters we want what
04:08:23.199 controls we want when we want those keys
04:08:25.920 and how dense we want those keys so it
04:08:27.640 allows a lot of flexibility to instead
04:08:30.159 of the default let's Brute Force bake
04:08:32.680 everything on every character and then
04:08:34.159 having the animator having to go through
04:08:35.560 and clean that up they can decide it uh
04:08:38.439 as they go
04:08:43.640 and so again here's the uh here's here's
04:08:46.960 the straight out of the rag doll just by
04:08:48.800 recording it on so flopping into the
04:08:51.960 chair and here's one where I just did a
04:08:54.319 little bit of Animation based on I
04:08:55.800 turned her head a little bit just added
04:08:57.399 a few things and instead of flopping I
04:08:59.399 made her sit up so really quickly you
04:09:01.239 can just adjust it um and quickly get
04:09:04.080 the ragd doll motion and then use it to
04:09:05.680 animate for
04:09:07.680 yourself and finally you can see here we
04:09:10.840 have our um three characters
04:09:14.239 and I just added ragd doll to it um with
04:09:17.760 a lot of the other tools that we Ed
04:09:19.479 there and
04:09:22.119 um and it's really quick to be able to
04:09:24.600 will let's play again oh well all right
04:09:26.920 um we'll just end it there then uh so
04:09:30.119 thank you very much
04:09:44.920 no no no questions
04:09:49.640 questions no questions
04:09:53.319 next seriously no
04:09:57.840 questions oh
04:10:03.199 yep can't go through there
04:10:15.119 hi um those quick locators like
04:10:18.080 temporary locators that you use to
04:10:20.159 change the pavot can you uh place them
04:10:22.359 into an animated object or they're going
04:10:25.199 to be just where you position them at
04:10:27.600 first and that's it uh the locators for
04:10:30.000 the chair and everything you yeah yeah
04:10:31.640 yeah oh no uh because with the pole one
04:10:35.000 uh I'm not sure I mentioned it but um
04:10:37.000 the locators that are at the end were
04:10:38.960 attached to the pole so that they could
04:10:40.279 be there as well so um so you can move
04:10:43.640 it you you'll have to see like play
04:10:45.560 around to see cuz if you're moving it it
04:10:47.680 depends how you want to do it but yeah
04:10:49.479 and you can actually chain those
04:10:51.000 together I think uh in Esther's one she
04:10:53.319 shows putting locators together so you
04:10:55.199 can build a little FK locator thing so
04:10:58.080 that you could do things as well and use
04:10:59.960 them around so um you should be able to
04:11:02.880 use them at like wherever you want the
04:11:05.640 experiment with them I think that's
04:11:07.040 that's the biggest thing a lot of this
04:11:08.279 stuff I was like let me try this and see
04:11:10.239 how it turns out um but yeah you should
04:11:12.399 be able to animate them uh have them
04:11:15.399 constrained to other objects have them
04:11:16.880 just in space or uh however you want to
04:11:19.159 do it so thanks great
04:11:24.359 too any anyone
04:11:29.920 else okay thanks laen well thank you
04:11:32.479 very much
04:11:33.600 [Applause]
04:11:36.440 [Music]
04:11:40.439 everyone hello
04:11:42.239 everyone thank you for being here let's
04:11:44.960 get this going so I realize it's the
04:11:48.119 only slide with a picture of the speaker
04:11:50.760 but alas so I'm Masta I'm a character t
04:11:54.159 with side effects and on screen is my
04:11:55.880 very sort of short brief history in the
04:11:58.080 the CG field I started in 2016 at
04:12:00.640 brother University of applied sciences
04:12:02.560 then end of that 2019 I joined side
04:12:05.159 effects labs in La for an internship and
04:12:07.319 after that I joined the character team
04:12:08.880 R&D where I been working with KS ever
04:12:11.800 since so this presentation is going to
04:12:13.920 be about rag dolls so Warren showed uh
04:12:16.279 just in the previous one some rll
04:12:18.359 results that he's got and he also showed
04:12:19.840 Dynamic motion and how he set up Dynamic
04:12:21.479 motion of course over rag doll he kind
04:12:23.319 of skipped a bit because rag doll is a
04:12:24.880 bit more complicated to set up than
04:12:26.520 Dynamic motion because it involves all
04:12:27.920 the body parts so that's why we sort of
04:12:29.560 split things up so in this one we're
04:12:31.359 going to have a look at uh his scene
04:12:33.520 again but this time we're going to dive
04:12:35.479 into actually what goes into setting a
04:12:37.680 ragal for this particular scene and not
04:12:39.359 so much about what he did because he
04:12:40.920 obviously already talked about that so
04:12:43.439 to reiterate what what's the rll
04:12:45.720 component in this scene here's again the
04:12:47.720 scene with no rag doll where he just Wen
04:12:50.159 just hand keyed some some bits on the
04:12:52.880 the white character and then as we apply
04:12:55.279 the actual rag doll onto the same
04:12:57.119 character we see some uh collisions
04:12:59.600 going on and then the actual throw off
04:13:01.560 with the character colliding with the
04:13:02.760 chair so that's the actual like Rog
04:13:04.880 section and that's what we're going to
04:13:05.880 be looking at
04:13:06.960 today so let's start with the data
04:13:09.159 because we have this scene of like three
04:13:10.920 characters like two characters basically
04:13:12.279 in a chair which is entally 3 but what
04:13:14.080 exactly how exactly does this look like
04:13:16.119 and what can we do with it to to
04:13:17.720 configure it for rll so here's the H
04:13:21.080 interface I'm going to go uh window by
04:13:23.239 window so it's very clear we have here
04:13:24.760 on the left um a file swop so our scene
04:13:28.680 has been configured and then exported as
04:13:30.040 a pgo file it's a bunch of pack
04:13:31.720 Primitives I'm going to touch on that in
04:13:32.920 just a second we basically want to bring
04:13:34.520 in our scene because already been set up
04:13:36.119 for us by somebody and we want to use
04:13:38.439 the same data uh to configure our
04:13:40.399 rectals this currently has no animation
04:13:42.600 and that's fine cuz we don't need that
04:13:44.600 for rag doll while Warren works on the
04:13:46.680 hand key animation or blocks out his his
04:13:49.560 shot we can actually start configuring
04:13:51.479 stuff already this is how the data looks
04:13:54.040 in the viewport which perhaps doesn't
04:13:56.040 tell you that much we have one character
04:13:58.159 presumably a chair and a bunch of white
04:14:01.080 lines which we're not going to talk
04:14:03.000 about there the Apex
04:14:04.960 CS rig tree then this is where the
04:14:07.920 actual data gets listed nicely for us
04:14:09.920 okay because you know if you go back to
04:14:11.760 this where the ugly White Lines doesn't
04:14:14.040 help us very much but when we look at
04:14:15.560 the actual structure of the data it's a
04:14:17.439 lot easier for us to see exactly what
04:14:18.680 we're working with so looking by the
04:14:20.640 indents there let me bring this a bit
04:14:22.399 higher on screen we see we've got three.
04:14:25.040 Char stuff which Esther talked about
04:14:26.760 before as being characters under each of
04:14:29.239 this do Char we have a base rig shape
04:14:31.920 and scale the base is just the random
04:14:35.000 default name so it doesn't have to be
04:14:36.680 that the extensions outline what that
04:14:39.080 data is so we see our chair is an actual
04:14:42.119 character and we've got a push E and A
04:14:44.119 push R the push e being the white
04:14:45.920 character the push R being the brown
04:14:48.760 character and what we're interested in
04:14:51.199 for each characters are a rig so the
04:14:53.600 Apex graph a shape so the skin right
04:14:56.279 your classic skin that you sort of
04:14:58.479 weight your skeleton too and a skeleton
04:15:00.760 which you know if you know K effect a
04:15:02.159 little bit it's basically a kect
04:15:03.840 skeleton right so we've build the
04:15:05.000 characters like this this is what we
04:15:06.520 have to work with so then we can have a
04:15:08.279 look at uh using this data to get the
04:15:10.960 Ral stuff going
04:15:13.359 if you're not familiar with ragol um I'm
04:15:15.359 going to try in like 5 seconds to
04:15:17.000 explain what ragol needs so it uses an
04:15:19.680 RBD solver so red by Body Dynamic solver
04:15:22.600 which means it looks for rigid bodies
04:15:24.600 obviously a character usually is organic
04:15:27.119 right so you going to have some skin
04:15:28.439 that's being deformed by some joints uh
04:15:30.640 that have been weighted to that skin so
04:15:32.920 that's usually not it's not easy to
04:15:35.880 separate that into clear segments and
04:15:37.640 sort of cut the skin just from that data
04:15:39.720 so we need an extra step inserted in
04:15:41.439 there that would allow us to create
04:15:43.119 these rigid body shapes for our
04:15:44.760 character that then we can send to the
04:15:46.239 solver so it can then um simulate on top
04:15:49.520 of and for that we have a soap called
04:15:52.080 ragal Collision shapes so this soap has
04:15:54.159 existed in the 195 as well but we've
04:15:56.880 sort of reworked it a bit and made it
04:15:58.359 hopefully uh easier to use and faster
04:16:01.760 you can see on screen the parameter
04:16:03.439 interface um we're not going to be
04:16:05.199 looking at that too much but I just want
04:16:06.960 to point out that I really like it
04:16:09.040 because it's clean and it doesn't have a
04:16:10.800 lot of things like you used to which I
04:16:13.080 keep it as narrow as possible and we
04:16:14.960 only want to sort of link up some of the
04:16:16.800 things that we need in terms of data in
04:16:18.239 the network View and then we want to
04:16:20.000 move on from that and work in the
04:16:21.800 viewport uh so that's just defaults in
04:16:24.080 terms of inputs we have here two unpack
04:16:26.600 folders so one is Pusher scale one is
04:16:28.479 Pusher skin we're going to be setting up
04:16:30.680 The Pusher character so the brown one
04:16:32.319 for this example but the process is the
04:16:34.359 same for all the unpack folder in this
04:16:37.359 case looks at our file so the the file
04:16:40.800 swap which is the scene and extract ra a
04:16:43.359 particular data from a particular path
04:16:45.760 okay so you can think as the data is
04:16:47.439 basically my pusher. Char is a packed
04:16:49.760 primitive underneath pusher. Char we
04:16:52.239 have three other packed Primitives
04:16:53.600 that's of been packed within so we have
04:16:55.159 a skeleton that's packed a skin that's
04:16:56.960 packed and a rig that's packed okay
04:16:59.080 unpack folder we look at pusher. charar
04:17:01.399 so it looks at that pusher. charar
04:17:03.159 packed primitive then Dives inside that
04:17:05.520 primitive and looks at base. scale
04:17:07.439 primitive gets that for us and unpacks
04:17:09.840 the result and this gives us the actual
04:17:11.880 skeleton as a geometry object that you
04:17:14.800 know we're used to from KS and all the
04:17:16.880 like and the same for the skin so we're
04:17:19.840 doing the same thing can see the the
04:17:21.359 path over there except this time we're
04:17:22.840 extracting the dot shape not the dot
04:17:24.520 scale and I'm getting the skeleton in
04:17:26.399 the shape here because Ral Collision
04:17:27.760 shapes works best with uh these two
04:17:30.760 inputs then we can get rid of all of
04:17:32.680 that and go straight to the state and
04:17:33.960 this is what we're getting so the note
04:17:36.880 uses the skin and the skeleton to figure
04:17:38.960 out what parts have been uh weighted to
04:17:42.600 each each do the joint and then build
04:17:44.239 some convex holes from that and then it
04:17:46.359 gives us some nice abilities to
04:17:47.800 manipulate those shapes in the state so
04:17:49.359 here you can see I'm merging some shapes
04:17:52.040 with their parent so I don't want finger
04:17:53.600 like a shape for each uh finger so I'm
04:17:55.760 just going to collapse those into one
04:17:57.520 shape that is uh connected to the hand
04:17:59.840 itself and we also have options for
04:18:01.800 showing stuff like intersections so you
04:18:03.960 know things that could potentially
04:18:05.199 create problems in the solve later on
04:18:07.359 that we can address uh ahead of time so
04:18:10.119 the red thing there shows us where two
04:18:13.520 shapes are intersecting which again
04:18:15.680 could cause some issues so I can go in I
04:18:18.040 can transform a shape I can change shape
04:18:21.000 I can remove a shape you know all those
04:18:22.920 sort of basic operations that you would
04:18:24.439 expect when working with
04:18:26.880 geometry so each of these shapes
04:18:28.960 represents a packed A Primitive as well
04:18:32.239 and as you can see you know has
04:18:34.000 separated our character or our skin
04:18:35.960 rather really well into very clear parts
04:18:37.800 right so you can see they're all colored
04:18:39.080 differently so it becomes very clear you
04:18:41.479 know what's my upper arm what's my low
04:18:42.920 arm what's my hand etc etc and this is
04:18:45.640 what the solver likes to see when
04:18:47.239 attempting to simulate
04:18:53.840 something next
04:18:57.000 up so this was sort of the the first
04:18:59.239 step now back to the 5sec ragall Crash
04:19:01.520 Course once we've got the Collision
04:19:03.479 shapes set up then when we can give
04:19:05.439 those to the solvers of course to the
04:19:06.640 solver which will take it as a whole and
04:19:08.720 just make it sort of fall to the ground
04:19:09.960 as like a statue sort of thing but
04:19:12.080 because we're working with characters we
04:19:13.640 also want to make make sure that we tell
04:19:15.720 the solver what the range of motion is
04:19:17.680 for each of the shapes right because the
04:19:19.319 rack doll as we've seen also in in
04:19:20.800 Cameron's video um you know it's
04:19:22.680 supposed to basically be a rapor like
04:19:24.319 fall down and have of each of the the
04:19:26.359 shapes like rotate uh around their
04:19:28.680 parents to create the sensation of
04:19:31.040 motion so that's an extra data that we
04:19:33.359 need to configure so now we have the
04:19:35.000 shapes so we can go to the next step
04:19:36.840 which is basically for each shape i e
04:19:39.000 joint because they're sort of
04:19:40.800 correlated um we want to set that range
04:19:43.880 of motion and for that we have a
04:19:45.920 configured joint limit soap so we used
04:19:48.479 to have configured joints we still do
04:19:50.560 that had limits uh as well as some other
04:19:53.000 stuff for the physical full body ik like
04:19:55.399 weights and local Center of mass we've
04:19:57.359 decided to split off into a configur
04:19:59.520 joint limits that's a specialized node
04:20:01.080 for dealing only with rotation and
04:20:02.399 translation limits mainly to again keep
04:20:04.720 the parameter interface a bit more
04:20:06.119 narrow and cleaner and also to allow us
04:20:08.840 to do some more interactive work that
04:20:10.600 are tailored specifically for limits
04:20:13.319 in terms of wiring it up we just
04:20:15.239 basically plug the first input of our
04:20:17.239 rectal Collision shapes into the first
04:20:18.880 the first output sorry into the first
04:20:20.159 input which is the skeleton and that's
04:20:23.000 what we're going to be operating on
04:20:24.080 we're going to be setting some
04:20:24.960 attributes on the skeleton via this node
04:20:27.800 now something to point out here is that
04:20:30.000 for AAL Collision shapes we were able to
04:20:31.800 get the skin and use that as our stting
04:20:33.560 starting point from the shapes right
04:20:34.880 because going in and you know for each
04:20:37.119 joint trying to create a new shape by
04:20:38.800 hand is tedious so the solution for the
04:20:41.560 shapes is using the skill and getting
04:20:43.319 the the capture data from that to build
04:20:44.880 the shapes for the limits however we
04:20:46.960 don't we can't use the skin obviously so
04:20:49.720 as an alternative what we decided to do
04:20:52.279 was to provide a motion clip input which
04:20:55.159 if you know you know roughly what a
04:20:56.800 motion clip is a bunch of poses over
04:20:59.520 like a bunch of packed poses basically
04:21:01.119 over a timeline so it represents an
04:21:03.119 animation that's been stashed out right
04:21:05.439 so it's no longer time dependent and
04:21:07.439 that means that we can have like you
04:21:10.000 know an x amount of poses uh stored as a
04:21:13.439 a stashed geometry which each pose you
04:21:15.840 know having a different range of motion
04:21:17.319 for each of the joints right because
04:21:18.560 it's that's basically an
04:21:20.600 animation so that's a great way to get
04:21:23.560 some defaults for our limits but of
04:21:25.359 course you know where do you get the
04:21:26.359 motion clip from so if you're lucky
04:21:28.680 enough to have like a kisten clip or
04:21:30.479 something like that in house where you
04:21:31.600 can retarget your cisen clip to your
04:21:34.319 character skeleton that's great you
04:21:36.040 could use that if not not we've decided
04:21:39.399 to include an example file so you can go
04:21:41.359 under the help card of the configure
04:21:43.279 joint limit sub and then we have a um an
04:21:46.920 HDA which you can load into your scene
04:21:49.319 and this one has within it a few things
04:21:51.720 including a stashed motion clip that
04:21:53.720 Warren helped us animate so it
04:21:55.600 represents a sort of a basic range of
04:21:57.199 motion for a particular character like a
04:21:58.920 bipad so you could just use that as a
04:22:01.119 starting point we also show some tips
04:22:03.159 how to pose your character and get the
04:22:04.840 range of motion uh configured by
04:22:08.600 yourself so that's what I did here I
04:22:10.840 just loaded that file and I copied that
04:22:12.800 Stash from within that file and paste it
04:22:14.720 here which is the motion clip so in my
04:22:17.680 case I'm lucky because we've configured
04:22:19.319 the motion clip on the same mannequin
04:22:21.239 character but in case you have a
04:22:22.600 different character which you probably
04:22:24.000 will uh we also have a very simple
04:22:25.920 retargeting Network included in an
04:22:27.319 example file so you could just use that
04:22:29.520 in order to get the motion clip sort of
04:22:31.399 transferred over to your own
04:22:33.399 skeleton and this is how the that motion
04:22:36.119 clip looks like that's basically the
04:22:37.359 ranges of motion that uh weren't
04:22:39.359 configured for us right it's just a
04:22:40.560 bunch of poses there's no interpolation
04:22:41.880 we don't care about that we just care
04:22:43.560 about the actual poses themselves to get
04:22:45.239 the values out of
04:22:47.720 those so once that's done back to the
04:22:51.000 viewport so for limits there's not a lot
04:22:53.319 that we can do right now because you
04:22:55.520 know a limit looks like this um which is
04:22:59.000 you know not really very clear as to if
04:23:02.359 it's good or not for stuff like elbows
04:23:04.439 and knees it's it's a bit easier to
04:23:06.000 figure out because you know we know
04:23:07.399 roughly how a knee or an elbow is
04:23:09.680 supposed to rotate so we can just sort
04:23:10.880 of check that the motion CLI did
04:23:13.319 something we would expect for those
04:23:14.800 areas but for all the rest you know as
04:23:17.239 long as there is something there and
04:23:18.600 looks reasonable we're good to go for
04:23:21.239 now we can return back to this step a
04:23:23.560 bit later once we have some motion so we
04:23:25.399 can actually test against
04:23:32.080 that that's what I said about not making
04:23:34.399 lot of
04:23:39.560 sense okay so these are the two dat data
04:23:42.640 parts that we need to get the r doll
04:23:44.399 started um I want to Al point out here
04:23:47.399 really quickly that the we still have
04:23:49.199 the rack doll inops so what we had used
04:23:51.080 to have in 195 for KFX uh we also have
04:23:54.080 this now new rag doll tool for the Pack
04:23:56.760 character format they are both were
04:23:58.760 great they both are much faster so we
04:24:00.840 still have the ragal solver that works
04:24:02.640 with the same notes that I just shown
04:24:04.119 here but for this example I'm going to
04:24:06.239 stick with the packed character format
04:24:07.800 because it's sort of the new the newest
04:24:10.399 thing so once we've got stuff configured
04:24:12.880 I want to put it back into our scene and
04:24:14.960 to do that we use a pack folder so
04:24:17.119 basically the the principle is the same
04:24:19.119 this is kind of a brother or a cousin or
04:24:20.520 whatever of the unpack folder where I
04:24:22.800 plug my scene into the first input of
04:24:24.960 the node and you can see up there parent
04:24:27.040 folder here we've got pusher. Char right
04:24:30.680 so I'm looking again I'm telling the
04:24:32.000 node please get that Pusher character
04:24:34.479 get that packed primitive for me because
04:24:36.000 that's the one that I want to add stuff
04:24:37.760 to and then there we've got that
04:24:39.640 multiarm which basically is connected to
04:24:41.840 these input down here so it's one
04:24:44.359 multipart entry per one input in the
04:24:46.880 same order right so you see the first
04:24:48.359 one as being our skeleton the second one
04:24:50.680 being as the Collision shapes and for
04:24:53.880 the skeleton we know it's called base.
04:24:55.479 scale and I want to match the name here
04:24:57.359 because I want to overwrite my skeleton
04:24:59.600 I haven't actually modified it just
04:25:01.399 added an attribute for the limit so I'm
04:25:03.199 happy to overwrite what was already
04:25:04.880 there if you don't want to you can have
04:25:06.840 a different skeleton to use just for rag
04:25:09.439 doll but in this case it was unnecessary
04:25:12.680 and then for the shapes I just named
04:25:14.399 them ragal collision and didn't really
04:25:16.239 give them an extension uh you can if it
04:25:18.600 helps your workflow you can do dot shape
04:25:20.479 or something similar it doesn't really
04:25:24.159 matter afterwards we can do our first
04:25:26.439 test so I have a a SE animate dropped
04:25:29.080 down here which as we've been shown
04:25:31.279 before is the place where you want to
04:25:32.800 sort of animate and you know you can add
04:25:34.760 things to your character which you know
04:25:36.319 might get stored out like the rag doll
04:25:38.840 um so it's a good place to do the first
04:25:40.920 test because of course we can save our
04:25:42.279 configurations for later
04:25:44.880 use and then we go into the the Apex
04:25:47.479 animate State I go straight to rll
04:25:49.479 because that's what we're working on
04:25:50.920 today and you can see there's nothing
04:25:53.239 here yet just the ground plane and then
04:25:55.279 I press h to add a new ragal character
04:25:58.000 and now you're going to be sort of
04:25:58.840 swarmed with a bunch of prompts which
04:26:01.359 might look very confusing but I'm going
04:26:03.399 to explain them uh in just a second I'm
04:26:06.239 not going to try and match the speed of
04:26:07.439 this just look at how many there are and
04:26:09.800 think oh my God
04:26:16.680 this one is pretty probably the only one
04:26:18.080 that's
04:26:25.040 clear okay great so what just
04:26:27.920 happened we don't want to get any um we
04:26:31.920 don't want to make any assumptions
04:26:33.080 basically I think it's sort of the the
04:26:35.600 summary here so when you create a new
04:26:37.119 rag doll character you have the data in
04:26:39.119 your scene right but the rag doll itself
04:26:41.040 doesn't exist so we need to tell the rag
04:26:43.439 doll tool what sort of pieces of data
04:26:46.680 where to look for rather the pieces of
04:26:48.600 data that it needs in order to build
04:26:50.760 what we expect to see so in those
04:26:52.600 prompts let's just play this back again
04:26:54.479 because now maybe it makes a bit more
04:26:55.840 sense so in those prompts we can see
04:26:58.399 that the first one gets uh is something
04:27:00.960 like in the lines of selecting the
04:27:03.359 skeleton so select source skeleton so we
04:27:06.080 go to The Pusher which is our Brown
04:27:07.720 character and we get get that skeleton
04:27:09.439 of that character good then tell me what
04:27:11.760 the Collision shapes are we just added
04:27:13.640 them so they're under Pusher because we
04:27:15.720 just did that we select those then
04:27:17.920 Channel prims press accept to create new
04:27:20.520 I'm going to touch this in a second we
04:27:21.800 don't have any uh yet so I'm going to
04:27:23.600 click accept and both for the motion
04:27:25.159 clip then we name our rag doll that's
04:27:27.359 going to be in the scene and then
04:27:28.800 because we didn't specify a motion clip
04:27:30.800 the tool wants to build its own so here
04:27:33.520 we go through the more complicated bit
04:27:35.600 of selecting where to build it from um
04:27:51.080 okay so build motion clip this one is
04:27:54.159 probably the most difficult one to
04:27:55.600 understand um if you paid attention to
04:27:58.439 the previous talks you've seen that we
04:28:01.399 no longer store the actual animation on
04:28:04.199 the skeleton like we did in KX right so
04:28:06.199 in K effects you had a skeleton you were
04:28:07.800 animating the skeleton and then the
04:28:09.000 points would transform and you know uh
04:28:11.319 over time based on C set Keys we no
04:28:14.399 longer do that in the P Pack character
04:28:16.760 format but rather we St we store the
04:28:19.159 animation on some things called Channel
04:28:21.119 Primitives which I'm going to explain in
04:28:22.279 a second as well um which then drive the
04:28:25.119 actual rig right so you imagine a
04:28:26.479 control of a hand which has like a
04:28:28.680 vector like a translate Vector exposed
04:28:30.600 to the Apex graph right the rig you move
04:28:33.840 that control around and that's a simple
04:28:35.560 translation and that's our animation in
04:28:38.199 this
04:28:39.040 case and then inside the same rig you
04:28:42.279 know there's basically a bunch of things
04:28:44.359 you can also do but one of the things
04:28:45.960 that we also do very often is we also
04:28:48.920 expose the skeleton itself and the skin
04:28:50.960 so we can see the output so imagine the
04:28:52.800 layers being like this we get a skeleton
04:28:54.479 which is at rest pose right so just s
04:28:55.760 the eight pose we give it to the rig and
04:28:57.840 say this is the skeleton we get the skin
04:29:00.040 again at rest pose and with the capture
04:29:01.800 weights we give it to the rig and say
04:29:03.279 this is my skin then we have a bunch of
04:29:05.119 controls with either vectors exposed
04:29:06.800 like I just mentioned then we do our
04:29:08.880 animation and whatever and then at the
04:29:10.520 end once our uh rig has evaluated and we
04:29:14.199 have all the updated transforms of the
04:29:16.920 controls we have the option of writing
04:29:18.960 the those transforms back to the
04:29:20.239 skeleton so we now sort of circle back
04:29:22.399 and go to that K effect picture where
04:29:23.880 our skeleton starts to move we don't
04:29:25.880 store it there that's very important but
04:29:28.840 we can get the output of that so we can
04:29:30.960 get the skeleton moving out of a rig in
04:29:33.479 certain cases also the skin that's
04:29:34.800 actually been bone deformed as well but
04:29:36.800 for the motion clip build step in
04:29:38.119 particular we're care about that
04:29:39.199 skeleton path because a motion clip
04:29:42.239 again it's a bunch of poses over you
04:29:44.319 know that's been stashed with the time
04:29:45.960 attribute to Define to determine uh
04:29:48.479 where should they
04:29:49.800 play um so we need a skeleton with some
04:29:53.840 animation on it right because we want to
04:29:55.520 basically give our rag doll that's the
04:29:57.439 whole purpose you probably should have
04:29:58.560 started with we want to have the rag
04:30:00.520 doll match the animation of our
04:30:01.840 character right that's the whole purpose
04:30:03.119 of this because as Warren shown in the
04:30:05.840 the throw off scene we want Ral to
04:30:07.760 inherit that throw off and then have the
04:30:09.479 simulation take over so we need to
04:30:11.600 figure out how can we build that motion
04:30:13.600 clip out of the the components we've got
04:30:15.920 and the way to do it is we look at let's
04:30:18.920 find the rig that we're supposed that
04:30:21.040 holds our animation that is supposed to
04:30:22.920 evaluate and give us the resulting
04:30:25.040 animation which in this case would be
04:30:26.880 pusher. character because that's the one
04:30:28.319 we're configuring based at rig right
04:30:30.399 that's our rig then we say we know we
04:30:33.399 have the rig We Care specifically about
04:30:35.880 the updated skeleton output of that rig
04:30:38.680 right so we want to write out the
04:30:40.239 transforms of the controls onto that
04:30:42.760 skeleton and get that output from there
04:30:45.840 so we go output node that's just the
04:30:47.720 name of the output node it can be
04:30:49.119 anything you know my node or whatever
04:30:51.520 and base. scale so this is kind of
04:30:54.439 something you have to have in the rigs
04:30:55.800 for rag doll specifically because rag
04:30:57.840 doll works on skeleton so it expects a
04:31:00.159 skeleton both at rest bow which we
04:31:01.920 selected at first and both as the actual
04:31:05.159 animated output of the rig and once we
04:31:08.159 sort of G given the rag doll the path to
04:31:10.479 that skeleton it can finally figure out
04:31:13.319 what to do with it and build a motion
04:31:14.720 clip under the hood for us so the Ral
04:31:16.399 can inherit the
04:31:18.359 motion um and then let's move on and
04:31:22.000 basically we are
04:31:23.640 getting the a default rag doll so I have
04:31:27.159 a character that of just flaps to the
04:31:29.000 ground with the limits we've configured
04:31:30.760 and the shapes we've configured I can
04:31:33.040 toggle it to the side a bit so we can
04:31:34.399 see them side by side obviously there's
04:31:35.720 no motion here for now but having that
04:31:38.279 path of the motion clip saved will help
04:31:40.399 us later on because we can very easy
04:31:42.119 rebuild
04:31:43.520 it um and
04:31:51.520 yeah uh next up here I wanted to also
04:31:53.920 play with some options just to make sure
04:31:55.399 you know things look sensible with the
04:31:57.720 the limits and shapes and whatnot we
04:31:59.760 still have no animation yet so I'm just
04:32:01.119 going to sort of start from rest pose
04:32:03.279 and try some things so one of the bits
04:32:06.560 that also are needed in Ral um
04:32:09.359 especially when working with rigs like K
04:32:12.319 or stuff that not just pure FK we need
04:32:14.680 to tell the tool what shape corresponds
04:32:17.800 to what control in order to know when
04:32:20.399 Warren was showing the baking of the
04:32:22.159 poses right it needs to know like what
04:32:24.359 transform to bake basically from which
04:32:26.920 shape to which control because we can't
04:32:28.800 really match it by name in this case
04:32:30.359 because you know your ik can be named
04:32:32.600 anything that's why I mentioned FK would
04:32:34.399 work because usually that's you know if
04:32:35.800 you keep the FK names the same as the
04:32:37.880 joints it's a bit easier since the
04:32:39.960 shapes are named as the joints but in
04:32:41.880 case of an ik or more complicated rig
04:32:43.960 where you've got you know God knows what
04:32:45.399 names then you have to create this
04:32:47.880 mapping step in between which again you
04:32:49.840 only have to do once it's going to get
04:32:51.239 stored on the character itself and um
04:32:55.359 you can reuse it later
04:32:57.640 on and now we're going to do the some
04:33:00.760 configurations here so here's the
04:33:02.080 windows that weren't shown I'm going to
04:33:03.920 touch on those in a second as well and
04:33:06.400 here I just wanted a very basic um pose
04:33:09.759 where I just rotated the source
04:33:10.958 character from the root control and I
04:33:13.561 position it a bit higher up just wanted
04:33:15.480 to test how the limits behave when the
04:33:18.080 character lies sort of
04:33:23.080 horizontally so I'm Med key there just
04:33:25.840 to keep the pose and then we go over
04:33:28.480 to a Ral character we do reload Target
04:33:31.639 animation and we tell the tool for which
04:33:33.799 Ral character we want to reload it in
04:33:35.480 this case The Pusher motion clip because
04:33:37.599 we've already set the path to the motion
04:33:39.400 clip it knows where to look for and this
04:33:41.958 updates our R motion so this is all you
04:33:44.400 update the motion when you want so it
04:33:46.000 doesn't update automatically which means
04:33:48.160 you can go back and forth between a
04:33:50.039 particular clip any times you want
04:33:51.919 without sort of updating the r doll
04:33:53.680 without you wanting to and then I'm also
04:33:55.680 setting some metal transforms
04:33:57.160 constraints there just so we can see how
04:33:59.240 the limits behave when the character
04:34:01.039 sort of keeps the pelvis in place so it
04:34:02.879 matches the source character pelvis
04:34:04.680 position but everything else just flaps
04:34:07.520 with pure rag
04:34:10.480 doll and then then at the end we also
04:34:12.438 want to test the poses I'm here doing a
04:34:14.719 a dense baking just to see if there are
04:34:16.561 any issues with our mapping maybe we did
04:34:18.278 some some mistakes or maybe there's
04:34:19.958 something wrong but this seems to be
04:34:22.520 fine so once you know we sort of did the
04:34:25.080 initial
04:34:26.240 tests um we can now uh ask War how how's
04:34:32.278 the blockout going so we can actually
04:34:33.759 test on that as well before sending him
04:34:36.480 uh the file so he can actually take it
04:34:38.320 away and configure to his um own
04:34:43.639 liking uh here are the options for rag
04:34:45.958 doll so these are you know obviously I'm
04:34:47.320 not going to explain each of them
04:34:48.759 because that's not really useful you can
04:34:50.719 check on those if you're interested in
04:34:52.320 the docs the point is we've got options
04:34:55.199 for like sort of constant we call them
04:34:57.561 so basically like physical options for
04:34:59.480 the shapes like density bounce and
04:35:00.879 friction so that's also something we
04:35:02.400 would probably be configuring at this
04:35:03.680 step you know if you have some shape
04:35:05.759 that's really big compared to the rest
04:35:07.320 and it sort of seems to be driving the
04:35:08.520 rag doll in a direction that you don't
04:35:10.160 really want to you can lower the dens of
04:35:12.000 that shape and we can sort of adjust it
04:35:13.599 per shape then we've got animated stuff
04:35:16.438 like adding constraints for wall
04:35:18.320 transforms and local transforms making a
04:35:20.879 character inactive or a shape inactive
04:35:22.958 this is all stuff that Warren's going to
04:35:24.438 probably play with when he actually does
04:35:25.840 the shot but we can still make sure
04:35:27.320 everything behaves correctly for our Uh
04:35:29.400 current configurations and then some
04:35:31.320 stuff for the ground plane here which
04:35:32.639 are pretty self-explanatory I
04:35:36.400 hope then we finally get the the
04:35:38.400 blockout from Warren and we can test
04:35:41.000 that as well really really quickly
04:35:42.160 before sending him the the result so
04:35:44.599 here's again the same network nothing
04:35:46.240 really changed except we just reloaded
04:35:48.000 our file soap up there and now we've got
04:35:50.000 some new data in it um which are the the
04:35:52.919 the actual animation as Channel
04:35:54.199 Primitives so let me touch on that
04:35:56.000 really really briefly here because I
04:35:57.320 think Channel prims are A New Concept in
04:35:58.759 age 20 so imagine a channel primitive
04:36:01.438 being the what a motion clip is to an
04:36:04.639 animation basically so we take the
04:36:08.039 animation curves that you see and we put
04:36:11.320 those into packed Primitives that we
04:36:13.719 call General Primitives and we store the
04:36:16.320 keys basically on there so it no longer
04:36:18.480 plays by the timeline it's no longer
04:36:19.958 time dependent uh but it's rather stored
04:36:22.278 as a sort of a stashed static bit so
04:36:25.000 again basically like a motion clip for
04:36:26.400 our Channel curves and that's how we
04:36:28.160 store animation now in this Pack
04:36:29.438 character format that's what we get in
04:36:31.639 that file stop now and we don't see
04:36:33.719 anything of course in the viewport
04:36:35.000 because we're not really evaluating our
04:36:36.438 scene yet but if we go to oh um yeah
04:36:41.719 that's it uh debug limits so actually
04:36:44.359 this is a sort of in between point here
04:36:46.199 before we go straight to rag doll and
04:36:47.438 test the scene um this is where the the
04:36:50.958 configur Jo limit state becomes a bit
04:36:52.400 more useful because again before you
04:36:54.480 know when you have a character at rest
04:36:55.599 post that you build some limits for it's
04:36:58.199 you know they either look very off or
04:37:00.759 they look pretty good you're not really
04:37:02.278 sure exactly what where the problems
04:37:03.719 might occur unless until you get the
04:37:06.118 actual clip where you can sort of test
04:37:08.080 against and the first test that I sort
04:37:10.561 of recommend you try do is
04:37:13.759 you get
04:37:16.240 the an invocation of the scene so if
04:37:20.240 you're bit unsure what this means is
04:37:21.919 we're basically saying I want the push
04:37:24.320 the push e in this case so it's the
04:37:26.000 white uh skeleton of the white
04:37:29.759 character um it doesn't really matter we
04:37:31.799 say I want a skeleton from my scene
04:37:34.480 please use all the stuff that's in the
04:37:35.958 scene including the animation including
04:37:37.438 you know everything that's been
04:37:38.480 configured there and give me that
04:37:40.118 particular output of our rig and this is
04:37:42.240 basically what the state does when we
04:37:44.438 animate is just that allows us to more
04:37:46.520 gradually select bits of that scene to
04:37:48.118 evaluate in this case we're getting
04:37:49.879 War's animation written out to the
04:37:52.240 skeleton then we do a/ POs to set some
04:37:54.879 rest transforms because this is still KF
04:37:56.879 and we still rely on these attributes
04:37:58.759 when working with stuff in STS then we
04:38:01.160 go to configure joint limits and you can
04:38:03.320 see already on screen the result on
04:38:05.160 configure joint limit stop with a bunch
04:38:07.039 of red joints so the same way the gradal
04:38:10.240 Collision shapes has a display
04:38:11.561 intersections option that shows you some
04:38:13.599 potential uh areas that could create
04:38:15.561 issues we have the similar concept for
04:38:17.840 configure joint limits that shows you
04:38:19.840 which of my current joints are outside
04:38:21.919 of their limits already because remember
04:38:24.080 when we configure the limits we
04:38:25.199 configure them from a motion clip that
04:38:26.599 has nothing to do with the motion itself
04:38:28.278 right and then maybe our animator if
04:38:31.000 those limits haven't been built into the
04:38:32.438 rig as well maybe he'll just go and post
04:38:34.561 the character and take the some joints
04:38:37.160 outside their allowed limits from the
04:38:39.639 get-go and you know the solver might
04:38:42.000 struggle a bit with this uh it could
04:38:44.000 probably work but you know it's probably
04:38:45.599 less stable so a good practice here is
04:38:48.199 to test that your pose especially at
04:38:51.879 least the first pose that sort of goes
04:38:53.561 into Ral right because once the Ral
04:38:55.438 takes over um it's going to handle this
04:38:58.480 for us but at least the first animated
04:39:00.000 post that we want to send to ragal we
04:39:01.919 can check there to make sure that we
04:39:03.799 don't have any important joints like
04:39:06.160 wildly outside their limits and if we if
04:39:08.400 we do we can now go to the state and
04:39:10.840 tweak those just slightly in order to
04:39:13.240 bring them back to where they should
04:39:17.320 be by bring them back I mean the limits
04:39:19.639 not the animation because I don't want
04:39:20.799 to be messing with wor stuff so here I'm
04:39:23.240 getting the handle right that represents
04:39:24.919 the sort of spherical range of motion of
04:39:27.520 the the particular joint on three axis
04:39:30.438 and you can see we've got that white
04:39:31.680 line there not now in a second that
04:39:35.561 white line there which represents the
04:39:36.680 current rotation and then I just move
04:39:38.360 the range a little bit more so it uh
04:39:41.560 keeps it basically holds that that
04:39:43.798 rotation as well and I just get rid of
04:39:46.080 the root because it's annoying and it
04:39:47.400 doesn't doesn't have a shape so it
04:39:48.520 doesn't really matter
04:39:50.000 anyway once we've done this as well now
04:39:52.400 we're sure that at least this pose in
04:39:54.000 particular has no intersections for the
04:39:55.718 shapes and has no limits no joints out
04:39:58.480 their limits except the fingers which we
04:40:00.600 know we
04:40:01.680 already uh collapsed as Collision
04:40:04.440 shapewise into the hand right so we
04:40:06.440 don't really have shapes for those so
04:40:08.200 again it doesn't matter if we had shapes
04:40:10.600 for them we want to be addressing those
04:40:12.320 joints as
04:40:13.480 well and then finally we can test our
04:40:16.200 actual scene again in the state so we
04:40:19.280 see we got the three characters with the
04:40:20.878 animation that weren't showed that this
04:40:22.638 includes the chair and I just went ahead
04:40:25.160 and configured the Ral for all
04:40:26.520 characters so the the steps are exactly
04:40:28.160 the same it's just that now the motion
04:40:29.798 Clips get built um from the animation
04:40:32.840 rather than the rest pose so we see them
04:40:37.040 um fall onto each other
04:40:44.080 and um the only thing that I'm doing
04:40:47.160 here as well is just setting this
04:40:48.280 character as inactive because we know
04:40:50.840 the only Direction we've got from Warren
04:40:52.680 was basically that character is not
04:40:53.798 going to do anything just as act as a
04:40:55.600 collider so I'm just putting that as a
04:40:57.878 inactive so just follow the animation
04:41:00.000 but still be a collision and then
04:41:02.040 everything else of course you know now
04:41:03.480 you go more tests make sure that you
04:41:05.280 white character is fine we can key some
04:41:07.280 attributes you know get that world
04:41:08.600 transform on and off so get the throw
04:41:10.480 off test the chair once we're happy and
04:41:13.400 things look good this goes over to
04:41:15.080 Warren and then he does what he shown
04:41:17.400 like half an hour
04:41:20.080 ago and this is again the result of that
04:41:22.920 scene so we can see exactly what waren
04:41:24.958 did with what we've configured and then
04:41:26.520 of course that little bit at the end is
04:41:28.000 an extra animation on top of the rag
04:41:31.160 doll thank you
04:41:33.550 [Applause]
04:41:43.160 are there any
04:41:54.920 questions cool
04:42:17.798 hi
04:42:22.798 Che what do you mean configured as
04:42:25.400 characters there we go um like they're
04:42:28.680 all coming packed as uh what's the name
04:42:32.080 character oh the pack folder yeah pack
04:42:34.320 folder um for any kind of like colliders
04:42:37.360 that we want to have is there any way to
04:42:38.878 bring them in for the Ral system or do
04:42:40.718 they need to
04:42:41.920 packed like
04:42:43.480 that so you can again like the the step
04:42:46.798 of getting the shapes right was that
04:42:48.040 sort of Ral Collision shapes and then we
04:42:49.638 add them all of them under the character
04:42:52.320 so to get them in the animate state to
04:42:54.280 work with them in the ragal tool they
04:42:56.280 need to be on you know in the packed
04:42:57.878 format because that's what the tool
04:42:59.240 looks for but in terms of how you bring
04:43:01.360 them to that packed format is really up
04:43:02.958 to you you can use the Ral Collision
04:43:04.320 shapes you can you know hand model you
04:43:06.958 can even sculpt I guess your shapes and
04:43:10.280 then as long as they have have a name
04:43:11.680 it's the only thing that they need I
04:43:13.040 believe um you can do you just put them
04:43:15.958 in the pack folder right that that's all
04:43:17.600 there is to it if you're working with
04:43:19.080 the Pack character format if not ragal
04:43:21.600 solver expects them as just geometry as
04:43:23.920 an input so
04:43:35.760 no anybody else
04:43:42.638 thanks M thank
04:43:44.720 [Applause]
04:43:48.480 [Music]
04:43:52.718 you all right um let's let's get started
04:43:56.200 I'm Y St I'm fix and pipeline TD at Rice
04:43:59.200 fix in Berlin and thanks to side effects
04:44:01.600 I'm here today to present Pini 20
04:44:04.120 feathers I think first to mention I
04:44:05.878 didn't do uh that eagle that was uh
04:44:08.480 Andre and um yeah but I'm today going to
04:44:13.440 show you how uh to do actually a groom
04:44:16.560 how to start from nothing to getting
04:44:18.878 something uh rendered so uh hopefully a
04:44:21.840 step-by-step solution so once sudini
04:44:24.360 comes out you can Dive Right In and uh
04:44:26.920 get your stuff uh started um so at rise
04:44:30.958 uh in summer this year we had had a
04:44:32.920 project where we um had to use feathers
04:44:35.080 and since Houdini 20 announced their new
04:44:37.200 feathers Tools H I had the chance to
04:44:39.638 look into them and to use them
04:44:41.200 unfortunately uh this project is still
04:44:43.040 ongoing and I cannot show anything from
04:44:45.160 the from that show here today so I had
04:44:48.480 to build everything uh from scratch at
04:44:50.560 home after work uh luckily this means I
04:44:53.760 can share all the files so you have
04:44:55.200 something to start with uh yeah once you
04:44:57.440 want to dive into feathers
04:45:01.120 um uh yeah I'm going through the whole
04:45:03.718 process from feather Creation The
04:45:05.520 Grooming uh how to simulate them how to
04:45:08.160 actually RI them animate them and how to
04:45:11.000 Port them plus uh in the end some
04:45:13.280 pitfalls and tricks uh that I um yeah
04:45:16.480 found by the time of creating the
04:45:18.360 presentation uh using the
04:45:20.600 tools so to get everyone uh on the same
04:45:23.200 level here are like the um three main
04:45:25.400 points of or like three main keywords of
04:45:27.200 the feather um the B uh the shaft which
04:45:29.958 is the main core of the feather the bars
04:45:32.240 which are um little filaments which come
04:45:35.360 out from the shaft and um we have like
04:45:38.040 uh the extra bbul which are like very
04:45:40.360 tiny very Fe um filaments on the bars
04:45:44.200 especially on the lower regions of the
04:45:47.120 uh
04:45:48.400 feather so before I start with uh the
04:45:51.320 new um data structure how the feathers
04:45:54.200 Works uh let's take a look into how it
04:45:56.240 was done before um people has have been
04:45:59.638 doing some feathers with sudini and uh
04:46:01.840 prior um yeah to Houdini 20 most of the
04:46:04.958 times or most of the feather systems
04:46:06.638 that I found were um like one like uh
04:46:09.760 one curve and every um bar is
04:46:12.680 represented by its own curve which
04:46:14.520 creates its own entity with all the
04:46:16.878 overhead that comes with um extra points
04:46:19.600 and extra
04:46:22.560 geometry in Houdini 20 um this uh
04:46:25.958 overhead was tried to address and um
04:46:28.920 instead of having like a lot of polygons
04:46:31.000 we just have one polygon which
04:46:32.920 represents the whole feather and
04:46:37.878 um oh sorry and um the feather or the
04:46:43.000 bars are create um defined by uh arrays
04:46:46.240 which are stored as attributes to the
04:46:48.360 points on the shaft curve so the points
04:46:50.798 on the shaft curve Define the um the
04:46:52.718 bars and um the uh bars are stored in
04:46:57.840 this uh this um array and are oriented
04:47:01.240 based on the bar Orient attribute this
04:47:03.638 makes it a special like very uh uh um
04:47:07.760 fast to uh draw on the GPU with its um
04:47:11.120 procedural Shader and open Geometry
04:47:14.280 Shader is used and later in vcan a
04:47:17.160 Tessellation Shader will give us even
04:47:18.878 some more speed up as we will see later
04:47:20.440 in this
04:47:24.040 presentation um yeah as you might know
04:47:26.638 from the hair hair and hair in the in
04:47:29.718 the viewport um we can visualize the
04:47:32.440 width so activating this uh Shader um is
04:47:36.638 um still possible using uh the shade
04:47:39.480 open curse option on the um geometry
04:47:42.040 node which will enable us to see the
04:47:44.000 feather so once you start your first
04:47:45.240 feather scene and you don't see anything
04:47:47.160 uh make sure that shade open Curves in
04:47:48.958 viewport is enabled additionally to not
04:47:51.280 being in wireframe because in wireframe
04:47:53.160 you will only see the
04:47:59.200 curve okay let's start how to uh Define
04:48:01.958 our feather and um there are three or
04:48:04.718 like two main tools which are new the
04:48:07.040 feather shape organized node uh which
04:48:09.160 lets us Define in an artistic way how to
04:48:11.680 create the feather and uh the feather
04:48:14.200 template from shape which actually
04:48:15.680 creates the feather and I show this in
04:48:18.200 the following video afterwards we can
04:48:20.320 use a groom process note to give us some
04:48:23.040 extra detail to the feather bobs uh in a
04:48:26.080 way that we already know it from the
04:48:27.680 hair um
04:48:29.958 workflow okay so uh here we have um we
04:48:33.000 create the feather uh template and we uh
04:48:36.760 have our feather shape um where we can
04:48:39.200 Define uh the shaft curve
04:48:41.480 and um this Chef um with this uh curve
04:48:45.600 and the um outline of it we can um
04:48:48.320 Define the shape of um our feather um
04:48:51.958 and yeah in an artistic way inside of
04:48:54.320 the viewport we can drag and uh drop um
04:48:57.760 those points and using the typical uh
04:49:00.200 curve tools that we um yeah know uh
04:49:04.080 already
04:49:05.600 um additionally uh we have the second
04:49:08.000 input to the feather shape organized
04:49:09.798 node uh um which uh lets us Define the
04:49:13.400 profile um of that uh of the
04:49:18.000 barbs and um yeah as you can see here I
04:49:22.000 can add those details and using for
04:49:24.280 example our reference behind uh our main
04:49:26.680 feather um you can uh then um match it
04:49:30.320 to uh your
04:49:32.040 reference um after having uh this
04:49:35.000 already set up um we can um yeah control
04:49:38.558 with our feather template note uh the
04:49:41.320 bar density and um
04:49:48.000 yeah and uh the width can be uh as well
04:49:50.920 controlled in this note to um based on
04:49:53.240 the uh curve view of the main
04:49:56.320 feather can I close this a little
04:50:04.600 bit okay uh here I H created a network
04:50:07.798 which you will find as well in the files
04:50:09.160 which are attached and the um feather
04:50:11.558 uncondensed in this case creates actual
04:50:13.760 points from our curve um as that we can
04:50:17.520 then use to um split up for example the
04:50:20.320 bars from the shaft and then the bars in
04:50:22.760 each side to actually um create uh our
04:50:27.320 um
04:50:28.680 yeah detail that we want to add to our
04:50:31.240 curve in this case I use the clump node
04:50:33.280 and as you can see in the second input I
04:50:35.040 have my uh shaft curve in which is the
04:50:38.400 skin um yeah
04:50:42.840 so yeah the guide process uh can then be
04:50:44.958 used to add some frizziness uh to the
04:50:47.080 curve uh to the feather and uh we can
04:50:49.480 then transfer the uh positions uh to our
04:50:52.400 main point so if we change for example
04:50:54.040 the order and uh the feather uh match
04:50:57.000 uncondensed is then bringing it back to
04:50:58.958 the main feather and then we have our
04:51:00.400 main feather with this um yeah extra
04:51:04.600 stuff um yeah so using this method we
04:51:07.520 can create our um feather Library which
04:51:10.040 is a subset of all the feathers that we
04:51:11.480 might use for our uh groom and uh we can
04:51:14.400 use it for either direct placement or
04:51:16.160 interpolation which you see in the
04:51:17.840 following um uh slides um I found two
04:51:21.558 really nice websites which I wanted to
04:51:23.280 show here and uh they uh
04:51:27.000 are they have really good references
04:51:29.480 with size and colors and shapes of
04:51:31.878 feathers uh which you can just PLU uh
04:51:34.000 behind um your feather as as a um
04:51:37.520 reference
04:51:51.760 ah so here I created this uh feather
04:51:54.480 library and I had my reference behind my
04:51:58.040 feathers and um yeah I can um then place
04:52:03.080 my uh um profile curves and the uh main
04:52:07.040 curves to Define my feather inside and
04:52:09.638 um after I did the the layout of all
04:52:12.680 those feathers um I cached them out
04:52:14.878 because I don't have to recook it every
04:52:16.520 time I open my scene then so it's really
04:52:18.480 high recommended and as you say can see
04:52:20.798 here I can then put um export them as
04:52:23.320 well to for example the texture
04:52:25.520 department so they can texture our
04:52:37.360 feathers so um then we can use uh the
04:52:40.760 guide groom note um to actually place
04:52:43.400 our feathers um as we did it with hair
04:52:45.920 previously on other characters and um
04:52:48.680 yeah the following video shows uh how to
04:52:51.080 do
04:52:57.320 this okay the guide room so uh we can
04:53:00.320 enable this new uh tab the feathers and
04:53:03.000 um put our um template feathers inside
04:53:06.160 this uh template geometry soap and then
04:53:09.280 uh select the feather that we want uh to
04:53:11.520 use make sure to uh set the feather
04:53:13.920 settings so um the orientation is
04:53:16.520 activated with a B Orient attribute as
04:53:18.320 we learned it before that this is uh
04:53:20.280 used um to Define how the feather is
04:53:22.878 oriented and then we can place our
04:53:24.718 feather on our bird um by yeah manually
04:53:28.480 placing them or drawing them and uh the
04:53:31.200 cool thing is we can use all the U modes
04:53:33.760 that this uh guide node offers us and um
04:53:38.240 uh enable as well mirroring if we want
04:53:40.120 the f others to be mured on the other
04:53:42.080 side
04:53:44.520 and uh yeah use for example the scalp
04:53:47.638 node uh that uh can be used then to um
04:53:50.600 shape our feathers in the um yeah
04:53:53.520 right uh direction that we want to have
04:53:55.920 it and additionally um there's or the
04:53:59.120 orientation mode which is really nice
04:54:00.718 make sure once you dive first into the
04:54:02.558 OR into the that orientation mode um
04:54:05.638 that it's in camera space so it tries to
04:54:08.280 um rotate the feathers so that they face
04:54:10.000 the camera
04:54:11.040 so um yeah change it to rotation and
04:54:13.798 then you are free to rotate them as you
04:54:15.798 want this was one something I found in
04:54:17.920 the beginning a little bit uh
04:54:20.440 complicated to
04:54:25.360 find and uh here we have it for um uh an
04:54:29.638 already existing room where we come to
04:54:31.240 in the next slide but uh it shows that
04:54:33.320 we can use this guide room after we have
04:54:36.040 our feathers already planted uh on our
04:54:38.680 uh bird um in this case I um use some
04:54:41.920 lower resolution for um feathers and um
04:54:45.280 this is possible with a feather resample
04:54:47.080 node and then we can use the guide groom
04:54:49.160 node to uh actually have our already
04:54:52.360 existing feathers and then yeah as you
04:54:54.920 can see in real time um uh sculpt our
04:54:59.160 feather
04:55:04.320 body and uh with the feather visualized
04:55:06.680 note um you can actually um show an a
04:55:09.958 surface face representation of the
04:55:11.558 feathers and um yeah uh here as you can
04:55:14.600 see the the colors are taken with you so
04:55:17.280 for example to Define different kinds of
04:55:19.200 feathers uh they uh can be um visualized
04:55:22.480 using
04:55:27.878 this
04:55:33.360 okay cool and another addition to
04:55:36.878 Houdini 20 is the texture mask paint
04:55:39.280 which is not just
04:55:40.878 um something which is coming up in uh
04:55:43.760 which is used in in
04:55:45.760 grooming Um this can as well be used for
04:55:48.558 every other purpose as an as an
04:55:51.120 alternative to the uh attribute paint
04:55:53.480 node so um you can now draw uh geometry
04:55:58.320 uh resolution independent um on yeah on
04:56:01.680 that geometry in UV space and this
04:56:04.840 example shows you um how to for example
04:56:07.600 draw different kind of feathers and um
04:56:10.440 the feather interpolate note which is
04:56:12.280 added here as well is uh coming
04:56:14.558 alongside with it to um then use an
04:56:17.558 interpolation so here I drew it and you
04:56:19.840 see maybe in the in between the color
04:56:24.600 which is showing how the feathers are
04:56:26.480 interpolated in between so the um
04:56:28.840 feathers and the uh attributes of the
04:56:31.240 feathers can be interpolated um the one
04:56:33.400 thing to keep in mind for the feather
04:56:34.920 interpolate it's still in this uh uh
04:56:37.798 state it still needs um little bit of
04:56:41.240 Vex um to define those uh template names
04:56:44.760 and template weights and um yeah this is
04:56:48.958 uh something that I provide you with the
04:56:51.160 file so you can uh have it uh working
04:56:59.240 easily and here I show the same uh
04:57:02.000 workflow on an actual bird um where I
04:57:05.680 did some uh yeah color um um feather
04:57:09.120 masks um to one thing which I already
04:57:12.320 prepared here is having a base groom as
04:57:15.120 a hair groom so I skipped this process
04:57:17.280 to keep it a little bit uh smaller and
04:57:20.000 then I Ed this node uh this feather
04:57:22.240 interpolate node to um yeah interpolate
04:57:25.600 feathers based on the input curves that
04:57:27.600 we have here so this is just um some
04:57:30.040 curves with an hair generator then uh
04:57:32.240 sculpt it with a guide brush and
04:57:36.160 um yeah then we can have our feathers
04:57:39.240 inter instance on
04:57:40.680 based um on this uh feather instance
04:57:44.600 note
04:57:48.320 workflow and we can even paint in real
04:57:51.638 time on it and as long as your feathers
04:57:53.360 are not too high rest so I had a little
04:57:55.878 bit lower resolution for the feathers
04:57:57.360 here in this uh video as well um it uh
04:58:01.440 reacts in real time uh as well depending
04:58:04.000 on your Hardware especially on your GPU
04:58:06.320 Hardware
04:58:11.200 all
04:58:14.920 right
04:58:16.718 and here uh it shows how it actually
04:58:20.160 works uh when using this uh in
04:58:22.798 interpolation so uh we have the feather
04:58:24.840 template interpolate which actually does
04:58:26.798 the interpolation so every curve or
04:58:28.680 every feather that we have in the end is
04:58:30.400 its unique uh uh variant um so it does
04:58:34.280 an interpolation and even the same
04:58:35.878 feathers will be unique feathers
04:58:38.160 additionally to this um we have the FEA
04:58:40.280 instance pool um which is a node that uh
04:58:44.160 is creating packed agents and does some
04:58:46.920 instancing of the same feathers so it
04:58:49.160 tries to figure out which feathers uh do
04:58:51.920 are similar and um then we have it maybe
04:58:54.878 if you see the frame range on the bottom
04:58:57.480 um you saw that uh the normal instancing
04:58:59.958 mode is a little bit slower once we use
04:59:02.000 this instancing workflow with an actual
04:59:04.718 P agents uh uh or P feather agents um it
04:59:10.160 will be faster and uh in the end I
04:59:12.760 showed an example of how it will be in
04:59:15.400 the Vulcan viewport with the
04:59:16.718 tessellation uh Shader um we get a speed
04:59:19.558 up even on our feather template
04:59:21.040 interpolate already around uh yeah 30
04:59:28.638 FPS cool um then we have the feather
04:59:31.200 blend node this uh note enables us to um
04:59:35.240 to sculpt our feathers on the bird um
04:59:38.958 and this uh it's really cool it um
04:59:43.520 yeah we can use it um
04:59:46.600 with uh with the scy tools or with other
04:59:50.480 uh um geometric operations for example
04:59:53.638 booleans to uh create our outer surface
04:59:58.120 and the and the feather surface note
05:00:00.120 tries to match this outer surface and um
05:00:03.200 yeah fills the volume of the bird which
05:00:05.200 was uh which is where I had some
05:00:08.120 problems getting this uh done nicely
05:00:11.320 with just a um um guide process uh lift
05:00:17.520 operation um so here I paint some areas
05:00:21.120 on the on our surface and the feather
05:00:24.798 surface node um will interpolate the
05:00:26.958 feathers so they match this new uh shape
05:00:30.240 to generate some nice volume
05:00:41.760 then uh we can use some uh um other
05:00:44.520 groom tools um as the feathers are as I
05:00:47.958 said just poly lines um they uh can be
05:00:52.440 uh groomed with the to with existing
05:00:55.878 guide process nodes and um some of the
05:00:59.600 modes got some additional uh bar mode
05:01:03.200 which is a working on the bars and not
05:01:05.320 on the whole curve and uh we have the
05:01:08.680 feather noise and the feather uh Clump
05:01:11.080 note which can add extra detail um on uh
05:01:15.920 on the groomed feathers in World space
05:01:18.400 so um we we had in the beginning the um
05:01:21.840 details on the feathers and now we can
05:01:23.680 add this extra detail on the um the
05:01:27.400 extra
05:01:31.760 feathers and yeah here we see uh the
05:01:34.080 feather Clump node in action um where we
05:01:36.480 have um some um parameters to uh yeah
05:01:41.320 control the clumpiness uh we can
05:01:43.878 override a lot of those parameters with
05:01:46.240 those texture mask on the bird or on the
05:01:49.280 uh groom uh or guide curves itself um to
05:01:52.718 Define where we want this actual
05:01:54.798 clamping and the feather noise is giving
05:01:56.958 us some extra frizziness and using this
05:01:59.480 texture uh mask paint uh it will be
05:02:02.638 possible that you can Define maybe
05:02:05.080 special areas of your bird where you
05:02:06.558 want to have like a really fluffy uh
05:02:09.200 look
05:02:21.240 oops
05:02:22.760 um this cool and uh after you have your
05:02:26.718 basic room set up with all those tools
05:02:29.200 uh you can use the feather D intersect
05:02:31.040 uh note which uh enables you to order
05:02:33.360 the feathers so they get this typical
05:02:35.600 pattern that we already saw for example
05:02:37.120 on that eagle uh before and this note is
05:02:41.200 um GPU acclerated so it will be super
05:02:43.718 fast if you have like a huge groom with
05:02:45.400 a lot of detail it might gets a little
05:02:48.240 bit slower but uh
05:02:50.920 um uh because of the d accleration uh
05:02:55.798 you will see that it works on this
05:02:58.160 highrisk room and in this example I uh
05:03:01.080 had like a very frizzy haircut to just
05:03:03.520 check it out um how it actually works on
05:03:06.840 not like the perfect feather and um yeah
05:03:09.840 as you can see here uh it does some nice
05:03:12.320 alignment and we can use the thickness
05:03:14.400 of the feather to define the distance
05:03:16.360 between the
05:03:17.558 feathers
05:03:20.920 um uh to yeah de intersect them
05:03:24.280 accordingly uh the de intersection is
05:03:26.400 based on some surface the intersection
05:03:28.878 and then transfers this uh new
05:03:31.480 deformation to the actual feather
05:03:58.798 all right um once we're done with our uh
05:04:01.680 groom we're going um going to uh
05:04:04.240 simulate it and deform it and as some in
05:04:06.160 fix artist this is uh something that I
05:04:08.080 really like to uh play around with
05:04:10.240 um we first have the feather resample
05:04:12.320 Noe which we already saw in some
05:04:13.680 examples before we can use this note to
05:04:15.718 increase or decrease uh the amount of B
05:04:18.280 on the feather to create our proxy uh
05:04:20.840 lower rest feather in this case and uh
05:04:24.400 afterwards we can use the feather
05:04:26.000 surface node to uh create a polysurface
05:04:29.160 representation which which can be used
05:04:31.440 um with the Vellum solver uh as a clause
05:04:35.280 simulation to um yeah get some nice
05:04:38.160 simulation on our feathers
05:04:40.600 um an cool attribute that this feather
05:04:43.760 surface notes give us is the norm UV
05:04:46.000 which you see on the right uh here which
05:04:48.480 is creating um a
05:04:51.360 parametrization around over the feather
05:04:53.400 from the shaft to the uh top and from
05:04:55.840 the right bars to the left bars and you
05:04:57.840 can use this to uh drive your
05:04:59.760 constraints um on the uh Vellum Clause
05:05:03.440 uh setup um the feather deform uh node
05:05:07.718 uh can then be used to deform the
05:05:10.440 highrisk Grom based on this uh surface
05:05:13.520 proxy
05:05:14.958 representation and I have an example
05:05:17.360 here um I built a complet new gro in
05:05:20.798 this case on this uh on this ball to
05:05:23.558 Showcase it um and I animated this
05:05:27.600 ball and then um created my proxy
05:05:31.040 representation of the feather with the
05:05:32.320 feather resample node use the guide
05:05:34.600 groom node to actually uh rotate and
05:05:37.400 deform it um as a
05:05:40.558 the feathers are just curves the guide
05:05:43.558 deform can be used there and afterwards
05:05:45.400 create the surface representation which
05:05:47.240 I can then use uh with the Vellum solver
05:05:50.040 to actually uh simulate our feathers and
05:05:52.798 you see uh it works uh quite uh well I
05:05:55.840 did some pre U pre simulation here so
05:05:59.320 that's why it's so fast um and
05:06:02.200 afterwards we have uh our deformed
05:06:04.638 animation and we have to first capture
05:06:07.200 uh the um the waiting for the formation
05:06:10.440 with this feather deform node in
05:06:13.878 um uh in capture mode it's a little bit
05:06:16.440 like the uh Point deform where you can
05:06:19.520 uh have the option to first uh uh um
05:06:22.480 capture the waiting and then deform them
05:06:25.798 afterwards using D deform mode and this
05:06:27.798 is uh what is shown here and um yeah
05:06:30.798 this is now uh real time playback and uh
05:06:34.240 um even with this highrisk room it's uh
05:06:36.798 pretty fast even on my GPU I don't have
05:06:38.920 the best
05:06:43.360 one and here I have an example of that
05:06:46.040 in motion uh even with this uh really
05:06:49.360 rough uh movement uh it feels pretty
05:06:56.360 satisfying cool um I took as well a look
05:06:59.240 into uh rigging and animating uh our
05:07:02.878 feathers and um we can use the feather
05:07:05.680 primitive node um which creates an ped
05:07:08.480 agent which is under the hood the node
05:07:11.440 which is used in the feather um instance
05:07:14.840 pool node and uh this P agent can then
05:07:18.240 be used with our kinix tool set to um
05:07:21.440 yeah animate and deform our feather and
05:07:24.200 afterwards we can use the bone deform or
05:07:25.718 an agent posst from Rick to actually
05:07:27.558 bring this back to our highr
05:07:32.480 feather so here we have the example the
05:07:35.120 feather primitive is creating this uh um
05:07:38.600 uh agent with skeleton we can then use
05:07:41.240 the agent character unpack Noe to
05:07:43.558 separate the um skeleton and um I did
05:07:47.958 some uh reparenting for the bars to the
05:07:50.320 shaft curve which is in this um in this
05:07:53.160 uh python code there and then at to some
05:07:55.920 joint geometry to have a nice uh
05:07:58.520 animation tool for it and then we can
05:08:00.120 use the typical animation tool on this
05:08:03.120 um uh skeleton and this will deform our
05:08:06.958 uh main feather based on it and we can
05:08:09.920 which cool on KS now still uh for
05:08:13.600 example uh um increase the the
05:08:17.600 resolution of our bar uh joints uh
05:08:20.480 without even changing the um shaft
05:08:24.280 animation and this works as well with a
05:08:26.798 little tweak that I did that why I
05:08:28.520 unpacked the um feather primitive node
05:08:31.040 maybe it will be in soon after the
05:08:33.558 release or before the release um where I
05:08:36.798 have actual different names for each
05:08:38.680 feather skeleton and now can uh yeah RI
05:08:43.440 and animate all my feathers at the same
05:08:45.520 time and uh yeah see it directly with
05:08:48.320 the bone deform uh in this case or um
05:08:51.958 yeah select multiple curves at the same
05:08:53.958 time and deform
05:08:58.718 them and animate them with key frames
05:09:01.878 and probably it will really or I'm
05:09:04.160 pretty sure that it will uh work nicely
05:09:06.280 as well with Apex
05:09:10.120 and here I had prepared some animation
05:09:13.440 or procedural animation by just opening
05:09:15.360 the
05:09:16.200 feathers and yeah on the left side the
05:09:18.360 agent packed from Rick note is uh um
05:09:21.440 putting it back on the packed packed
05:09:24.000 feather
05:09:25.558 agents or the P
05:09:29.480 agents um then uh we have uh some ways
05:09:33.240 to export our feathers and uh we can
05:09:35.240 first use the uncondensed note which I
05:09:37.040 already showed you where we can create
05:09:39.440 our low uh um where we
05:09:42.798 can convert our feather into actual um
05:09:46.600 points and poly lines um or use the
05:09:50.400 feather surface node to create some
05:09:52.200 proxy generation and in combination you
05:09:54.200 can use it for example as a USD proxy
05:09:56.760 for your feathers which can be shown or
05:09:59.558 exported in in your um USD layer and uh
05:10:04.200 it can as well be used to promote uh bar
05:10:06.760 attributes if you have for example
05:10:08.360 colors on your bars already defined um
05:10:11.878 yeah this can be done and uh the for the
05:10:14.040 USD export uh you can just import the UN
05:10:17.600 the condensed feathers so just the
05:10:19.840 polyline with the attributes to Solaris
05:10:21.958 and use the feather procedure for
05:10:25.080 this here Show an example of uh how I
05:10:28.240 did
05:10:30.080 this um first I did some animation so uh
05:10:34.000 to um have actually moving feathers uh
05:10:36.920 in our export u i load in my final groom
05:10:40.840 in this case it's a little bit rough um
05:10:43.718 use the feather resample to create a
05:10:45.360 proxy uh of my feathers all at once and
05:10:48.680 then use the guide deform to capture the
05:10:51.638 waiting from our um animated planes
05:10:55.680 which I um yeah just um parented to uh
05:10:59.600 to the character movement and uh in this
05:11:03.120 case here the feather um uh deform is
05:11:06.680 capturing the waiting for the formation
05:11:09.920 so we can use it with the
05:11:14.600 procedural um yeah to get to feather
05:11:16.840 renderings the feather procedural node
05:11:19.200 um is giving us the option to create the
05:11:22.080 bars on render time um and we don't have
05:11:25.638 to store huge caches we just have to
05:11:27.320 store the um main curve uh with the bar
05:11:31.400 attributes
05:11:34.080 um the husk procedural uh is taking like
05:11:37.718 I said the condens feather and uh to see
05:11:40.718 it in the viewport we have to use the
05:11:42.680 preview procedure note which was already
05:11:44.480 shown a lot of times today and uh some
05:11:47.920 interesting thing about the feather
05:11:49.600 procedural uh is that we can use the
05:11:51.638 create cubic curves um which is show
05:11:54.040 which shown on the right where we have
05:11:55.440 like nice smooth um bar uh bars instead
05:11:59.558 of like this uh yeah uh really Cluny
05:12:03.360 linear curves and um another cool thing
05:12:07.680 is the shaft point attribute which is
05:12:09.958 created um on the feathers where we can
05:12:12.878 which we can use to um yeah for example
05:12:15.320 color the shaft differently to our bars
05:12:18.240 um in our
05:12:21.480 Shader and here's the workflow shown I
05:12:23.920 think um the procedural itself was
05:12:25.718 already shown earlier today um so I
05:12:27.840 import my uh curves the condens curves I
05:12:31.120 create my proxy uh um proxy surfaces and
05:12:36.480 the animated proxy surfaces and animated
05:12:39.360 my uh animated character as well so we
05:12:42.200 get some nice animation in and um after
05:12:46.080 having everything in we can use the
05:12:47.558 feather um procedure uh to Define where
05:12:51.878 we want to write our feathers into what
05:12:53.718 primitive it should be an empty
05:12:54.798 primitive uh I had not had bad
05:12:59.280 experience with uh trying to create it
05:13:01.680 on the feather itself um I always had to
05:13:04.320 write it to a different uh primitive
05:13:06.718 empty primitive in this case and then um
05:13:09.360 yeah we can Define our deformer at rest
05:13:12.680 posst and the deformer at animation pose
05:13:15.160 and have our whole rest of the Solaris
05:13:17.400 tree uh below it and then in the end
05:13:19.600 have our preview procedural
05:13:22.520 note and uh here we have uh I've
05:13:25.600 activated uh Karma xpu to have my uh
05:13:29.840 bird and um you see it updates really
05:13:32.638 fast even on my GPU we have uh this new
05:13:35.600 um Karma fur material uh which uh is
05:13:39.520 have has an melanin option as already
05:13:42.200 said which is really nice for white hair
05:13:44.400 as we saw it on the eagle uh before and
05:13:47.520 yeah that's uh the feather procedural uh
05:13:51.400 inaction uh rendered with CA
05:13:58.320 xpu all right uh so just uh for for the
05:14:02.320 end um for everyone uh who's more in the
05:14:05.280 pipeline stuff uh the cool thing with
05:14:07.080 the new uh feather system is you don't
05:14:09.120 have to throw your existing tools to the
05:14:11.440 trash you can just um use them still
05:14:14.320 with just some minor tricks uh using
05:14:17.040 some uh Vex so this is goes a little bit
05:14:20.718 above just the normal uh um grooming
05:14:23.798 process this is more for the pipeline
05:14:25.400 side but uh we can create this PO Orient
05:14:27.440 attribute and I am showed an example how
05:14:29.520 to for example create it so I used the
05:14:32.718 uh tangent from the so the curve itself
05:14:35.280 from the feather and um carried the
05:14:38.160 normal of the surface to create our B
05:14:40.680 orientation and uh instead of creating
05:14:43.360 points for The Bobs which we would have
05:14:45.440 done before we just have to write it
05:14:47.480 into um
05:14:50.120 the the
05:14:52.798 um array attributes the P bob L and P
05:14:56.280 Bob R and this is shown here so you see
05:14:59.280 um your code gets a little bit smaller
05:15:01.080 with uh the new feather procedural um
05:15:04.558 and uh here I take this direction which
05:15:07.160 is uh in shift in bar space um Q invert
05:15:12.040 so I uh in um um invert the rotation of
05:15:16.878 the of the bar which we will store and
05:15:19.600 uh yeah put my direction in and store it
05:15:22.160 as uh this um yeah
05:15:25.638 bar uh attribute and um using uh for
05:15:29.440 each Loop to iterate over uh each bar
05:15:32.160 Point um we can easily have this um yeah
05:15:37.520 working and yeah one thing I forgot to
05:15:40.040 mention is we have to create those
05:15:41.760 attributes before because the size has
05:15:44.040 to be defined so we have to create those
05:15:46.798 um P bob L and P Bob R um using an
05:15:50.040 attribute create and additionally to the
05:15:52.520 uh p position we can as well use UV
05:15:55.280 uncore bob L Bob R so everything suffix
05:15:58.240 with um bob L and Bob R uh will be uh
05:16:02.160 yeah Bob attribute that can be
05:16:05.000 used
05:16:06.638 uh and here are some last and I think it
05:16:09.718 can switch
05:16:10.958 back so that was everything was videos
05:16:13.798 uh and I have some last pitfalls it's my
05:16:15.920 last slide um so the points are relative
05:16:18.320 always keep the bar orientation in mind
05:16:21.200 um um so if you want to Define it h you
05:16:24.558 have to bring your world space into bar
05:16:26.760 space by uh inverting the rotation and
05:16:29.638 bringing it back to the position defined
05:16:31.680 by the chea point so the chea points is
05:16:33.878 uh um defining the origin of the bar um
05:16:37.440 it might get complicated to get really
05:16:39.160 de intersected feathers which are really
05:16:41.040 close for example on some chickens uh
05:16:43.600 you might see it it feels like it
05:16:44.798 already a surface um and uh I had like a
05:16:47.920 hard time to get this really uh nice on
05:16:50.558 on an uh concave uh character um the
05:16:54.638 dsection might behave unexpected if you
05:16:56.400 have issues on your geometry um so check
05:16:59.200 your geometry if there's something wrong
05:17:00.798 with the dsection um interpolation with
05:17:03.600 UVS uh can create problems if you try to
05:17:06.440 in to to interpolate the feathers and
05:17:09.200 have your uh texture on the in the UV
05:17:11.600 space of the feathers um you might get
05:17:13.718 in between texture uh lookups um if you
05:17:17.480 use the wcan viewport uh please don't
05:17:19.760 put the first bar point at zero at the
05:17:21.680 point of writing this uh presentation um
05:17:24.718 this was just a uh calling that um bar I
05:17:30.080 think as in some optimization to not
05:17:32.000 draw any any bars on the shaft curve uh
05:17:36.200 and some limitation I found which might
05:17:38.480 be quick quickly fixed um but at the
05:17:41.160 time of creating it um it was not
05:17:43.280 possible to show the width um or the CD
05:17:46.160 of the bars in the viewport so um the
05:17:49.480 width of the bars uh will be inherited
05:17:51.558 by the main shaft curve width um the
05:17:55.240 geometry Shader has limits so if you
05:17:56.680 want a lot of uh bar points it gets cut
05:17:59.480 cut up cut off at some point because of
05:18:01.798 how the Shader works and um so you might
05:18:04.958 see uh that the half of the right bars
05:18:08.480 uh is missing um but it will be rendered
05:18:11.160 completely and once you uh UNC condense
05:18:13.360 your feather it will still be there so
05:18:14.718 it's just not drawn because of the limit
05:18:16.440 of buffers and um it's not possible to
05:18:20.320 merge feathers with different bar
05:18:21.798 resolutions as the um yeah as the number
05:18:24.320 is fixed there uh the feather procedure
05:18:27.040 has some limitations which are already
05:18:29.040 worked on so that's not possible to have
05:18:31.120 any deformation blur with any procedure
05:18:34.120 unfortunately um the point and Prim
05:18:37.680 attribute promotion is missing on the uh
05:18:39.878 on that note as well so you have to if
05:18:41.760 you want to have some extra um curve
05:18:45.400 view from the from the shaft maybe for
05:18:47.440 your Shader you have to promote it into
05:18:49.638 uh bar arrays prior to rendering and uh
05:18:52.680 there's no skin deformation as for hair
05:18:54.240 so if you just want your character to
05:18:55.558 move and you move your uh head with or
05:18:58.718 the feathers with uh your character you
05:19:00.798 have to go the way which I showed uh
05:19:02.958 about uh how to to uh create this um
05:19:06.958 surface representation and deform it
05:19:08.520 then
05:19:09.240 and uh as last point it's not possible
05:19:11.760 currently uh to create babulous out of
05:19:14.480 the box but as you see here in this uh
05:19:16.760 slide uh there are ways to uh go around
05:19:19.240 it and uh it's either to create hair
05:19:21.520 which uh will be deformed with a surface
05:19:23.718 or create your own um yeah feather
05:19:25.958 procedure with babulous and I added some
05:19:29.920 examples for those two things as well
05:19:32.240 thank you very much uh sorry for the
05:19:34.240 videos which uh were not uh working
05:19:37.240 first but uh yeah I think we don't have
05:19:40.120 any time for questions so I'm here
05:19:42.320 afterwards if you like to ask any
05:19:44.958 questions thank
05:19:46.070 [Applause]
05:19:53.100 [Music]
05:19:57.160 you okay okay hello everyone we're going
05:20:00.320 to start with the final presentation
05:20:03.320 before we have a drink so hope you're
05:20:06.120 looking forward to that as well um so
05:20:09.320 yeah I will be talking about realtime
05:20:11.240 feathers um as you have seen from today
05:20:14.120 or from yesterday D20 offers a lot of
05:20:16.520 feather tools and I had a small project
05:20:19.760 where I did some more of a realtime
05:20:22.200 version of it uh to work with game
05:20:24.200 engines like in real or Unity or other
05:20:26.200 engines you might be using um yeah so my
05:20:29.320 name is s I'm a freelance technical
05:20:31.638 artist um using hini bunch of times so I
05:20:35.160 will of course show you a bit more um
05:20:38.840 what I will talk about so I want to
05:20:41.280 first uh sketch a bit of context about
05:20:44.000 uh game def limitations just to we are
05:20:46.878 clear why we are doing certain things in
05:20:48.600 a moment because we will of course need
05:20:50.040 to reduce everything super low poly uh I
05:20:52.638 will discuss a method called SP cards or
05:20:54.680 mesh cards which is commonly used we'll
05:20:57.400 quickly go over the creation of that and
05:20:59.160 have some breakdowns about specific
05:21:00.600 things uh we also have things like a
05:21:02.680 grooming plugin in certain engines like
05:21:04.200 in real there is a plugin that enables
05:21:06.000 you to import uh like data from and
05:21:09.040 displayed uh just really nicely and at
05:21:12.080 the end just quickly summarizing some
05:21:13.718 things here and there for you um what's
05:21:16.280 the difference between them but it's
05:21:17.680 pretty uh obvious in a moment you will
05:21:20.240 see so game limits we are in game
05:21:24.360 development The beautiful landscape of
05:21:26.120 real-time rendering but we are
05:21:28.200 terrorized by performance and optimizing
05:21:31.760 so let's talk about a few things poly
05:21:35.240 cans I think everyone here knows that
05:21:37.160 yeah if you make something for a game or
05:21:38.760 if you want something more performance
05:21:40.200 poly count has been uh a huge yeah
05:21:43.360 factor for decades that we need to
05:21:44.920 Crunch down we cannot have millions and
05:21:46.280 millions of polygons we usually need to
05:21:48.320 B things down make low Poes make lods
05:21:51.040 all these kind of things um has been
05:21:53.840 here for decades of course under five n
05:21:56.440 nights those are like new technologies
05:21:58.480 developing but poly count has always
05:22:00.600 been something that we need to be
05:22:02.558 careful around with uh there's also
05:22:04.638 another another thing called Draw calls
05:22:07.040 uh essentially every time we have have a
05:22:08.680 new mesh or material we sort of have a
05:22:10.878 draw call and we only can have so many
05:22:13.558 amount of draw calls that's why
05:22:14.760 instancing and merging uh is is like an
05:22:17.160 often thing to reduce draw calls so
05:22:19.280 these are like two very essential things
05:22:21.760 that in Game Dev we talk a lot about in
05:22:23.680 optimizing there are many other things
05:22:25.160 um this is another presentation that
05:22:26.240 goes into depth in that uh we also have
05:22:28.320 things like how do we do lightning in
05:22:29.798 games uh how do we do um different
05:22:31.920 materials uh there are a bunch of
05:22:33.680 different things that we need to have uh
05:22:35.520 with game engines um and I just wanted
05:22:37.480 to show you that a little bit um and in
05:22:40.798 terms of Po count again I put it there
05:22:43.040 in the bottom this is like basically
05:22:45.040 made up numbers almost but just to give
05:22:46.878 you some context what is sort of
05:22:48.638 possible uh with certain Technologies so
05:22:50.798 let's say you have a high end PC can do
05:22:53.718 a lot of things with it uh but you're
05:22:55.680 still limited for example by certain
05:22:57.558 amount of polygons like 5 million or 10
05:22:59.360 million uh it's it's it's a decent
05:23:01.520 amount of number but we can only do so
05:23:03.638 much or we can under so much triangles
05:23:05.480 on screen we are very limited in real
05:23:07.200 time again options uh let's say you are
05:23:09.638 maybe in the mid-range maybe you have an
05:23:11.638 old computer maybe another console we
05:23:13.760 are then immediately limited by on like
05:23:15.638 for example 500,000 or 2 million uh
05:23:18.200 triangles on screen so again quite
05:23:20.240 limited and let's say you have maybe
05:23:21.840 like a mobile phone or VR uh it goes
05:23:24.280 then even low of course by mobile phone
05:23:26.320 I mean not the most latest expensive
05:23:28.680 iPhone that can do rate racing but like
05:23:30.638 a simple phone uh or a cheaper phone uh
05:23:33.400 because you will see if you play mobile
05:23:34.798 games they're often very simple Sprite
05:23:36.558 games or locally shaped because they
05:23:39.280 mobile game developers want to make them
05:23:41.360 as broad as possible so uh they don't
05:23:43.480 want to make something that's too heavy
05:23:44.718 and that no one can play um so yeah poly
05:23:48.040 counts as you can see again these are
05:23:49.520 like very very rough estimates uh but
05:23:51.718 it's just for you to give you some
05:23:52.958 context with the next things I will talk
05:23:55.160 about so for my little project that I
05:23:58.798 had to do is um this Eagle you have seen
05:24:02.080 here for a few times now already uh I
05:24:04.760 had to make like sort of like real time
05:24:06.520 more friendly version of that so I will
05:24:09.040 use what I had from hini I was provided
05:24:11.718 with some files um that uh was created
05:24:14.718 for me so this Eagle was created fully
05:24:16.280 in Houdini with all these new grooming
05:24:17.520 tools uh Jonas did a real great talk
05:24:19.958 showing you a bunch of these tools um
05:24:22.440 but again this is of course in Houdini
05:24:24.240 has lot of different feathers um quickly
05:24:27.160 some stats on that uh roughly it's not
05:24:29.600 of course perfectly but this has about
05:24:31.520 8,000 feathers just for the the the Hat
05:24:33.840 itself not like a full uh body eagle and
05:24:37.520 this if you would unpack each hair of
05:24:40.638 the of the feather we have around
05:24:42.600 500,000 hairs so that's already a lot so
05:24:45.878 with that context let's say for each
05:24:48.120 hair we want to draw a single triangle
05:24:49.920 or polyant um we can see that we have
05:24:52.480 for example for this object 500,000
05:24:54.920 triangles uh so that's already like a
05:24:56.638 huge huge number uh if you want to get
05:24:58.920 that into like a game
05:25:01.638 um now on top of that this Eagle had to
05:25:05.760 work on something uh which is called a
05:25:07.920 3D disc display um I don't know if some
05:25:10.280 of you have seen this uh but there are
05:25:11.958 some 3D displays and one was provided to
05:25:15.160 me by the menco uh that it's able to
05:25:17.480 track your eyes and it will create two
05:25:19.680 images for one of the left eye and one
05:25:21.240 of the right eye so this sort of is sort
05:25:23.440 of like how VR works it's using the
05:25:26.160 framework called open XR which is
05:25:28.320 somewhat like VR or mix reality for both
05:25:30.600 eyes we need to create basically a
05:25:32.320 render um to make sure we have like this
05:25:34.798 3D feel so if you have the screen in
05:25:36.798 front of you it racks your eyes it makes
05:25:38.798 like an image it pops out literally in
05:25:40.600 your face or you can of course control
05:25:42.200 the strength so it's not the whole time
05:25:44.080 that you have this feeling of something
05:25:45.840 getting thrown into you um and this
05:25:48.600 screen is also at a 4K resolution which
05:25:50.878 in yeah it's a high resolution and we
05:25:52.760 need to do something at yeah R time real
05:25:55.400 time so definitely we'll probably do
05:25:57.480 some up scaling to like get back some of
05:25:59.400 that performance um so we need to have
05:26:03.878 this eagle and it needs to work on
05:26:05.200 something like a 4K 3D display so in
05:26:07.638 terms of performance definitely like
05:26:08.958 more on the lower side of things where
05:26:10.160 we have to be careful uh with what we
05:26:12.520 will draw on screen and not just simply
05:26:14.718 say oh yeah here are bunch of millions
05:26:16.920 of polygons just make it work uh so we
05:26:19.240 need to be careful with what we
05:26:21.680 do that's why the first method or the
05:26:24.280 first thing uh is called playing cards
05:26:25.920 or mesh cards uh very commonly used in
05:26:28.558 games if you ever played a game and you
05:26:30.718 looked very closely at how hairs are
05:26:32.680 done or feathers are done they're often
05:26:34.680 simplified by planes baked shapes uh
05:26:37.958 usually usually yeah usually they're
05:26:39.520 pretty simple geometry
05:26:42.400 wise um so yeah what there are in this
05:26:44.878 case is for each feather we will have a
05:26:47.480 plane in our case and the detail will
05:26:49.280 come from uh texturing or from a small
05:26:51.760 texture um as you saw from the talk
05:26:54.440 before here from jonal uh basically in
05:26:56.400 Houdini now with the new feathers each
05:26:58.000 feather is literally just one simple
05:26:59.840 primitive or line or curve so we just
05:27:01.920 basically into Data curve and converted
05:27:03.798 which I will quickly talk about in a
05:27:06.718 second uh then for the texturing I made
05:27:09.520 this very simple texture uh because
05:27:11.520 often again with games we want to have
05:27:13.480 like tilable textures or repeatable
05:27:15.000 textures and be careful with our
05:27:16.878 budgeting uh in that so I made this
05:27:19.120 quick texture with some of these uh
05:27:20.638 feather tools it's very simple uh uh
05:27:23.878 thing very simple couple feathers you
05:27:26.000 can of course get more extensive but
05:27:28.040 this will be like a quite small texture
05:27:30.000 and you can also see like for each hair
05:27:31.480 I added a random color so I can uh in
05:27:34.878 the Shader later on I can boost for
05:27:36.638 example a bit more uh of of each hair
05:27:39.520 individually if I want
05:27:42.920 it then yeah we are in Houdini so we
05:27:46.400 will probably want to do a tool for this
05:27:47.920 so we probably want to think about
05:27:48.958 making hdas and processes to uh take
05:27:51.558 something that looks very high quality
05:27:53.240 cinematic and try to process that
05:27:54.920 automatically because we want to build
05:27:56.798 tools to do things for us automatically
05:27:59.280 and the tool that I will talk about a
05:28:01.280 bit more is of course it will just take
05:28:03.320 the feather lines uh convert them into
05:28:05.920 simple plain shapes uh the there will be
05:28:08.558 specific UV processing as it has to
05:28:10.558 match uh that texture that I just showed
05:28:12.680 you so we need to make sure that they
05:28:14.040 fit on that specific locations on the
05:28:16.280 texture um and you can also apply some
05:28:19.280 vertx colors if you want to to send that
05:28:21.360 to in real and do something with it uh
05:28:23.878 you can that can do that as well of
05:28:27.120 course so yeah let's talk a bit about
05:28:29.280 the breakdown of how this yeah small
05:28:31.840 tool Works um so this will be the output
05:28:35.160 it will be just your ego but everything
05:28:37.320 again will be simple ified into these
05:28:39.440 plain cards so you can either use some
05:28:41.120 of the methods that uh side effects
05:28:43.000 provided you with some of the simplified
05:28:45.600 card shapes uh tools uh you can also do
05:28:47.878 something else um this is what I ended
05:28:49.760 up with this is roughly how it looks
05:28:51.280 like very roughly uh the tool itself I
05:28:53.840 made like a quick interface on that so
05:28:55.958 we can manipulate the width a bit in
05:28:58.600 case we have like a custom texture and
05:29:00.638 we want to maybe tweak the width or
05:29:02.558 maybe there's some art direction that we
05:29:04.600 can always tweak things here and there
05:29:06.200 because we will not perfectly match uh
05:29:08.280 what we have in Houdini it's possible to
05:29:09.760 do that but I want to work with like a
05:29:11.638 smaller texture and map some of the uh
05:29:14.480 the the feathers on the texture there's
05:29:16.360 also like a remapping range which I will
05:29:18.000 talk a bit more about um in a
05:29:21.080 second so we have our texture so this is
05:29:24.360 my texture that I talked about before
05:29:26.320 and we have our geometry so we basically
05:29:28.160 want to have an idea about how can we
05:29:30.400 map for example the large feathers uh of
05:29:33.120 the texture to the larger planes uh same
05:29:35.558 with of course but then if I have a
05:29:37.040 smaller feather I want to map to a
05:29:38.520 smaller plane so we'll talk a little bit
05:29:40.600 about some logic or Loop that I did to
05:29:43.280 quickly do
05:29:44.920 that uh so again this is what was uh
05:29:48.280 provided so this is sort of like the the
05:29:49.798 eagle uh feathers um this is just again
05:29:53.798 those 8,000 uh curves that we have each
05:29:56.360 of them is a
05:29:58.480 feather and I will start out by just
05:30:00.878 measuring them um I just want to have a
05:30:03.200 better idea where like small feathers
05:30:05.320 are and when large feathers are so I
05:30:07.080 just have a better uh understanding how
05:30:08.798 to then map the texture uh in a moment I
05:30:11.558 will also do a remapping of that um so
05:30:14.360 we have a maximum value which could be
05:30:16.878 something like three or five and we have
05:30:18.320 a minimum value which could be 0.1 or
05:30:21.520 two could be something so I just want to
05:30:23.718 remap those values to zero to one range
05:30:26.080 and this will then later be used in my
05:30:28.040 texturing step so if something is large
05:30:30.360 I know I have to take the larger texture
05:30:32.680 or the the larger uh feather shape on my
05:30:35.240 texture like you see basically here so
05:30:38.200 my texture has basically also like a one
05:30:40.760 a 0 to one range my Eagle I will also
05:30:43.120 calculate an attribute from 0 to one and
05:30:45.480 this is sort of roughly how I will do
05:30:46.840 the mapping between like a small feather
05:30:48.558 and a large feather just matching the
05:30:50.120 zero to one values uh which you will see
05:30:52.440 a bit more uh in a
05:30:55.320 second so then going back to the the FEA
05:30:59.600 itself so we have now some attributes
05:31:01.920 available um the attribut is mainly done
05:31:04.400 for detection process which I will
05:31:05.798 handle in a moment but now we still hand
05:31:07.958 need that geometry so this is still um
05:31:10.440 simple curves so again you could use
05:31:12.320 some of the Houdini uh 20 tools to
05:31:14.680 automatically create um geometry shapes
05:31:17.440 of that I did it slightly another way uh
05:31:20.638 just to show you that there is a lot of
05:31:22.798 data to work with and there are many
05:31:24.520 ways of approaching something in Houdini
05:31:27.080 I uh used a scaling and yeah you might
05:31:30.080 not fully see here but if you're
05:31:31.400 familiar with hini you can use something
05:31:32.680 which is called a p scale which is like
05:31:34.080 a default scaling attribute and I can
05:31:36.160 just simply say that the width is equal
05:31:38.520 to my P scale multiplied by certain for
05:31:41.080 example value um so the wood is default
05:31:43.400 attribute from the feather tools so
05:31:45.718 there the feather tools itself have a
05:31:47.558 bunch of uh data and attributes on them
05:31:49.878 so we can literally yeah make something
05:31:51.878 with that or do something with that so
05:31:53.520 in this case I used to WID in my P scale
05:31:56.920 then I will also use the bar uh Barb
05:31:59.400 orientation and rename it to orient
05:32:01.320 which yeah some here in the bottom but
05:32:03.878 uh I just rename this to or just the
05:32:06.320 default Orient attribute so again if
05:32:08.000 you're familiar with hini audient is
05:32:10.080 basically a recognized attribute by
05:32:12.160 default to handle certain uh rotations
05:32:14.520 on um on copying things or doing things
05:32:18.878 uh so with that information about
05:32:20.440 scaling and rotation this is then used
05:32:22.840 in a sweep note so again this is just by
05:32:24.600 default recognized and we can have these
05:32:27.040 plain uh cards basically from a sweep
05:32:29.520 note so in this case I just simply used
05:32:30.958 the sweep note so just set on ribbon
05:32:32.680 methods with like the lower poly counts
05:32:34.400 and also it's yeah all the way down here
05:32:36.600 in bottom uh there is a toggle to enable
05:32:38.600 UV uh which is really cool um so our UV
05:32:43.320 uh so we have this mesh now looks okay
05:32:45.480 sort of and we then now have our UV of
05:32:48.240 that mesh so the UV of a sweep note
05:32:50.558 could look like this uh which is pretty
05:32:53.160 cool it's sort of like quite
05:32:54.920 controllable um so I want to of course
05:32:57.200 do some processing to Define exactly
05:32:59.920 where do I now put this on my texture
05:33:01.638 like I talked before I had these five
05:33:03.200 different options in my texture and I
05:33:05.000 want to now Force this in one of those
05:33:06.638 five locations
05:33:08.360 um what I will usually do if I do
05:33:10.320 certain more complicated UV processing
05:33:13.240 is I actually convert my UV space into
05:33:16.600 the world scene so it's also here at the
05:33:18.638 bottom so I'm going to say that at
05:33:20.080 position is equal to my UV uh uh
05:33:23.120 locations so it will just basically show
05:33:25.400 up now in the 3D viewport where my UV
05:33:28.160 was so I don't see my uh Eagle anymore I
05:33:32.040 just see simple planes now in the
05:33:34.280 viewpoints so we want to Loop over then
05:33:36.760 each plane and we want to find out which
05:33:39.280 of these five options is basically uh
05:33:42.360 interesting to sort of like map on or
05:33:44.360 scale on
05:33:46.520 to as I mentioned before we have have
05:33:49.280 been storing this attribute from 0o to
05:33:51.360 one which of like matches the the size
05:33:53.558 of a Feather so if you if I would add
05:33:55.878 more feathers I just need to keep
05:33:58.080 consistent with the 0o to one range and
05:33:59.878 I just automatically map to that so the
05:34:02.440 largest one gets one and the smallest
05:34:04.440 one gets zero and everything in between
05:34:06.200 gets some float f tell you that sort of
05:34:08.920 roughly represents those
05:34:11.200 sizes so as you can see yeah this is
05:34:13.240 just basically the bounds there is also
05:34:14.480 I think a lapse tool to get like a
05:34:15.718 bounce from a texture uh there of course
05:34:17.760 other ways to uh to get the bounce or
05:34:19.958 you can just do manually in this case it
05:34:21.718 was only five but many options to do
05:34:23.718 this
05:34:24.958 again then uh we have the green one the
05:34:27.878 green one is again my original feather
05:34:30.040 from the eagle and the orange ones are
05:34:31.920 my five different options uh where my
05:34:35.840 green one could live or where my green
05:34:37.958 one or my feather one needs to map to so
05:34:41.120 I'm just quickly displaying here those
05:34:42.840 values that I made internally again
05:34:44.558 those 0 to one values those uh scale
05:34:47.000 reference values uh so let's say my
05:34:49.280 green one or my current feather one is
05:34:51.160 0.5 and I need to find something that
05:34:53.240 sort of roughly is uh as close as
05:34:56.120 possible uh this can be done by a little
05:34:58.400 code snippet can be done in many other
05:35:00.718 ways I just uh made an array assorted
05:35:03.480 array of these five options Loop through
05:35:06.280 them see if something's bigger and just
05:35:07.920 take the one that's sort of like closest
05:35:10.878 um then I extract the one that is sort
05:35:13.840 of like the close one and I will just do
05:35:16.000 a match size so this n will be able to
05:35:17.958 force that into location and we can also
05:35:19.878 scale it up to that so I'm taking the
05:35:21.878 feather and I'm sort of like scaling and
05:35:23.360 stretching it a bit on that texture so
05:35:25.400 it has that detail from uh the texture
05:35:28.718 automatically so as you can see we just
05:35:31.360 yeah map on the texture because the
05:35:32.878 bounce shape is representing that um
05:35:36.000 correctly
05:35:37.878 so this is roughly how my Loop would
05:35:40.080 look like so on the left side we have
05:35:43.080 all the eagle planes so the the simple
05:35:45.558 card shipes from our eagle and on the
05:35:48.360 right side here we have our texture uh
05:35:51.160 plane so these five uh options that I
05:35:53.638 had where the that the feather could
05:35:55.558 live um the first step that I did is
05:35:58.040 just promoting the UV data from vertices
05:36:00.160 to points so I can convert them into
05:36:01.878 World space so simple Wrangle saying at
05:36:03.798 position is equal to UV we can get
05:36:05.718 everything into uh World space
05:36:08.040 then we go into this uh loop stuff where
05:36:10.840 we just basically say that uh for each
05:36:13.558 feather I want to look uh which option
05:36:15.878 is basically the best one to to fit uh
05:36:18.840 and then once we have the option that's
05:36:20.840 closest we basically then say uh get the
05:36:23.878 matching part and just force scal it
05:36:26.080 with a match size not for example um
05:36:28.798 there are many other ways on like maybe
05:36:30.240 cleaning this up and doing it more
05:36:31.920 compactly it's yeah you can go anywhere
05:36:35.200 from here or add more features uh
05:36:37.120 another thing that I want to mention if
05:36:38.680 you don't have used compile Loops before
05:36:41.480 uh so basically using a compile Loop
05:36:43.558 will save uh many seconds so we are
05:36:45.958 looping over 8,000 F that means that
05:36:47.920 there is a loop of 8,000 times so doing
05:36:50.440 this in a compile Loop means that we can
05:36:52.040 actually do this faster uh so that's of
05:36:54.718 course recommended in case uh it could
05:36:58.040 work for you compil are always
05:36:59.680 interesting to uh to use now my final
05:37:03.120 output or the output that I have at the
05:37:04.638 moment still is uh just planes and the
05:37:08.400 world but uh we want to convert this
05:37:10.878 back into UV so I'm going to use the UV
05:37:12.638 projector note and I will convert or I
05:37:15.200 will save the UV uh like this so my UV
05:37:17.840 now fully represents my options for my
05:37:20.718 texture and then the last step uh I
05:37:23.718 basically restore the position by using
05:37:25.878 the rest it's here in the bottom but
05:37:27.840 probably won't be able to see it uh so
05:37:29.798 all the way at the beginning if you're
05:37:30.958 familiar some hini processor also use
05:37:33.080 the attribute called rest so we save out
05:37:35.920 that value um and then I just here
05:37:38.600 reference it back to restore the
05:37:40.160 original position because I had
05:37:41.558 everything into simple planes uh from
05:37:43.638 the UV space so I'm just making now a
05:37:45.878 full eagle back
05:37:48.558 again and here's a quick demo of that
05:37:50.920 tool so you can see this remapping range
05:37:53.480 is controlling where the scattering from
05:37:55.760 the texturing happens so I can actually
05:37:57.440 manually control roughly where the large
05:38:00.080 feathers are where the small feather are
05:38:02.040 I could improve on this by adding more
05:38:04.000 Randomness or doing other things or
05:38:06.080 looking at different kind of at Utes
05:38:07.840 from the original inputs here I'm going
05:38:10.240 to quickly just preview the texture on
05:38:11.760 it so you can see we're just mapping
05:38:14.558 these values so this is just a rough um
05:38:18.080 rough setup to get something that is a
05:38:20.040 bit more cheaper in in poly
05:38:22.200 count so getting this into game engine
05:38:24.600 like in real uh we have something like
05:38:26.600 this so terms of geometry Wise It's a
05:38:28.798 decent amount of geometry but still
05:38:30.360 quite uh reasonable definitely for the
05:38:32.920 the 3D screen that I had to work with
05:38:34.558 this is I think uh about 100 ,000 um
05:38:38.558 triangles so it could inory be lower
05:38:40.878 like I could reduce it way more um but
05:38:43.760 it's the only object to render so it's
05:38:45.440 pretty much fine in this case uh so one
05:38:47.760 more thing to do here is just this is
05:38:49.718 just still the geometry this is what I
05:38:51.240 got from hini simple uh plane shapes so
05:38:55.040 I will just apply a certain Shader on it
05:38:56.798 that has that extra detail you can add
05:38:58.718 some normals you can do some more other
05:39:00.200 fancy things uh of course can use like M
05:39:03.120 opacity and so on um another thing or a
05:39:06.718 quick trick is I blend also some of the
05:39:09.558 sort of like yeah occlusion or contact
05:39:11.600 shadows in this texture so it actually
05:39:13.920 is a bit more convincing or the blending
05:39:15.840 between this beak and the feather is a
05:39:18.760 bit less noticeable uh just because yeah
05:39:21.478 in game mentions we cannot render
05:39:23.120 Shadows very detailed or have like very
05:39:24.798 detailed ambient clusion things like
05:39:26.000 that so uh I just baked it in so it like
05:39:28.798 was always a bit more Smoother by
05:39:31.320 default and that's Al roughly what you
05:39:33.638 can get this is sort of like roughly
05:39:35.040 what it ended up with uh as as results
05:39:37.798 so this pretty much worked pretty well
05:39:40.440 on those 3D uh displays so again there's
05:39:43.200 a bunch of other things involved like
05:39:45.040 this is of course upscaling to the 4K
05:39:47.440 resolution uh the settings are like
05:39:50.360 pretty in intermediate because I had to
05:39:52.000 make sure this runs on like uh multiple
05:39:54.160 PCS so this was not to run on like the
05:39:57.000 latest uh graphics cards but also just
05:39:59.080 on Old systems so there's some like
05:40:01.240 tweaks uh and settings uh just to make
05:40:03.400 it sure it runs really well on on on
05:40:05.360 various oft systems
05:40:08.240 now this was the playing card method
05:40:10.600 which is just generally often used in
05:40:12.600 games and this will work for many
05:40:14.600 different games and applications or if
05:40:17.160 you just need like a cheaper version uh
05:40:19.240 you can just use those playing cards now
05:40:22.280 going to the other method which is
05:40:24.000 called The Grooming
05:40:25.200 plugin this is what inreal has uh as
05:40:28.478 option so if you use other game engines
05:40:31.040 or other applications you might have to
05:40:32.958 look into what they offer I'm just going
05:40:34.558 to quickly go over what uh unreal here
05:40:36.760 has as
05:40:38.200 option so it's pretty much simple you
05:40:40.638 can go into the plug-in settings and
05:40:42.520 just everything that has the grooming we
05:40:44.240 can just say enable and we specifically
05:40:47.000 are looking for The olymic Grooming
05:40:48.520 importer because essentially we will
05:40:50.120 make an olymic file in hini and just
05:40:52.280 import that and that's almost roughly it
05:40:54.638 so the process there is is pretty much
05:40:56.478 simple and you will see here in a
05:40:57.920 seconds so again if we go to Houdini we
05:41:00.320 have that eagle so this is what you have
05:41:02.558 seen before so for each um uh primitive
05:41:05.440 here we have a feather uh but we need to
05:41:08.160 unfold everything or the the condense
05:41:10.360 tool so basically everything is now
05:41:12.798 individual hairs so everything like I
05:41:15.520 said is a hair has about
05:41:18.120 500,000 uh hairs or Primitives so it's
05:41:20.878 quite detailed mesh um Theory should be
05:41:24.478 again bit more optimized and you will
05:41:26.558 see the reason uh why um then to import
05:41:30.240 this to in real you can use a lab tools
05:41:32.520 called unreal groom export this actually
05:41:34.680 has uh been there before but it also
05:41:37.478 perfectly works fine with existing or
05:41:39.558 with the new tool sets from the feather
05:41:41.958 uh so you basically need to plug in all
05:41:43.200 these hairs and some guides and it just
05:41:45.920 will be able to make those uh Olympic
05:41:49.080 files uh for you uh so it basically will
05:41:51.680 store attribute data that could
05:41:53.520 potentially be used in inreal as
05:41:55.718 well so dragging this Olympic file into
05:41:58.240 in real we will see this popup that just
05:42:00.360 like hey this is actually a groom import
05:42:02.718 we can see some validation so in case
05:42:04.520 you want to send over some additional
05:42:06.558 attributes like like the color or the
05:42:07.878 roughness there is some options for that
05:42:09.760 as well I kept it quite simple and
05:42:12.920 pretty much we get this out of the box
05:42:15.320 this is in an real five um rendered um
05:42:18.760 so there's not much tweaking that I did
05:42:20.760 here this is using almost like the
05:42:22.040 default shading they provide they
05:42:23.440 provide of course uh shaders for this
05:42:25.878 materials for this so besides enabling
05:42:28.558 this plugin they provide you some
05:42:29.920 content to make sure the hairs roughly
05:42:32.280 look uh good so this looks pretty much
05:42:35.840 uh yeah quite convincing thing you can
05:42:37.638 really feel like it's yeah hair like fur
05:42:40.120 like uh so it's pretty much uh quite
05:42:42.840 good then um again going back to some
05:42:46.400 optimizing there they have this menu
05:42:48.120 filled with settings to change a lot of
05:42:50.400 things because yeah this mesh is pretty
05:42:53.160 heavy um so there lot of options to
05:42:56.000 start to think about optimizing and
05:42:58.080 doing different things you can always
05:42:59.558 see at the the first two settings are
05:43:01.400 about decimation so curve decimation
05:43:03.320 vertex decimation so we can lower those
05:43:05.600 values but they essenti mean like if we
05:43:08.440 for example would say vertex decimation
05:43:10.160 that they will delete uh literally the
05:43:12.080 points or vertices on this mesh uh which
05:43:14.920 if you do too much you will start to see
05:43:17.000 gaps in the mesh because they're just
05:43:18.840 deleting uh those parts so it's it's a
05:43:22.160 bit tricky like if you're aiming for
05:43:23.600 like let's say I want to have something
05:43:25.080 with virtual production it's to be super
05:43:26.680 high in quality then you probably want
05:43:28.400 to just leave it as close as possible um
05:43:30.638 if you start to reduce it too much you
05:43:32.440 will just yeah start seeing the the gaps
05:43:34.680 especially again for those 3D screens
05:43:36.360 this is like then mesh that comes very
05:43:38.240 close to your to your face so you don't
05:43:39.878 want to uh suddenly have yeah hairs uh
05:43:43.520 Missing or gone it will be quite
05:43:45.280 noticeable as you will be just sitting
05:43:47.320 in front of
05:43:49.000 this uh there has also been some talk
05:43:51.558 about the unreal grooming plugin with
05:43:53.440 Houdini before at the games Hive uh this
05:43:56.360 one is from Morgan Moore he made this
05:43:58.520 Eagle in Houdini and did some conversion
05:44:01.360 with this Olympic file he opened in in
05:44:03.798 real he had some animations on it uh he
05:44:06.080 also used some more L and optimized
05:44:08.040 settings but still this of course comes
05:44:09.760 at a cost it's not something that uh
05:44:11.840 will suddenly magically get cheaper um
05:44:15.160 and of course uh you can also actually
05:44:16.600 see here there is also a tab called
05:44:18.520 cards so often we might combine both
05:44:21.280 methods the card method and the The
05:44:23.360 Grooming method uh to work together
05:44:25.240 because we will usually work with like
05:44:26.798 LOD so if something is far away we just
05:44:29.478 automatically switch to the cheaper
05:44:31.320 version um and then if you want to
05:44:33.680 quickly get I just quickly put as start
05:44:36.320 comment in real and this was about
05:44:38.120 almost 20 million uh yeah triangles to
05:44:40.958 draw so that's huge amount of triangles
05:44:43.400 especially again has to work on those 3D
05:44:46.240 screens which was not really much in
05:44:48.320 favor so even if I would try to optimize
05:44:50.320 this it will be still uh difficult so
05:44:52.638 like uh any million amount of polygons
05:44:55.478 will be too much for uh this 3D screen
05:44:57.840 in this case if you don't have like the
05:44:59.200 most fanciest
05:45:01.320 Hardware then yeah quickly going to
05:45:03.120 summarize some of the things that I've
05:45:04.200 talked about
05:45:05.280 here um comparing those two I think it's
05:45:08.680 the difference is definitely noticeable
05:45:10.638 of course like the lightning and the
05:45:11.760 shading is is is yeah is quite different
05:45:14.160 I could have try to like match it super
05:45:16.280 close but um that would have yeah take
05:45:19.478 some more time and and more thinking um
05:45:22.200 but it's definitely like interesting to
05:45:23.920 just uh know that you can have something
05:45:26.040 more performant or you can have
05:45:27.400 something that looks really high quality
05:45:28.840 if you want to have something cinematic
05:45:30.240 for Dr production it's definitely doable
05:45:32.200 within real um so quickly yeah if you
05:45:34.638 use planes of course it's more optimized
05:45:36.080 it's more low poly
05:45:37.558 uh you have more control in and real in
05:45:39.320 terms of the shading so you can do a lot
05:45:40.878 of things with the textures as well so
05:45:42.798 we I kept it simple by having one simple
05:45:45.000 small texture with five feathers you can
05:45:47.840 expand on this you can do something more
05:45:49.520 fancy you can do some more FFX um with
05:45:53.200 shadings and so on in the real uh the
05:45:55.400 downside of this is that of course yeah
05:45:56.718 there is some sort of like setup
05:45:57.920 involved into making the cards making
05:45:59.520 sure the there are UVS or it's baked
05:46:01.718 down uh so there's a few steps involved
05:46:04.718 um compared to the other method and in
05:46:06.760 this this case it's not 100% the same uh
05:46:09.280 as you can see it's just built with
05:46:10.878 cards and a simple texture um you can
05:46:13.558 get quite Closer by for example baking
05:46:16.120 uh the texture more accurately to uh the
05:46:19.400 original Eagle so that's would be
05:46:21.638 possible but it's still might not be
05:46:23.520 100% the same if you if if it's really
05:46:25.440 important for you it's the same then the
05:46:27.080 other part is like the Grom plugin yeah
05:46:29.280 I mean this pretty much is getting more
05:46:31.080 realistic uh it's pretty much the same
05:46:32.878 asini because we're loading the exact
05:46:35.080 same data so it's just the file that has
05:46:37.760 every single hair so it just opens it
05:46:40.840 and has the same data and yeah one of
05:46:43.600 the bigger downsides is just yeah
05:46:44.878 performance we have to make sure that
05:46:46.240 yeah what type of platform or project
05:46:48.240 you're working on might uh change here
05:46:51.120 and that's basically it so thank you
05:46:53.638 very much for watching my
05:47:01.798 call I don't know if there are questions
05:47:03.958 otherwise there might be some drinks or
05:47:06.638 some left over cheese and
05:47:17.000 wine okay question there is
05:47:19.878 one got a couple of minutes for
05:47:22.440 questions let me get the mic to you
05:47:30.558 though um th this goes to the Houdini
05:47:34.000 groom or excuse me the unreal groom
05:47:35.878 plugin that you had used with all of the
05:47:38.120 alumic stuff did you do that uh with
05:47:42.520 physics simulation enabled or was that
05:47:44.520 just purely static yeah mostly it was
05:47:48.160 static um I at the beginning I I did so
05:47:52.600 animation on the on the playe cards um
05:47:55.240 but for some people watching it on a 3D
05:47:57.080 screen they felt not too comfortable
05:47:59.638 because if it's the first time you see
05:48:01.000 this 3D screen people prefer to see
05:48:03.760 something a bit more static um so I
05:48:06.520 didn't try any more fancy simulation uh
05:48:09.718 on top of that I kept it quite static to
05:48:12.840 if someone is in front of the screen I
05:48:14.520 had beginning also had it like moving
05:48:15.840 around like Banning around but I
05:48:18.200 basically cut that because yeah they
05:48:20.160 some feedback that I got was basically
05:48:21.638 people don't always like it when it's
05:48:22.840 the first time they they see this this
05:48:25.280 3D object in their face suddenly moving
05:48:27.160 and and animating so unfortunately I did
05:48:29.558 not Ry any too much with that um then
05:48:33.000 brief followup then um have have you or
05:48:36.160 anyone that you worked with actually
05:48:37.558 tried to have sort of that hierarchical
05:48:40.400 structure of Curves um in the groom
05:48:42.958 plugin and have it work with simulation
05:48:46.280 because my personal experience says I
05:48:48.360 don't know how that would work yeah
05:48:50.798 fortunately I don't know too much just
05:48:53.600 check
05:48:56.718 thanks maybe one more question yes down
05:48:59.200 there in the front
05:49:10.558 yeah great uh great presentation a
05:49:12.600 question about sort of the the first
05:49:14.680 card method like what's the reason for
05:49:16.240 not for example just replacing the cards
05:49:18.400 with just instances of it because you
05:49:20.080 have the length of the curves and you
05:49:21.280 could I guess just instance like the
05:49:23.760 couple of ones that you have there uh on
05:49:26.160 the points get the skills from it and I
05:49:28.558 guess it would be even more optimized or
05:49:30.520 like downsides to doing it like that cuz
05:49:33.360 then you just have the points and you
05:49:35.520 could crank up I guess the amount of
05:49:38.120 feathers even
05:49:39.958 or um I mean interesting is is
05:49:43.638 is uh a instin we still have like we
05:49:47.000 spaming still like a lot of polygons
05:49:48.958 right um the main thing that we do this
05:49:50.798 is is to just reduce the poly count um
05:49:54.440 and often this is this has to be uh if
05:49:57.440 this in case would be animated in games
05:49:59.160 it's it's much easier if it's just like
05:50:01.160 one unique mesh that's for example
05:50:03.080 animated that would be easier to work
05:50:05.000 with skeleton meshes or something rather
05:50:07.320 than trying to like instance all these
05:50:09.478 uh components um but inting in theory
05:50:13.680 you could try to do that but most of the
05:50:15.440 time it's they just keep it to one mesh
05:50:18.280 it's it's easier to handle with um and
05:50:21.718 it's also just loading as one object and
05:50:23.878 and game doesn't have to then uh keep
05:50:26.920 that in mind
05:50:30.958 thanks thanks so much Simon awesome
05:50:33.558 thank you
05:50:36.530 [Applause]
05:50:38.060 [Music]
05:50:43.160 hello everyone uh welcome to the session
05:50:46.360 before lunch um
05:50:49.440 so uh yeah I just want to preface this
05:50:52.320 with the uh like mention that a
05:50:56.920 colleague helped to set the title
05:50:59.760 earlier um because I didn't have time to
05:51:03.040 pick three words but if you're here
05:51:05.920 because you're expecting like classic
05:51:08.080 modeling tools um go get a coffee and
05:51:11.680 come back in half an hour cuz this is
05:51:13.558 not what this is um this is actually a
05:51:17.558 presentation on uh Point Cloud tools
05:51:20.718 namely PC reduce PC normal and PC
05:51:23.520 Surface uh we're also going to look at a
05:51:25.840 bit at quad remesh and also material ex
05:51:29.080 procedural uh 2D notes that are included
05:51:31.558 in houi
05:51:33.040 20 so Point clouds um
05:51:37.600 in 19.5 there was the lighter import and
05:51:41.520 uh you can import like your scan data
05:51:43.840 but in Houdini 20 there are the nodes
05:51:47.040 for reducing uh Point Cloud reduce for
05:51:50.160 reducing like redundant points that you
05:51:53.680 you may or may not need uh namely for
05:51:56.080 probably terrain scans that are like
05:51:58.638 very large scale and if you don't want
05:52:01.160 to waste like computation time to just
05:52:04.558 process and mesh things like you can
05:52:07.000 just call them then there's the point
05:52:09.320 Cloud normal where Houdini needs to be
05:52:11.400 told a direction to generate a surface
05:52:13.600 and then so uh you get a mesh with the
05:52:17.000 uh Point Cloud surface uh and all these
05:52:19.760 have settings within and we're going to
05:52:21.760 take a look at some of these today so uh
05:52:25.120 the first one we're going to start with
05:52:26.798 so I got this mesh from open topography
05:52:29.120 you can also download that yourself or
05:52:31.600 uh any other meshes that are available
05:52:33.280 and try this at home um
05:52:37.320 let's go into
05:52:39.160 Houdini
05:52:41.120 so as I mentioned uh earlier we have the
05:52:45.440 letter import and one thing I really
05:52:48.320 want to point out because uh I was smart
05:52:52.200 and try to position the things come on
05:52:56.878 um position the scans uh with a separate
05:53:00.920 transform node like after the lighter
05:53:03.400 import and I was told no don't do that
05:53:05.680 cuz your results are going to be like
05:53:08.160 pretty poo um so you always want to just
05:53:11.760 religiously click on immediately move
05:53:14.478 centroid to origin because the closer
05:53:17.080 you are to origin like your your scan
05:53:20.280 data uh the better the processing of
05:53:22.958 everything will be and then everything
05:53:24.718 else that you need to position rotate
05:53:27.798 and correct the uh scan data
05:53:31.440 so in my case you can see like yeah I
05:53:35.638 oriented it
05:53:37.120 correctly and you'll want to do that the
05:53:39.920 same for yourself so after that here is
05:53:43.798 the point Cloud reduce and the Vel size
05:53:46.120 is basically just like your resolution
05:53:48.760 so if we look at the import that's 17
05:53:53.280 million and after Point Cloud
05:53:56.360 reduce uh we are at 2.2 and I can even
05:54:00.400 just for the purpose of this uh oops
05:54:04.760 presentation just put it a bit low lower
05:54:07.200 okay maybe that's too low but we can
05:54:11.160 always change it right that's the beauty
05:54:13.440 of Houdini you can just like switch
05:54:15.080 things back after so okay maybe this is
05:54:18.558 too little um after that we have the
05:54:23.160 point Cloud normal and this is where we
05:54:25.840 are going
05:54:27.040 to
05:54:28.840 um enable a visualizer so in general
05:54:34.360 like having this option on allows you to
05:54:36.558 see the output of your mesh like your
05:54:39.440 your normal Direction and sometimes it
05:54:42.798 matters sometimes it doesn't um but I
05:54:45.200 find that if you if you do that for a
05:54:47.600 large scale it it does make a difference
05:54:50.080 um and then there's two methods this
05:54:52.718 Orient uh normals towards hint I was
05:54:56.280 told by the developer that uh this is
05:54:59.120 good for specific use case and in this
05:55:02.478 specific terrain that I have it didn't
05:55:04.520 actually give me the result that I want
05:55:06.080 so I can actually show you the
05:55:11.080 difference if we do that and he also
05:55:14.200 suggested uh to just make sure that you
05:55:16.798 don't set your y direction to just like
05:55:19.000 a one for up you want to just like one a
05:55:22.958 lot so just put a lot zeros behind it um
05:55:26.000 I think he even says
05:55:27.920 that yeah uh very high up in the y
05:55:32.360 direction so extra zeros one more thing
05:55:35.680 that I want to to highlight that you
05:55:37.958 should pay attention to is proximity
05:55:40.040 radius and Max neighbors so uh because
05:55:43.400 my scan data is so huge it's like what
05:55:46.320 125 kilm here and over on the other side
05:55:49.280 as well so it's a giant giant distance
05:55:52.878 you'll want to increase that because
05:55:55.320 normally if I just do the PC
05:55:59.440 normal by default uh the settings are
05:56:02.600 0.5 and 20 so um adjust it accordingly
05:56:06.920 uh smaller you have like yeah you can
05:56:09.080 use the the default settings but larger
05:56:12.600 trains this is optimal like between 5
05:56:16.160 and 15 I
05:56:17.798 think uh and then after that we can make
05:56:20.558 our
05:56:21.440 surface and this is going to cook for a
05:56:26.280 bit oh it already cooked okay um and so
05:56:31.040 the max subdivision I think by default
05:56:33.558 is by 10 and the 12 is just like giving
05:56:36.600 it higher and the boundary type by
05:56:39.240 default is set to zero but because our
05:56:40.840 mesh is um our scan is like open we set
05:56:45.120 it to open and you
05:56:47.558 can have a look
05:56:51.080 at uh some areas I guess actually it's
05:56:55.080 not visible here um the scan data should
05:57:01.600 show there were a lot of holes and gaps
05:57:05.400 and what the surface PC Surface did is
05:57:08.440 tried to fill those and some of those
05:57:10.160 are kind of not usable um so you might
05:57:13.680 as well just K them which is what I did
05:57:16.320 here um so in the end I get something
05:57:19.680 like this and well I don't even want
05:57:21.840 that part but I can just adjust it
05:57:26.280 afterwards um this
05:57:29.478 guy yeah so that's
05:57:32.760 the uh terrain example the large scale
05:57:37.400 example uh
05:57:39.520 the other version we're going to look at
05:57:42.160 or the other example is like a smaller
05:57:44.160 scale one where it's like a shoe scan so
05:57:49.000 I have the shoe here I'll show you after
05:57:50.878 but basically I didn't need to use the
05:57:53.558 point Cloud reduce because I'm okay with
05:57:56.120 that amount of uh points and yeah the
05:57:59.878 point Cloud surface is used after that
05:58:01.840 so here on the left is my import after
05:58:06.400 that is my surfacing and then over here
05:58:08.680 actually is where I applied quad REM
05:58:11.160 mesh why because I wanted to print this
05:58:14.080 shoe and yeah this is the shoe tiny shoe
05:58:18.798 so you're welcome to check it out after
05:58:20.878 uh because it's always cool to like you
05:58:22.760 work in 3D and you know you just look at
05:58:24.958 it all the time but when you have it in
05:58:26.558 your hand it's like totally different
05:58:28.240 thing um and if you anybody does 3D
05:58:30.958 printing here you know that you want to
05:58:32.680 have just peace of mind to not have jagy
05:58:35.360 surfaces so that's also why I did the
05:58:37.878 quad remesh um just so that I can have a
05:58:40.840 smooth output and it would have been
05:58:42.360 even smoother if I printed in resin but
05:58:44.400 I didn't have time so this slide is uh
05:58:48.200 showing the curvature Edge flow and uh
05:58:51.520 it's from point Z over here on the left
05:58:54.280 until the right is one and you'll notice
05:58:56.878 that there's a lot more like stuff going
05:58:59.600 on on the one setting uh I asked what
05:59:03.120 are those blue and red dots and um
05:59:06.440 they're called
05:59:07.958 singularities so yeah uh basically what
05:59:12.080 I actually used was guide output it may
05:59:15.638 or like I'll show you guys the
05:59:17.320 difference after and it might not even
05:59:19.680 be noticeable but again like everything
05:59:21.920 depends on like what you need what kind
05:59:24.320 of mesh you you want to get what what
05:59:27.000 you're working with what scan data
05:59:28.360 you're working with and what are your
05:59:30.478 requirements so here you can see the the
05:59:35.600 like curves being visualized in the quad
05:59:38.080 remesh node uh as like guide weights and
05:59:42.478 they're at the max
05:59:45.000 and uh yeah let's oh yeah I have to say
05:59:48.360 thanks to mat Stella because this was
05:59:49.920 actually his attempt because I was just
05:59:51.360 going to show vanilla quad REM mesh so
05:59:54.920 um because we don't currently have a way
05:59:57.360 to directly easily generate the curve
06:00:00.638 guides within quad remesh this was the
06:00:04.200 kind of like this is what we to do in
06:00:06.478 the meantime on the
06:00:09.000 interim
06:00:11.440 so up here it's my shoe let's go
06:00:18.638 through and it's super tiny so as I said
06:00:21.638 like yeah different uh scale different
06:00:27.120 different settings of course so the
06:00:30.160 normal in this case I just like left it
06:00:31.958 as this I can even I can turn off my
06:00:34.160 visualizer I don't need it now
06:00:36.478 so here is the mesh of it and that was
06:00:40.958 pretty quick you saw uh and
06:00:46.478 if if you're not like me you might
06:00:49.600 actually read stuff in the notes that
06:00:52.440 has the option reverse normals instead
06:00:54.040 of putting next thr down so here is
06:00:57.120 actually the curves that I drew on that
06:01:00.958 shoe and you know it's actually pretty
06:01:04.440 messy I just drew it with a mouse so
06:01:06.638 there a lot of disconnects but I just
06:01:08.558 fuse them all together uh resample and
06:01:11.680 fuse it again and then
06:01:14.320 ultimately I get this
06:01:19.000 shoe and I template
06:01:22.878 that turn on the wireframe unshaded so
06:01:28.520 kind of looks like it follows
06:01:31.280 something but if I turn on the rest of
06:01:34.000 them
06:01:36.000 and see it might just be a placebo but
06:01:39.360 again like this is in beta as we
06:01:42.400 mentioned many
06:01:44.080 times
06:01:48.958 but is it this last one is the one with
06:01:52.680 the
06:01:54.120 actual guide weights at 100 the one at
06:01:58.120 the back is uh just where the curves
06:02:01.040 were drawn the first time because I
06:02:02.400 shifted the the geometry the one next to
06:02:05.440 it is you can even see the differences
06:02:07.718 actually so here um this one has the
06:02:12.478 same settings but with no guides so
06:02:16.000 looks better I think with guides seems
06:02:19.000 to work not fully
06:02:20.718 Placebo um in the back looks pretty much
06:02:23.798 the same it's more straight here I would
06:02:25.878 say it's kind of like got a curve here
06:02:28.718 and then this one you you guys might be
06:02:30.478 wondering like what what's going on here
06:02:32.958 this like it's pretty hideous
06:02:36.080 so this was actually something that the
06:02:39.120 developer mentioned as a suggestion to
06:02:41.920 try so again depending on what your scan
06:02:45.440 is uh the quad remesh is literally a
06:02:48.600 remesher so it will as a first
06:02:53.400 pass mesh your geometry so
06:02:58.798 let's just do that and there's two
06:03:01.878 options in this output which is
06:03:04.240 extracted mesh which are those two that
06:03:06.638 we have uh on this far end and then this
06:03:09.920 Global parameterization is actually
06:03:13.200 the the meshing like triangulation of it
06:03:16.958 and and I'm going to turn on some of the
06:03:19.718 visualizers within quadri mesh to show
06:03:22.400 you um you can see oh let me turn this
06:03:27.920 off this guy so everything's
06:03:31.080 triangulated
06:03:33.160 and you hit enter to get oh to the view
06:03:36.958 state so those F field singularities
06:03:40.760 these are those blue and red dots I will
06:03:43.200 ask Justin to do a master class to
06:03:45.240 explain in like proper mathematical
06:03:47.320 terms what these things do he said
06:03:50.080 something about them being like a
06:03:51.440 puncture in the mesh and it's sounded
06:03:53.200 like a a Teran space time continuum and
06:03:55.718 then the yellow things are seams I found
06:03:58.558 that uh this is not my PC this AAS but
06:04:02.200 when I was working on a MacBook or also
06:04:05.280 my PC see at work uh the seams and field
06:04:08.798 singularities visualizer made it quite
06:04:11.478 slow so if you don't care to see those
06:04:14.080 then just turn it off and it will be
06:04:16.000 much snappier and then the direction
06:04:18.600 field is where this is like doesn't have
06:04:22.478 any guides so that's why the mesh I
06:04:25.558 showed earlier was just like having
06:04:29.160 different can I actually see it no I
06:04:32.200 can't to do that so that's where I got
06:04:36.120 all this like kind of
06:04:37.958 irregularities um because it's not it's
06:04:41.520 not looking at anything but if I change
06:04:44.878 that here to the crease but that's yeah
06:04:49.718 the direction field and so you can see
06:04:52.878 these these things that are the the star
06:04:56.000 shapes those are
06:04:57.600 the uh the arrows that are oriented some
06:05:00.638 specific way and where all the super
06:05:03.920 concentrated areas are
06:05:06.320 is where the the action is
06:05:09.160 happening there's also an edge option in
06:05:12.360 field and basically I was told don't use
06:05:15.478 that so don't use that so uh what about
06:05:18.798 the other goodies in Houdini
06:05:21.080 19.5 for the material a procedural 2DS
06:05:23.920 we had just what you see here and in 20
06:05:28.478 we have quite a bit more these are just
06:05:30.400 like a few that I've highlighted and I
06:05:32.760 don't believe that we had time to cover
06:05:34.958 any of these or even mention it maybe
06:05:37.120 you CAU it in the feature scroll these
06:05:39.240 are some of them 2D uh procedurals and I
06:05:43.798 know Rob PK has already covered like
06:05:45.440 material ler and everything material
06:05:47.558 catalog and the AMD material library but
06:05:50.558 these are kind of like just patterns
06:05:54.920 that you could use
06:05:57.000 to you know change change your
06:06:01.600 shading and there's uh quite a few of
06:06:04.360 them and they all
06:06:06.120 have their own uh settings that you can
06:06:10.120 adjust so I think that's kind of it is
06:06:13.558 their time I don't know do you guys want
06:06:15.200 to see like the material Linker and
06:06:18.520 loading the uh like some of the default
06:06:22.760 materials that are available
06:06:25.160 or yeah I heard y but just a small I
06:06:28.920 don't want everyone else to be no okay
06:06:32.240 okay uh all right so
06:06:36.718 then I have a material Lor
06:06:41.080 here oops should leave on this
06:06:46.120 guy and so you have these two tabs that
06:06:50.320 are uh the rules and catalog and by
06:06:54.240 default it's I think set to the material
06:06:58.240 catalog but uh if you want to use the
06:07:02.000 material X
06:07:03.400 Library then you have to pick
06:07:06.440 oh no this is not my PC Atilla I'm going
06:07:10.400 to just
06:07:12.200 um write more things to your
06:07:15.280 dis so yeah
06:07:18.520 there's a filter here which works for
06:07:21.400 actually material uh the AMD material
06:07:24.280 Library as well as our material catalog
06:07:27.400 so I'm just going to pick some that I
06:07:29.920 found were
06:07:31.080 interesting um this guy for example
06:07:39.160 um then you'll see it
06:07:41.000 populate and I will mention also even
06:07:45.478 though it's probably not proper but just
06:07:47.520 so that nobody's
06:07:48.920 surprised on the Mac the selection and
06:07:52.000 assignment of the materials doesn't
06:07:53.920 quite work yet but on Windows it does so
06:07:57.400 we're going to do it this way uh and
06:08:00.718 let's pick a wood so let's just grab
06:08:05.600 this
06:08:07.360 one and assign that and I'm going
06:08:12.878 to collapse or expand everything and go
06:08:16.478 back to rules so that I can just let
06:08:18.920 Houdini know this is what I want
06:08:21.920 assignment for so this one I already
06:08:25.160 assigned it actually looks like it's
06:08:28.478 grabing from a previous
06:08:31.680 assignment and I'm going to disable this
06:08:34.080 because I want to see everything
06:08:36.520 and I just want to assign the stand
06:08:39.520 to the wood which is already there so
06:08:42.400 that's strange I'm just talking to
06:08:44.520 myself now about you all here I don't
06:08:46.958 actually let's try
06:08:55.080 refreshing maybe if I just kill this
06:08:58.920 guy do that again
06:09:08.080 okay there just had a weird hang
06:09:14.600 so I think that was mostly what I wanted
06:09:17.200 to show just uh like accessing the
06:09:21.360 material Linker like the assigning
06:09:23.878 materials from within material Linker
06:09:26.080 and the the 2D procedurals with the new
06:09:29.958 patterns and that's
06:09:34.000 it thanks
06:09:36.560 [Applause]
06:09:40.920 okay any questions or everyone can just
06:09:43.360 go and get
06:09:44.680 food yeah yes yes Paul or
06:09:51.520 wait thanks I have a question about the
06:09:53.958 point Cloud reduce um what does it
06:09:57.120 actually do compared to for example
06:09:59.200 something that I usually do is just use
06:10:00.878 a fuse swap uh to just you know fuse
06:10:03.040 points that are near each other um
06:10:05.080 because because a problem that I often
06:10:06.520 face is if I have very dense lighter
06:10:08.320 cloud like over a billion points udini
06:10:10.920 can't even load it um so I can't even
06:10:13.478 load it to reduce it so what I usually
06:10:15.360 do is I just import one every five
06:10:17.798 points for example and then just use few
06:10:20.000 SW so I was wondering you know what are
06:10:23.040 the benefits of using that soap over
06:10:24.920 just a fuse workflow uh I can't answer
06:10:28.600 that because I didn't deal with such a
06:10:30.440 high amount to test like as a as a demo
06:10:34.558 prep but
06:10:36.478 but uh I wish Paul Mark was here to give
06:10:39.878 a good answer um
06:10:42.798 maybe yeah it's a good test for us to to
06:10:45.558 go through maybe send one of your scans
06:10:48.558 and then we can okay thanks
06:10:55.200 yeah okay no more questions thank you
06:10:58.360 very much
06:11:00.790 [Applause]
06:11:06.600 n
06:11:08.700 [Music]

----------------------------------------
Contents of YouTube-Transcript/Entagma/Houdini Tutorial Space Filling Cable Generator.txt:
# tactiq.io free youtube transcript
# Houdini Tutorial: Space Filling Cable Generator
# https://www.youtube.com/watch/yhTMKMBpOXg

00:00:02.200 I recently stumbled over this fairly old
00:00:05.319 interview from side effects with gilia
00:00:08.160 games the makers of the video game
00:00:10.559 Horizon zero Dawn and in this interview
00:00:13.280 Vladimir lopatin quickly walks us
00:00:16.199 through the setup that he used to
00:00:18.080 generate these messes of cables for the
00:00:20.760 game and I like this result quite a lot
00:00:24.000 I really like the look of these cables
00:00:26.320 and I also quite like the main idea
00:00:27.960 behind the setup however again since the
00:00:30.519 setup is 7 years old now today I think
00:00:33.920 with a new version of hudini we can
00:00:36.040 build this a lot simpler and this is
00:00:38.480 exactly what I want to do today I want
00:00:40.360 to recreate the cable generator of horiz
00:00:43.600 zero Dawn let's quickly go over the main
00:00:46.320 idea behind the setup the thing that
00:00:48.039 makes it all work so to generate a
00:00:49.840 cables the first thing that we're going
00:00:51.280 to do is we're going to create a volume
00:00:53.760 of possible connections that each cable
00:00:56.559 can take and this is simply done by
00:00:58.399 filling a volume with lots of points and
00:01:00.480 lots of connections between those points
00:01:02.719 and then we pick a random path from one
00:01:05.479 start point to one end point and we
00:01:07.439 generate a smooth curve however this is
00:01:09.960 not everything we're doing we're also
00:01:12.560 using this curve to cut away a chunk a
00:01:16.080 noodle of our entire connections volume
00:01:19.560 so if we run the same thing again
00:01:21.720 another time now we get a second
00:01:23.880 connection however this connection can't
00:01:26.280 cross paths with a first connection
00:01:28.479 because again this is no a hole in a
00:01:30.960 volume and we can do this a third time
00:01:33.799 and we can do this over and over and
00:01:35.840 over again until there's no space left
00:01:38.799 and in the end we can get rid of the
00:01:40.680 remaining volume and now we have a nice
00:01:43.880 mess of non-intersecting very knotted
00:01:47.040 cables which I really really like so
00:01:50.200 that's the quick overview let's actually
00:01:51.960 build this I'm going to use this demo
00:01:54.240 scene in here you can start out with an
00:01:56.399 empty scene and we're going to drop down
00:01:58.360 H container and dive inside and I first
00:02:01.119 of all again want to build this volume
00:02:03.320 of connections to build this I'm first
00:02:05.320 of all going to start out with a line on
00:02:07.320 this line I want to set the direction to
00:02:09.440 the cais and I want to give it a length
00:02:12.440 of in this case let's say four like this
00:02:15.879 next let's give that line some volume
00:02:17.840 let's sweep it and drop down a sweep Noe
00:02:20.560 while the in let's set the surface shape
00:02:22.840 to round tube let's give it 16 divisions
00:02:26.519 and let's mainly increase the radius
00:02:28.720 here to value of .5 like this and I also
00:02:32.480 want to enable end caps as single
00:02:35.040 polygons and I want to enable an endcap
00:02:37.599 group like this now with this volume
00:02:39.560 done I first of all want to fill it with
00:02:41.360 points and for this I'm going to use a
00:02:43.440 points from volume like this wire it in
00:02:47.120 and since this is pretty regular let's
00:02:50.040 first of all adjust the number of points
00:02:52.360 in here let's have our value in here
00:02:55.000 like this but let's also increase the
00:02:57.200 Jitter scale and it's just increase it
00:02:59.480 to the maximum to 10 to get a nice and
00:03:01.680 random distribution like this now what I
00:03:03.879 also need is some start and end points
00:03:07.040 and I want to create them right at the
00:03:08.599 end of my sweep in here so what I'm
00:03:10.760 going to do for this is I'm going to
00:03:12.239 drop down a blast Noe and I'm going to
00:03:14.480 blast away everything but the end caps
00:03:17.440 and I'm also going to split my geometry
00:03:19.560 into this end cap and this end cap so I
00:03:22.440 in a split node and split by zero and
00:03:25.480 set the group to Primitives like this
00:03:28.239 then we're going to need two scatter
00:03:29.560 groups and in this case I'm just going
00:03:31.560 to leave this as is so do this for both
00:03:34.360 of our G streams like this and then
00:03:36.920 let's end with two groups let's set the
00:03:38.920 group name to start let's set a group
00:03:41.040 type to points and let's duplicate this
00:03:43.120 one more time below the other scatter
00:03:45.400 node and set the group type to end like
00:03:47.840 this now we have a whole mass of points
00:03:49.879 let's merge all of them together with
00:03:51.599 our merge node like this our Point
00:03:54.120 groups should still be there which they
00:03:56.079 are and finally let's draw our
00:03:57.920 connections so let's use a connect
00:04:00.040 adjacent pieces for
00:04:02.799 this and before I'm going to vir this in
00:04:05.599 let's set this up let's select ajason
00:04:08.280 points and let's reduce the max search
00:04:11.079 points to 10 to make this a bit lighter
00:04:13.480 on the CPU like this now this is our
00:04:16.199 main volume done now I first of all want
00:04:19.279 to create a f Lo that is able to carve
00:04:21.759 out these channels that I talked about
00:04:24.080 one by one let first of all drop down a
00:04:26.720 for loop with feedback this is going to
00:04:28.759 be our main Loop and for now let's set
00:04:31.080 the feedback iterations just to one then
00:04:33.600 let's zoom in on a loop the first thing
00:04:35.840 that I want to do in here is to find the
00:04:37.800 shortest path from one of our start
00:04:39.800 points to one of our end points let's
00:04:41.560 grab a fine shortest path Noe let's set
00:04:44.479 the output paths to from any start to
00:04:47.680 any end and let's set our start points
00:04:50.520 and our end points and we should get one
00:04:53.320 Noodle from one of the start points to
00:04:55.440 one of end points this is quite jaged so
00:04:57.840 let's smooth it let's drop it on a
00:04:59.320 smooth note and let's maybe set the
00:05:01.520 strength to 20 but you can just dial
00:05:04.280 this into your own Laing and now finally
00:05:06.560 let's use this noodle to carve out a bit
00:05:09.000 of our initial volume so for this let's
00:05:11.600 use a group expression and we're in a
00:05:14.080 main Loop stream in the first input and
00:05:16.360 a smooth noodle in here into the second
00:05:18.880 stream and now for the expression I
00:05:21.680 first of all want to set the group name
00:05:23.479 and let's call it blast and the
00:05:25.440 expression will be a near one because we
00:05:28.440 want to search for near point point on G
00:05:30.720 stream one so Noodle from our currence
00:05:33.080 points position so V at P or current
00:05:35.400 perimeter position this doesn't matter
00:05:37.759 that much in this case then I want to
00:05:39.720 enter a search radius which I'm going to
00:05:42.199 use a slider four and I'm going to call
00:05:44.800 the slider radius like this and finally
00:05:47.360 with all of this done I want to check if
00:05:50.280 the output of that function is not equal
00:05:53.360 to minus one because minus one will be
00:05:55.400 the output if our near Point function
00:05:57.600 does not find a point in that given
00:05:59.759 radius let's create a slider let's also
00:06:02.400 highlight our group expression and if I
00:06:04.199 now bring up the radius yeah we can see
00:06:06.759 a volume a curve in here appearing which
00:06:09.520 is exactly what we want let's for now
00:06:11.759 set the SC value of
00:06:13.880 1.15 or
00:06:15.840 0.15 and finally we're going to use this
00:06:18.560 group to blast away the group that
00:06:21.080 created like this and our Channel inside
00:06:23.880 the volume so now at this point we can
00:06:25.880 just keep increasing the iterations and
00:06:28.280 keep carving away at a volume however
00:06:30.880 the main thing that we're still missing
00:06:32.520 in here are of course the lines we have
00:06:34.479 to add them in now however there's one
00:06:36.880 tiny thing that I want to do before that
00:06:39.240 I set the iterations back to one because
00:06:42.000 the shortest path generation gets a lot
00:06:44.160 more interesting a lot more random if we
00:06:46.560 start to implement a cost attribute for
00:06:49.840 those connections or for those paths
00:06:52.080 that this not tries to find and I want
00:06:54.160 to set this equal to a noise so below
00:06:56.440 our connect adjacent pieces node let's
00:06:58.879 also drop in an attribute noise float
00:07:01.280 I'm going to leave all the settings in
00:07:02.919 here as is but I'm going to change the
00:07:04.759 name to cost like this and then in of
00:07:07.840 find shortest path I'm going to go to
00:07:09.919 path costs and activate a point cost
00:07:12.560 attribute and again we call this cost
00:07:14.919 like this and now all those paths will
00:07:16.960 be a lot more squiggly and a lot more
00:07:18.800 random now to get our curves back the
00:07:21.440 thing that we're actually interested in
00:07:23.440 let's actually modify a loop to make
00:07:25.319 this work as well so what I want to do
00:07:27.240 in here after we're done smoothing our
00:07:29.960 path and going into a group expression I
00:07:32.319 also want to add this curve in here to a
00:07:35.080 group and I'm going to do this on a
00:07:36.759 separate geostream and let's call this
00:07:38.720 group cables then after that we can
00:07:41.240 merge this into our main G stream with a
00:07:43.479 merge node like this and let's make some
00:07:46.599 room here and then with our next Loop
00:07:48.919 iteration I again want to filter out
00:07:51.080 those cables so let's make some more
00:07:53.199 room in here and again drop down a split
00:07:57.120 node we it up like this
00:08:00.000 and I want to split by my cables group
00:08:03.199 and I want to invert these selection so
00:08:05.240 our points volume will be on this output
00:08:07.479 and our cables will be on this output
00:08:09.520 and then finally from our cables I want
00:08:11.680 to go all around my setup and again into
00:08:15.080 the merge like this so now if we adjust
00:08:18.560 iterations as we can see we get both our
00:08:21.960 volume and our cables and after we're
00:08:24.319 done with a fall Loop we can simply drop
00:08:26.319 down another blast and Blast away
00:08:28.800 everything that is not in the cables
00:08:30.639 group and now we have our cables as an
00:08:32.599 output and of course we can drop down a
00:08:34.839 sweep node at the end set the radius to
00:08:37.120 round tube and as we can see right here
00:08:39.440 we have some non-intersecting curves now
00:08:41.760 we're getting closer to our finished
00:08:43.039 goal here the next thing that I want to
00:08:44.839 add is to make all my lines have a
00:08:47.680 non-uniform radi and my main idea to
00:08:50.839 implement this in the end is to
00:08:53.120 basically at the start of my Loop have
00:08:55.959 an array of radi that I can simply work
00:08:59.240 through through every new Loop iteration
00:09:01.680 gets another entry of that radi array
00:09:04.519 and this in the end will set the
00:09:06.600 thickness of the radius of one of our
00:09:08.480 cables so first of all we have to create
00:09:11.000 this array of radiuses or radi and for
00:09:14.200 this I think there are multiple ways to
00:09:16.800 do this very efficiently in Houdini I
00:09:18.839 think this is the quickest way that I
00:09:20.839 found I'm first of all going to drop
00:09:22.880 down a line note and this will basically
00:09:25.959 be just there to create a bunch of
00:09:27.600 points for me and it should create as
00:09:29.600 many points as we have Loop iterations
00:09:31.560 down here so let's actually go to our
00:09:33.800 repeat end let's copy the iterations
00:09:37.399 parameter and let's paste it as a
00:09:39.079 relative reference in the points count
00:09:41.640 of a line like this then I want to
00:09:43.680 delete the actual line geometry and just
00:09:45.640 keep the points so for this I'm going to
00:09:47.200 use an adop then I'm going to use an
00:09:49.240 attribute randomize to randomize a p
00:09:51.440 scale attribute and to actually see what
00:09:53.480 I'm doing I'm going to drop down a
00:09:55.360 visualized properties Noe and in here
00:09:57.760 enable points as sparce like this now to
00:10:00.440 actually dial in or randomize P scale I
00:10:03.200 want to set the global scale to a value
00:10:05.120 of
00:10:05.800 0.15 I want to set the distribution to
00:10:08.800 normal gion and I want to set a minimum
00:10:11.399 limit and I'm going to set this to a
00:10:12.880 value of 0.1 like this and now this
00:10:15.360 gives me a range of P scale values that
00:10:17.839 I can work with now the first lines that
00:10:20.680 I want to carve through my volume should
00:10:22.600 be the biggest lines because they take
00:10:24.399 up the most space so I'm actually going
00:10:26.800 to sort on my P gers and all my Point
00:10:29.560 numbers by that pscale value so for this
00:10:32.440 let's drop down a sword note while this
00:10:34.920 in and under Point sword let's select by
00:10:39.200 attribute and let's select our P scale
00:10:41.320 attribute and let's also reverse the
00:10:42.959 point sort so our largest pscale
00:10:44.720 attribute is always at the top and
00:10:46.880 finally finally finally on that sh
00:10:48.519 stream I can drop down an attribute
00:10:50.600 promote and I can promote my P scale to
00:10:53.959 a detail attribute and I can set the
00:10:56.240 mode to array of all and change the name
00:10:59.600 let's say to P scales like this now
00:11:02.079 finally if I take a look at my G
00:11:03.680 spreadsheet I now have an array of P
00:11:05.880 scale attributes and I also forgot one
00:11:08.079 thing in here on my attribute randomize
00:11:10.839 I should set the dimensions down to one
00:11:12.880 because P scale is just a float and now
00:11:15.279 I have my array of values that I can now
00:11:17.519 use inside of my for Loop so let's move
00:11:19.839 this up let's first of all bring our P
00:11:23.040 scales attribute onto a main T stream so
00:11:25.560 let's move a f in here down a bit and
00:11:28.200 let's use an attri C
00:11:29.800 and let's bring over the P scales
00:11:31.800 attribute like
00:11:33.079 this and now the same attribute is on a
00:11:35.519 main G stream then on my for loop I want
00:11:38.320 to get access to the current Loop
00:11:40.160 iteration and I can create this by
00:11:42.399 creating a meta import node like this
00:11:44.800 and I'm going to use this inside of a
00:11:46.839 detail Wrangle to grab my current actual
00:11:49.760 P scale value that I want to use so WR
00:11:52.680 it up like this and in my fall loop I
00:11:55.360 first of all want to grab my P scales
00:11:57.279 array so float P scale
00:12:00.760 and square brackets is equal to F square
00:12:04.800 brackets at P scales like this and then
00:12:08.600 I've add current scale so the current
00:12:11.480 scale that we want to use inside of our
00:12:13.360 for Loop should be equal to our P scales
00:12:17.199 and from this occurrent iteration let's
00:12:19.639 call it I and we can get I by grabbing a
00:12:23.720 detail attribute in this case from the
00:12:26.440 first input like this and it's called
00:12:28.600 iteration like this so let's check if
00:12:30.920 this is working let's go to our let's go
00:12:33.680 to a for each end let's take a look at
00:12:35.639 the G spreadsheet and a current scale is
00:12:38.480 equal to the last entry of our array
00:12:40.720 which is working and if we turn on
00:12:42.720 single pass we can also see yeah it
00:12:46.160 grabs your right values like we want to
00:12:49.120 all right so we got our current scale
00:12:50.680 let's actually make use of it so first
00:12:52.720 of all in my group expression and let's
00:12:56.320 also just set this back to a value or of
00:12:59.639 one first in my group expression node I
00:13:01.959 want to put this into my radius up here
00:13:04.480 so this will be a detail on twoam zero
00:13:08.279 called current scale and we want to grab
00:13:10.480 the first component of it and in this
00:13:13.240 case P scale is the diameter of our
00:13:16.199 cable so to actually make it the radius
00:13:18.320 we have to divide it by two like this
00:13:21.120 and then on my actual cable I want to
00:13:23.639 set this both as a pscale attribute and
00:13:27.279 I also want to resample my cable
00:13:29.800 with the same value so let's first of
00:13:31.600 all check if we still have a detailed
00:13:33.199 attribute and we don't because we find
00:13:35.639 shortest path has removed it so first of
00:13:38.480 all have to copy it over again so let's
00:13:40.760 use an attri copy grab a rear out here
00:13:43.440 and wire this in and let's paste in a
00:13:46.000 current
00:13:47.920 scale and let's make some room and let's
00:13:50.800 also set this as a p scale attribute so
00:13:53.240 let's drop down a point Wrangle and
00:13:55.360 write in at pscale is equal to a detail
00:13:59.480 or G stream zero called current scale
00:14:02.240 like this and then also resample a curve
00:14:05.199 and then here we can just copy the
00:14:07.759 expression from the group expression up
00:14:09.759 here so like this and like
00:14:14.480 this and now we have a current P scale
00:14:17.000 implemented and also the only reason we
00:14:19.639 resampling here is because vum if you
00:14:22.880 want to sim this with vum Vellum likes
00:14:25.120 to have the segment length for a Vellum
00:14:27.800 hair object to be the same value as the
00:14:30.440 actual P scale otherwise if they don't
00:14:33.040 match up collisions might act weirdly so
00:14:35.720 finally with this done we can go way
00:14:37.600 down to our sweep Noe we can increase
00:14:39.720 the radius to.5 to get our actual size
00:14:44.240 of our sply or cable in here and then
00:14:46.800 again we can go up with the iterations
00:14:49.440 and again we could nicely
00:14:51.199 non-intersecting cables now it's also
00:14:53.519 the right time to dial this in and the
00:14:56.199 method that I found to dial this in is
00:14:59.120 is the easiest is to just take a look at
00:15:02.240 the number of Primitives and as long as
00:15:05.279 it's equal to the amount of iterations
00:15:07.839 that we put in we can go higher with
00:15:09.800 this value so maybe let's try 15 some
00:15:12.199 more 20 some more 25 some more let's try
00:15:17.399 30 maybe 35 yeah I think let's leave it
00:15:20.880 at 35 I think this is looking really
00:15:23.800 really nicely for us so this is the main
00:15:26.680 build of a cable generator there's one
00:15:29.240 other thing that I quickly want to
00:15:31.120 implement in here because at some point
00:15:33.600 we probably want to run those cables
00:15:35.720 along a curve that we Define and in this
00:15:38.399 case this all gets a bit more difficult
00:15:40.560 or there's one problem that we have to
00:15:42.279 solve so if we do the naive approach and
00:15:45.079 we just Define one thick curve volume
00:15:49.079 and again we convert it into a bunch of
00:15:51.199 connections like this what happens in
00:15:53.920 the end if you run our algorithm through
00:15:56.160 it is that all cables tend to just Bunch
00:15:59.399 up at the sides of a curve and really
00:16:02.000 quickly block all the rest of the volume
00:16:04.240 of was flying in here and so we just get
00:16:06.720 really view Curves in the end along a
00:16:09.160 main spline curve so I want to build
00:16:11.519 this a bit differently in this case what
00:16:13.880 I want to do is I first of all want to
00:16:15.759 go back to my main setup in here and
00:16:18.120 first of all to make this all a lot
00:16:20.360 simpler I want to grab everything but
00:16:22.680 the first and last note is everything
00:16:25.279 but I'll sweep and I'll line up here and
00:16:28.399 I just want to box it into a subnet like
00:16:31.120 this and now let's quickly draw a curve
00:16:34.040 that we can use for cables in the end so
00:16:37.279 for this let's drop down a curve note
00:16:39.639 let's set the mode maybe to nerves like
00:16:42.480 this and let's quickly drop down some
00:16:45.279 points maybe something like this and
00:16:47.839 again my solution for this problem here
00:16:50.000 is I want to first of all measure the
00:16:52.880 length of this curve and then make this
00:16:55.360 line that I'm using as my base object
00:16:57.279 here the same length as my curve and
00:16:59.519 then what I can later do is simply
00:17:01.360 deform this straight mess of cables into
00:17:04.160 a curve mess of cables based on this
00:17:05.959 input curve so to do that I'm first of
00:17:08.760 all going to resample my curve my nerves
00:17:11.559 curve to make it into a poly line and
00:17:13.799 I'm going to measure its length so drop
00:17:15.880 down a measure node and let's set the
00:17:18.039 measure to perimeter or
00:17:20.679 length and then let's move our main
00:17:22.919 setup below it and to make my line use
00:17:26.199 this length that I use or that I created
00:17:29.080 with a measure node in here I first of
00:17:31.120 all want to create a spare input so
00:17:32.960 let's use this little Cog icon in here
00:17:35.360 and click add spare input and I can
00:17:37.559 simply drag my measure node in here and
00:17:40.600 then on my line on my length the thing
00:17:43.039 that I want to enter in here is I want
00:17:44.880 to grab a primitive attribute on G3
00:17:47.919 minus one because this is my spare input
00:17:50.120 down here I want to grab the first
00:17:52.000 primitive from the first primitive I
00:17:54.080 want to grab an attribute called
00:17:55.640 perimeter and I want to grab the first
00:17:57.640 component of the attribute like this so
00:18:00.080 now our line has the same length as our
00:18:02.400 input curve we can again run this for
00:18:04.960 our subnet and again get a whole mass of
00:18:07.360 Curves now before I'm going to sweep it
00:18:10.600 let's actually disconnect this in here I
00:18:13.280 first of all want to add a bit of a
00:18:15.400 Twist to it make it look a bit more
00:18:17.039 interesting so for this let's use a
00:18:19.000 Twist Noe let's make sure the capture
00:18:21.679 direction is pointing down the z-axis
00:18:24.400 and we're going to grab the capture
00:18:26.679 length again from a line up here so
00:18:28.799 let's copy the
00:18:30.360 parameter and paste the relative
00:18:32.400 reference like
00:18:34.080 this and let's give it 720 degrees of
00:18:37.280 twist and I think this looks pretty nice
00:18:39.679 in the end then finally I can use this
00:18:41.720 with a path deform note so main curves
00:18:44.120 go into here and as a path I'm going to
00:18:46.880 Branch out from my measure node and down
00:18:49.240 into my path deform like this so now
00:18:51.919 it's following my input curve and then
00:18:54.240 from there I can finally go into my
00:18:56.080 sweep and now I have some very nice
00:18:59.480 and twisty looking curves that are
00:19:01.480 following the path that I entered in and
00:19:04.080 actually at this point this again is
00:19:05.840 geometry that's very happy to be
00:19:07.720 simulated with a vum hair Sim so you can
00:19:10.799 have some fun there but this is where
00:19:12.840 I'm going to leave it for today and
00:19:14.960 until next time it's cheers and goodbye
00:19:17.760 if you like what we're doing please
00:19:19.320 consider becoming a patron of ours not
00:19:21.559 only for supporting a tagma but also for
00:19:23.840 access to end of courses recurrently on
00:19:25.960 the home stretch of finishing our first
00:19:27.720 machine learning project on here I'm
00:19:29.840 super excited about that one but if
00:19:32.080 that's not your jam you can find a lot
00:19:33.960 more content about K effect or vum or
00:19:36.520 Vex and so on on here as well also let
00:19:39.200 me say thank you so much to all existing
00:19:41.799 patrons without you this channel would
00:19:44.039 not be possible thank you

----------------------------------------
Contents of YouTube-Transcript/Entagma/Houdini Tutorial Throwing A Snowball With MPM.txt:
# tactiq.io free youtube transcript
# Houdini Tutorial: Throwing A Snowball With MPM
# https://www.youtube.com/watch/lhACxtQCRCY

00:00:02.240 after all this Copernicus content we
00:00:04.279 shouldn't forget about the other stuff
00:00:06.200 from Houdini 20.5 and we especially
00:00:08.760 shouldn't forget about the new mpm
00:00:10.519 solver and although judging by the
00:00:12.639 weather in Germany right now A W mod
00:00:15.040 simulation would be quite fitting I want
00:00:17.160 to create something a bit more cheerful
00:00:19.199 I want to create a snowball before I
00:00:21.039 actually jump into udini and create a
00:00:22.760 snowball I first of all want to quickly
00:00:24.640 talk about in what cases we actually do
00:00:27.199 want to use this new mpm solver because
00:00:30.039 it in some ways is quite similar to flip
00:00:32.800 and in other ways quite similar to
00:00:34.320 Vellum and so we need to find out where
00:00:36.800 we want to use it compared to well flip
00:00:39.160 and well so this is my very unscientific
00:00:42.280 graph down here on the x-axis we have
00:00:45.320 the consistency of the thing that we're
00:00:47.960 going to simulate from very loose to
00:00:50.199 very solid and in here on the y-axis we
00:00:52.600 have the competence of the solver in
00:00:54.399 simulating that and so for example if we
00:00:56.840 take a look at a flip solver a flip
00:00:58.879 solver is very very competent in fluids
00:01:02.199 and viscous fluids however it's not
00:01:04.119 really good for simulating grains or
00:01:06.360 soft bodies for example and technically
00:01:08.799 it is able to work together with the RBD
00:01:11.520 solver in hini so it gets a little bump
00:01:14.280 in here for solids as well taking a look
00:01:16.799 at Vellum Vellum since this is a multis
00:01:19.360 solver is basically a spiky boy the two
00:01:22.479 things that Vellum is used for best is
00:01:25.479 soft bodies and Grains we have those two
00:01:27.960 huge spikes in here however it is also
00:01:30.720 somewhat competent in fluid and viscous
00:01:32.640 fluids just not as well as flip and it's
00:01:34.920 also somewhat competent in solids just
00:01:37.479 not as well as rvds and you're mainly
00:01:39.720 going to use Vellum if you're mainly
00:01:41.600 going to simulate soft bodies on graines
00:01:43.960 and you want to have fluid or solids
00:01:46.360 interact with those soft bodies or with
00:01:48.560 those grains this is where we're going
00:01:50.280 to use Vellum now where does mpm fall on
00:01:53.240 this diagram what it looks something
00:01:55.399 like this it's basically competent
00:01:58.039 throughout the whole range of those
00:02:00.280 material properties it's just not very
00:02:02.759 competent in any of them so the only
00:02:05.119 thing or the only case where we do
00:02:06.759 actually care about the mpm over is
00:02:08.959 where we do want this large range of
00:02:11.840 material properties and it also has the
00:02:14.080 nice party trick that materials that
00:02:15.959 we're going to simulate can sort of move
00:02:17.879 up and down this line down here and at
00:02:20.920 one point act as soft bodies and at one
00:02:23.480 another Point act as grains and this is
00:02:25.599 exactly the thing that we're going to
00:02:27.120 need for a snowball because a snowball
00:02:29.319 should start out here as a sort of
00:02:31.760 hardish soft body while throwing it
00:02:34.640 however as soon as we hit something we
00:02:37.120 want to have some parts of a snowball
00:02:40.040 turn into snow chunks into sort of solid
00:02:43.200 objects that fly away but we also want
00:02:45.640 to have a lot of tiny debris a lot of
00:02:48.159 thing that really acts like grains and
00:02:50.120 this will be a snowflakes and the mpm
00:02:52.280 solver in Houdini is the only solver
00:02:54.840 that dynamically can change the
00:02:56.959 properties of the thing that we're going
00:02:58.519 to simulate without some very complex
00:03:00.920 setups or without some attribute
00:03:02.519 trickery so let's actually build our
00:03:04.519 setup I'm not going to build this from
00:03:06.840 scratch I have a little scene prepared
00:03:09.040 in here and in the scene I have the
00:03:11.080 colliding object which will be this 3D
00:03:13.879 scan of a statue of some dogs and also
00:03:16.720 the snowball in here and also a camera
00:03:19.120 let me quickly walk you through this
00:03:20.760 scene right here for my colliding object
00:03:23.200 I loaded in a 3D scan by 3D scan.com you
00:03:27.000 can download it right here I brought it
00:03:29.000 into the right scale using this match
00:03:31.200 size Noe down here I did some little
00:03:33.360 tweaks make it sit flat on the ground
00:03:35.599 plane and then I used this transform
00:03:37.799 note down here where have the pivot set
00:03:40.840 directly where I want to later hit my
00:03:43.360 dog with my snowball and I'm going to
00:03:45.519 use this transer not down here is sort
00:03:47.480 of to change the impact angle of the
00:03:49.599 snowball and get the shape of the spray
00:03:52.120 of a snowball in the end that I want and
00:03:54.120 this was really helpful for dialing in
00:03:56.360 the look that I wanted in the end then
00:03:58.439 also since this is very very detailed
00:04:00.840 model and this is just useless data or
00:04:03.760 most of it is useless data for a
00:04:05.360 simulation I clipped away a lot of it
00:04:07.560 and for a snowball I simply started out
00:04:09.799 with one sphere I added a mountain node
00:04:12.480 to make this a bit more irregular and
00:04:14.200 then I just moved it to the right
00:04:16.199 position so that I have to Simply
00:04:18.358 accelerate this down into the Z
00:04:20.720 direction to hit the snowball where I
00:04:22.880 wanted to hit and this is my setup done
00:04:25.479 so now to set up our mpm solve what
00:04:27.880 we're going to do is we're going to get
00:04:29.360 rid of this merge node down here and
00:04:31.280 instead I'm going to search for mpm
00:04:33.600 configure and we have a bunch of presets
00:04:35.960 in here however the simple mpm configure
00:04:39.080 up here will create for us the sort of
00:04:41.240 minimal viable setup that we're going to
00:04:43.199 need for mpm solare let's drop this down
00:04:45.520 let's wait for it to cook and in the end
00:04:47.520 we get this let's first of all get rid
00:04:49.800 of our dummy objects up here we don't
00:04:51.639 need those and what we left with is our
00:04:54.400 mpm source our mpm collider mpm
00:04:57.360 container the source and the collider
00:04:59.360 are pretty much self-explanatory this is
00:05:01.560 where our snowball will go this is where
00:05:03.199 our collider will go and the mpm
00:05:05.280 container is the sort of simulation
00:05:07.440 space that we're going to set up the mpm
00:05:09.520 solver in the end is pretty much based
00:05:12.440 around the flip solver in Houdini so
00:05:14.560 there's going to be some volumes
00:05:16.280 involved as well and volumes need a
00:05:18.680 container to work right as why
00:05:20.600 connections up like this and like this
00:05:23.680 and now let's take a look at those
00:05:24.960 options and whenever we're dealing or
00:05:27.479 whenever I'm dealing with a new solver
00:05:29.759 cini that I have not worked with yet I'm
00:05:32.319 basically going to look for three things
00:05:34.400 three sets of parameters I first of all
00:05:37.039 want to find all the parameters that I
00:05:39.600 just have to set to a fixed value and
00:05:41.800 just leave them as is I won't have to
00:05:44.440 change them to change the look these are
00:05:46.600 just set in stone based on the thing
00:05:48.880 that I want to simulate and let's
00:05:50.240 quickly take a look at those first and
00:05:52.000 the first one will be a snowball size
00:05:54.319 and again this is set up here onos
00:05:55.960 sphere and I set this to inini units a
00:05:59.440 value Val of 8 cm and I think this is a
00:06:02.039 pretty realistic size for a snowball
00:06:04.039 then also on mpm sorus I have to set up
00:06:06.840 I can set up a material preset and by
00:06:09.240 default this is already set up to snow
00:06:11.280 and I found this preset to be pretty
00:06:13.360 accurate and to give me pretty good
00:06:15.199 results without tweaking most of those
00:06:18.080 values down here basically any preset
00:06:20.440 you set up here will set all those
00:06:22.560 material parameters down here next I can
00:06:25.240 set an initial State and I want to set
00:06:27.440 the initial velocity and again as sort
00:06:29.759 of try to find a real world value for
00:06:31.880 this now Googling the throwing speed of
00:06:34.160 humans you mostly get the result for
00:06:36.880 athletes which I think is not really
00:06:39.080 realistic so what I ended up using in
00:06:41.560 the end is the max throwing speed of a
00:06:43.440 chimpanzee which is quite a bit lower
00:06:45.720 than the throwing speed of human
00:06:47.199 athletes so I think this is pretty much
00:06:49.479 what your average human can throw as
00:06:51.440 well and this boils down in the end to
00:06:54.000 around 9 m/ second then end in here on
00:06:57.800 our mpm source on the z-axis I'm going
00:07:00.919 to add in a value of N9 and finally
00:07:03.400 there are some parameters on the mpm
00:07:05.440 solver as well that I can just set and
00:07:07.440 this will be the time scale so this will
00:07:10.000 make a simulation either fast forward or
00:07:12.840 slow motion in this case I want to have
00:07:15.039 a slow motion animation and I want to
00:07:16.960 set it to pretty much 0.1 and the other
00:07:19.520 thing that I want to set is the cache
00:07:21.720 size and I'm going to find this under
00:07:23.639 advance and this is based on my
00:07:25.960 computer's working memory in this case I
00:07:28.240 have 64 GB
00:07:30.080 and I'm going to set this to a
00:07:31.400 conservative 55 GB like this so these
00:07:34.400 are our fixed parameters done the next
00:07:36.479 set of parameters that I want to take a
00:07:38.080 look at are the quality parameters the
00:07:40.319 parameters where I can basically set how
00:07:43.080 well my simulation Works higher values
00:07:45.479 in here should result in a better
00:07:47.440 simulation however also a slower
00:07:50.000 simulation time and the main parameter
00:07:52.680 that I'm going to work with here is the
00:07:54.520 particle separation and we're going to
00:07:56.560 find this in our boundary now for my
00:07:58.520 particle separation I usually want to
00:08:00.440 stick to two values I want to have one
00:08:02.360 low resolution value and my main goal in
00:08:04.879 here is that my simulation resolves
00:08:07.759 fairly fast and also the entire
00:08:09.759 simulation over the entire timeline
00:08:11.680 should fit inside my computer's memory
00:08:14.440 and for this for this setup right here
00:08:16.240 after a bit of experimenting I settle
00:08:18.440 down for a particle separation of about
00:08:22.120 0.006 like this once I set this both of
00:08:25.159 my colliding object and my actual
00:08:27.280 snowball get a lot more detailed and and
00:08:29.599 on the snowball if you take a look at
00:08:31.240 the info panel we have around 1 million
00:08:33.599 points now for my final resolution I
00:08:35.799 half this value so
00:08:38.279 0.3 and this resulted in around 10
00:08:41.240 million points again since this is a
00:08:43.880 sort of flip cell simulation having this
00:08:46.519 value right here will increase the
00:08:48.320 overall data for a simulation by a
00:08:50.200 factor of eight and 10 million points
00:08:52.600 resulted in around 20 GB of cache data
00:08:55.920 later while writing this out to disk and
00:08:58.160 it simulated on my PC for around 4 hours
00:09:01.040 which again I think is a sort of nice
00:09:03.480 value for a simulation like this now the
00:09:05.959 next thing that we want to set in here
00:09:07.760 is the domain size and the domain size
00:09:10.399 is again the maximum size of the volumes
00:09:13.120 that are going to get used for the
00:09:14.680 simulation Now by default the mpm solver
00:09:17.920 uses SP volumes so they will be a lot
00:09:20.360 smaller however I think it's still a
00:09:22.440 good idea to set some limits for those
00:09:25.160 volumes so what I ended up choosing in
00:09:27.760 here are again some very specific values
00:09:30.440 that I'm just going to enter in here
00:09:32.519 something like this and also to
00:09:34.480 visualize the boundary can jump into our
00:09:36.640 handles tool and take a look at a
00:09:38.760 bounding box like this and this is how
00:09:41.240 it looks in the end and the other thing
00:09:43.160 that we need to do is we need to specify
00:09:45.480 the right boundary type for boundaries
00:09:47.920 because right now this is set to open
00:09:50.320 and if it's set to open this basically
00:09:52.959 does not have any effect at all what I
00:09:55.640 want to do in here is first of all check
00:09:58.000 this check mark in here and set this to
00:10:00.279 delete so any particles that will move
00:10:03.000 Beyond this boundary will simply get
00:10:04.959 deleted will make our simulation a lot
00:10:06.800 smaller and also this is not the max
00:10:09.120 size for volumes as well now the other
00:10:11.440 thing that you might change as quality
00:10:14.600 parameters is the CFL and material
00:10:17.120 condition and you can find both of them
00:10:18.959 down here on the mpm solver in this main
00:10:22.480 solver Tab and what both of those two is
00:10:25.120 basically adjust the substeps that a
00:10:27.600 solver is going to take now the MP St
00:10:29.519 solver in terms of substeps is pretty
00:10:31.800 special because we usually don't want to
00:10:34.320 set our Global substep our Global
00:10:36.279 substeps in here the solver chooses its
00:10:38.440 own number of substeps dynamically frame
00:10:41.160 per frame basically on how many it
00:10:43.120 thinks this current simulation step
00:10:45.040 needs in the end and this is set between
00:10:47.440 1 and 10,000 in here and those values up
00:10:50.760 here the CFL condition and the material
00:10:52.959 condition basically control how quickly
00:10:55.800 the number of subss Will ramp up
00:10:57.880 depending on your simulation a smaller
00:11:00.200 value in here result in more substeps
00:11:02.800 and a smaller value in here will also
00:11:04.480 result in more substeps you mainly want
00:11:06.839 to adjust the CFL condition up here
00:11:09.639 however if you're dealing with very
00:11:11.079 stiff materials with very solid
00:11:12.760 materials you might want to adjust the
00:11:14.600 material condition down here as well for
00:11:16.880 this simulation that we're doing right
00:11:18.320 here right now I found both of them work
00:11:20.480 very nicely at the default values so I
00:11:22.800 left them both as is now finally finally
00:11:25.360 finally we're down at the last step of
00:11:27.360 parameters that we need for a simulation
00:11:29.680 and these are the parameters that
00:11:31.240 actually control the style of a
00:11:32.720 simulation and again for this for a
00:11:34.800 snowball the thing that work nicely for
00:11:36.920 me is first of all on a snowball itself
00:11:40.079 the critical stretch and the critical
00:11:41.920 compression and again you can find those
00:11:43.920 on the mpm source node in here these are
00:11:46.560 these two right here and what those two
00:11:49.360 parameters basically control is how
00:11:51.639 quickly a snowball moves from something
00:11:54.279 that acts like a soft body or like a
00:11:56.000 fluid that acts to a solid either
00:11:58.920 because it's compressed or because it's
00:12:00.800 torn apart this is what this chunky
00:12:03.079 preset does in the end and what I found
00:12:05.360 work quite nicely for the snowball is
00:12:07.519 leaving the critical compression as is
00:12:10.440 however I did end up lowering the
00:12:12.360 critical stretch a tiny bit and this in
00:12:15.360 the end resulted in a snowball or in the
00:12:17.720 snowball breaking apart faster and
00:12:19.639 resulting in a lot more spray and a lot
00:12:21.920 more tiny pieces which is what I wanted
00:12:24.360 and again small steps in here is what
00:12:27.199 we're looking for so I'm going to set
00:12:28.959 this to a value of
00:12:30.839 0.6 instead of
00:12:33.160 0075 like this and the other parameter
00:12:36.000 that control the style that I like quite
00:12:37.920 a lot is on the collider the friction
00:12:39.920 and the stickiness these are two
00:12:41.720 separate values in here the stickiness
00:12:43.800 basically controls how much of a snow
00:12:45.920 will stick to the surface of our dogs
00:12:47.760 and not simply fly away and the friction
00:12:50.199 will control How likely these sticking
00:12:52.079 pieces are to slide down the surface of
00:12:54.240 our objects and again through a bunch of
00:12:56.600 experimentation I found out that I liked
00:12:58.760 for the friction a value of3 a lot and
00:13:01.920 for the stickness a value of. five like
00:13:04.600 this and now we're pretty much all set
00:13:06.480 with our parameters the one thing left
00:13:08.320 to do for us in here is to basically hit
00:13:10.639 the display down at our mpm solver
00:13:13.680 and assimilate this and again this will
00:13:16.120 take a bit but we'll see what we get
00:13:18.680 let's also quickly set our background to
00:13:21.160 dark so we can see what we're doing and
00:13:23.399 after a bit of waiting we're left with a
00:13:25.360 result like this and I think this very
00:13:28.480 much looks like like a snowball I'm
00:13:30.160 quite happy with this result right here
00:13:32.519 so the final thing left to do at least
00:13:34.480 for a simulation is to basically go to
00:13:37.240 our mpm container reduce this particle
00:13:39.920 Separation by half and then dropping
00:13:42.360 down a file cache node wearing this
00:13:45.240 below our mpm solver and writing all of
00:13:48.120 this out to disk however again this will
00:13:50.560 take quite a lot of time so what I'm
00:13:53.199 going to do is I'm basically going to
00:13:55.320 load in a finished sequence that I
00:13:57.519 cashed out earlier something like this
00:13:59.920 and as you can see we have quite a bit
00:14:02.320 more points to work with here so let's
00:14:05.000 take a look at what we cached out in
00:14:06.600 here first of all this looks all fine
00:14:09.440 I'm also probably going to quickly show
00:14:11.959 you a flip book right now at this point
00:14:14.519 because this in the fport plays really
00:14:17.160 really slowly however scraping through
00:14:19.279 this flipbook or taking a look at it we
00:14:21.040 have one issue that we might want to
00:14:23.079 solve and we can see this at the first
00:14:25.600 couple of frames in here and what we are
00:14:27.560 seeing here is a flat spot appearing
00:14:29.959 here on a snowball so why is this well
00:14:33.040 the reason for this flat spot is
00:14:35.199 basically a snowball right here is
00:14:37.440 hitting the boundary of its own Spar
00:14:40.320 volume and we can also sort of see this
00:14:42.440 if we jump back to our simulation up
00:14:44.440 here again this is now a bit coarser and
00:14:46.800 we can go to the visualize Tab and we
00:14:49.120 can select show background grid and this
00:14:52.040 is The Spar volume that is created for a
00:14:54.399 snowball and as we can see right here
00:14:56.839 we're right at the edge and this is what
00:14:59.040 in the end causes this flat spot to
00:15:00.800 appear so how could we fix this in
00:15:02.800 simulation well maybe there's a more
00:15:05.399 efficient way I'm not that experienced
00:15:07.639 with the mpm solver yet however what I
00:15:10.399 found sort of worked is to go to the
00:15:13.079 advanced Tab and first of all up the
00:15:16.240 minmax voxel dilation value maybe to a
00:15:18.800 value of 15 on the minimum this will
00:15:21.480 increase the padding around a snowball
00:15:24.040 and also to go to the solver and to
00:15:26.079 actually adjust the global substeps
00:15:28.199 because this padding will be calculated
00:15:31.160 with every Global substep not with every
00:15:33.319 substep the solware chooses in here
00:15:36.000 however both of these values needed to
00:15:38.120 be quite large and quite slow to give me
00:15:40.680 decent results and it's only a problem
00:15:43.000 while the snowball is flying towards our
00:15:44.839 dog so I think since we're in Houdini
00:15:46.959 right here we can find a easier solution
00:15:49.560 for this problem in the end and to solve
00:15:52.000 this problem well we're going to do a
00:15:53.920 few steps we first of all need one name
00:15:56.639 attribute on our main G stream and while
00:15:59.000 the solver does have a name attribute
00:16:01.399 that we could use in here the source
00:16:03.800 name for my cach in here since the
00:16:06.319 source name since we only have one
00:16:08.079 source is just one value I removed it to
00:16:11.319 make my cache files a bit smaller so I
00:16:13.959 quickly have to create one temp name
00:16:15.920 attribute down here to make this work
00:16:18.279 let's drop down one name node and on
00:16:21.319 this name node set the namings of the
00:16:23.759 name to Temp and let's set the class to
00:16:26.480 point and now we have one temporary name
00:16:28.519 at on a g stream right here what this
00:16:31.639 now allows me to do is to first of all
00:16:33.800 use a Time shift node to grab the very
00:16:36.319 first frame on a timeline and to do this
00:16:39.040 I simply want to get rid of the channel
00:16:41.399 in here and I want to set the frame to
00:16:43.360 one so this gives me this Frame right
00:16:46.040 here and I can use this together with a
00:16:49.079 main animated geometry and an extract
00:16:52.079 transform node if I wi both them in here
00:16:55.199 to basically get a point that is exactly
00:16:58.079 in the middle of a snowball that we're
00:17:00.279 currently simulating and I can use the
00:17:02.440 output of this note and our time shift
00:17:04.839 in here together with a transform pieces
00:17:07.520 note to basically move this still
00:17:10.359 geometry right here to the same position
00:17:12.880 as a main snowball traveling up here and
00:17:16.160 with this we can get rid of this flat
00:17:18.079 spot now I also want to copy over all
00:17:20.079 those attributes that I still need so to
00:17:21.919 do this I want to need an attribute copy
00:17:25.000 I want to Branch out from up here from
00:17:27.520 this name node down to my attribute copy
00:17:30.520 and in here since a number of points
00:17:33.080 will probably change basically as soon
00:17:35.679 as those points are starting to exit a
00:17:37.919 boundary I do want to match by an ID
00:17:41.919 attribute which fortunately aor creates
00:17:44.640 for us this ID attribute in here so I
00:17:47.360 want to enable this in here and I
00:17:49.280 basically want to copy over all my
00:17:52.160 attributes however the one attribute
00:17:54.520 that I want to leave out is the P
00:17:56.159 attribute because again we want to get
00:17:58.280 rid of this FL that spot so I'm going to
00:17:59.880 uncheck a low P attribute in here and
00:18:01.880 now this is fixed now with this done I
00:18:04.039 can also get rid of my temp name
00:18:06.559 attribute let's Dr an attribute delete
00:18:08.760 note for this get rid of our name in
00:18:11.240 here and finally I can switch between my
00:18:13.840 main file cache and my fixed flat spot
00:18:17.000 basically up until a snowball starts
00:18:19.320 hitting something so for this I'm going
00:18:21.039 to drop down a switch node and I think
00:18:23.600 our frame of impact is frame 11 so let's
00:18:26.240 quickly move to frame 11 down in the
00:18:28.240 timeline yep now it's hitting our statue
00:18:31.120 of our dog so in here in our switch I
00:18:33.840 simply want to write dollar f is smaller
00:18:36.280 than 11 like this and now up until frame
00:18:39.240 11 we're using our fixed CH stream on
00:18:41.960 the right and after that we're using our
00:18:44.159 main cache so with this all fixed I can
00:18:46.760 now finally work on meshing my snowball
00:18:49.600 for rendering later and also for
00:18:51.480 rendering I want to have a mix between
00:18:53.559 Some solid chunks Some solid chunks that
00:18:55.600 will be just your standard Houdini mesh
00:18:58.120 and also of particles which would be my
00:19:00.240 snowflakes and I first of all want to
00:19:02.280 work on my mesh I'm going to create my
00:19:04.679 mesh from VDB and I'm going to create
00:19:07.559 this VDB from particles like this let's
00:19:09.919 WR this in here and under the waxel size
00:19:12.919 I want to write a very specific
00:19:14.880 expression that I simply grabbed from
00:19:17.280 the mpm master class that side effects
00:19:19.679 published a couple of weeks ago and this
00:19:21.799 master class or this special formula
00:19:23.799 that I'm going to use in here is
00:19:25.960 basically the value that is here stored
00:19:29.039 under a detail of our cache this DX
00:19:31.480 attribute which in this case is a value
00:19:33.200 of
00:19:33.880 0.006 so double our particle separation
00:19:37.720 and I want to divide this by two to make
00:19:39.919 it our actual particle separation and
00:19:41.919 then I also want to divide it by a very
00:19:44.200 specific value of
00:19:45.880 1.51 and this 1.51 is simply based on
00:19:49.440 the minimum radius plus a little bit and
00:19:52.480 once I do this I now have a nice
00:19:54.720 particle representation of my mpm
00:19:57.039 snowball now next I want to do a bit of
00:19:59.240 processing I first of all want to smooth
00:20:01.120 it so let's use a VDB smooth stf and in
00:20:04.159 here I basically use default values
00:20:06.679 these work nicely for me and this does
00:20:09.240 remove a lot of stuff from a snowball
00:20:11.240 however I'm fine with this these are the
00:20:13.240 parts that I want to have as particles
00:20:15.520 in the end as well and finally I want to
00:20:17.960 make my pieces even smaller so for this
00:20:20.640 I'm going to add a VDB reshape and I'm
00:20:23.360 going to set this to erode and I'm going
00:20:25.280 to erode by 1 half of a box radius like
00:20:28.080 this and finally to turn this into a
00:20:30.200 mesh I want to use a convert VDB node
00:20:33.240 and I'm not going to convert this into
00:20:35.200 polygons I'm going to convert this into
00:20:37.159 a polygon soup because this is much more
00:20:39.360 memory efficient in the end now this is
00:20:41.600 my mesh for now I do want to add some
00:20:44.799 other attributes on it as well mainly a
00:20:47.400 velocity attribute for motion blur and
00:20:49.799 also a UV attribute for shading however
00:20:52.320 to calculate these I have to work on my
00:20:54.720 particles next so let's do this first
00:20:56.840 now on my particles I do have a velocity
00:21:00.159 attribute however I have to make some
00:21:02.240 changes to this velocity attribute
00:21:04.159 because this is the velocity attribute
00:21:06.760 as if our simulation would run in real
00:21:08.720 time basically with 24 frames per second
00:21:11.240 however we made it a slow motion
00:21:12.960 animation in the end so we have to make
00:21:14.679 our velocity attribute smaller as well
00:21:16.919 and the quickest and easiest way to do
00:21:18.600 this is with a Wrangle let's WR this
00:21:20.679 below our switch and in here let's
00:21:22.720 simply take our B at V our velocity and
00:21:25.720 multiply it by a value of 0.1 like this
00:21:28.919 and this is the same as our time scale
00:21:30.880 this is our velocity attribute done the
00:21:32.760 next thing that I want to add is some
00:21:35.039 UVS and for those UVS I'm first of all
00:21:38.279 going to use a Time shift note to create
00:21:41.320 or to grab one still frame again the
00:21:43.760 first frame because on the first frame
00:21:46.039 our snowball is just a sphere and the
00:21:48.039 sphere is pretty easy to be un wrap so
00:21:50.840 again let's delete the redit refence or
00:21:53.679 delet the channel and let's set this to
00:21:55.840 frame one like this and we have this
00:21:57.440 ball right here and on this ball I want
00:21:59.520 to add some UV coordinates so let's use
00:22:01.840 a texture coordinate Noe or UV
00:22:04.120 coordinate note for this I want to set
00:22:05.919 the texture type to Polar the Y AIS is
00:22:08.960 fine but I want to add my UVS to points
00:22:11.880 like this and to quickly visualize this
00:22:14.159 I'm going to use an adri from map node
00:22:16.520 and yeah we do actually see some UVS on
00:22:18.799 a snowball now now one problem that I'm
00:22:20.720 seeing right here is that a UVC is right
00:22:23.559 down the front of a snowball right where
00:22:25.840 the camera is looking so we can't have
00:22:28.279 that so to quickly fix this I simply
00:22:30.240 want to add one transform node in
00:22:31.840 between those and just rotate my
00:22:33.720 snowball a value of
00:22:35.600 180° along the y-axis so now it's at a
00:22:38.919 different position however a UV is
00:22:41.120 looking a lot better now and again I
00:22:43.320 want to bring this over to my main
00:22:45.080 animation again using an attribute copy
00:22:47.200 Note S this in here let's again match by
00:22:51.039 ID and let's bring over a UV coordinates
00:22:54.000 like this and finally let's move those
00:22:56.279 attributes also onto our mesh and for
00:22:58.880 this I'm going to use an attribute
00:23:00.200 transfer node so wire this in here like
00:23:03.159 this let's zoom in a bit and the
00:23:05.360 attributes that I want to bring in will
00:23:07.080 be a velocity V and our UV coordinates
00:23:11.159 UV and to make those look a bit nicer a
00:23:13.840 bit less jaged I'm going to go into the
00:23:16.520 conditions Tab and I'm going to set the
00:23:18.120 max samples count up to 10 and now this
00:23:20.880 is my mesh done so I'm going to drop
00:23:23.159 down another null and I'm going to call
00:23:25.120 it mesh render and I'm also quickly
00:23:27.440 going to make this not cre a bit more
00:23:29.200 clean something like this now next I
00:23:31.960 want to start working on my particles
00:23:33.720 some more and first of all I want to get
00:23:35.520 rid of all the particles that are stuck
00:23:37.440 inside our main pieces in here so for
00:23:39.400 this to work I'm going to set down a
00:23:41.679 group note I'm going to bu this below my
00:23:44.360 attribute copy let's call this group
00:23:46.640 solid let's set this to points let's
00:23:49.159 disable our base group and let's enable
00:23:51.159 keep in bounding regions and as my
00:23:53.320 bounding region I'm going to set a
00:23:55.640 bounding volume and I'm not going to use
00:23:58.279 a a bounding object because this is way
00:24:00.720 more complicated to calculate or way
00:24:03.400 more slow to calculate so I'm going to
00:24:05.240 use a volume and the volume that I'm
00:24:07.159 going to feed in will come from a bdb
00:24:09.200 reshape up here so wir it up like this
00:24:12.400 and now all our points inside our pieces
00:24:14.799 and now inside this group as well and
00:24:17.000 now we can get rid of them let's drop
00:24:18.679 down a blast note and let's blast away
00:24:21.080 these solid points like this now what I
00:24:23.600 want to do next or what I want to do
00:24:25.559 later down the line is I want to again
00:24:28.559 this number of points a bit basically
00:24:30.240 add even more resolution to my snow and
00:24:32.600 my snowflakes and what I'm going to use
00:24:34.960 here in the end is the point replicate
00:24:36.880 note and this note basically takes in
00:24:39.200 each point and adds more points to it
00:24:41.440 it's basically a fancy copy to points
00:24:43.960 Noe with some specific options in here
00:24:46.480 now to set this all up I first of all
00:24:48.240 going to need some additional attributes
00:24:50.080 on all of my points up here first of all
00:24:52.520 I want to randomize the orientation of
00:24:54.600 each snowflake in the end and for this
00:24:56.600 I'm going to randomize the normal on H
00:24:58.600 point so let's drop down an attribute
00:25:00.399 randomized note let's set the attribute
00:25:02.520 name to n for normal I want to set the
00:25:05.200 distribution to directional orientation
00:25:08.039 and also again since our Point numbers
00:25:10.440 are changing and we don't want to have
00:25:12.520 any flicker I'm going to add a seed
00:25:14.919 attribute and again I'm going to use my
00:25:17.080 ID attribute for this now I want to do
00:25:19.360 the same thing for my P scale so again
00:25:22.000 another attribute randomized let's grab
00:25:24.080 a pscale attribute like this now this is
00:25:27.399 way too large instead I want to multiply
00:25:29.840 it and I basically want to multiply it
00:25:31.840 between a value
00:25:33.440 of7 and 1.3 like this and this can be a
00:25:37.679 onedimensional value and again under the
00:25:40.200 options I'm going to enable an ID
00:25:42.440 attribute like this so finally with all
00:25:44.679 of this done I can move on to my point
00:25:46.520 replicate note however before I wire
00:25:48.679 this in I should take a look at the
00:25:50.320 parameters I don't want to have 100
00:25:52.919 points per point this is way too many I
00:25:55.080 want to just have a five and I also want
00:25:57.279 to tweak the shape and I want to make
00:25:59.520 this a sort of squashed dis so I'm going
00:26:01.880 to go to the size and basically turn
00:26:04.279 down the Y size to a value of 0.1 and I
00:26:07.240 want to set the uniform scale to a value
00:26:09.080 of two and also under the attributes I
00:26:11.760 just want to enable to copy all my
00:26:13.720 source attributes onto my new points as
00:26:15.799 well so with all of this done I can wiar
00:26:17.840 in my point replicate node and as we can
00:26:19.840 see right here now we have quite a lot
00:26:21.840 more points and quite a lot more
00:26:23.480 resolution in a snowflake the one final
00:26:26.200 thing that I want to do in here is I
00:26:28.520 also want to make the P scale of my
00:26:30.799 points again a bit smaller because now
00:26:32.760 we have more points per point and again
00:26:35.000 I'm going to use a quick Wrangle for
00:26:36.679 this let's drop down a p angle and I
00:26:39.240 want to set F at P scale time equal to a
00:26:42.360 value of 0.5 like this and these in the
00:26:45.120 end are now my particles that I can move
00:26:47.960 into karma for rendering let's create a
00:26:50.559 last null and let's call it particles
00:26:52.840 uncore render like this now this
00:26:55.640 tutorial is already running long enough
00:26:58.279 so I'm not going to build this entire
00:27:00.200 setup from scratch instead I'm just
00:27:02.039 going to quickly walk you through my
00:27:04.000 karma settings and what I did to get the
00:27:06.399 look in the end so first of all to grab
00:27:09.320 my render camera I'm using a scene
00:27:11.760 import camera I'm not creating a new one
00:27:13.720 inside comma then I'm using here
00:27:15.760 standard of import noes to import my
00:27:18.000 Collision object my particles and my
00:27:20.919 mesh and I'm also using one subrate note
00:27:24.320 in here to create my backdrop then I
00:27:26.440 have my materials we will talk about
00:27:28.399 them in a second and then I'm just
00:27:29.880 lighting this with a dome light I'm
00:27:31.520 using a camera edit node to edit the
00:27:34.080 focus distance and the F sub of the
00:27:36.200 camera that I imported and finally this
00:27:38.679 goes all into a comma render settings
00:27:40.799 Noe and the only thing that we need to
00:27:43.080 enable here on those render settings is
00:27:45.399 under rendering under camera effects
00:27:47.559 under motion blur we have to enable
00:27:49.480 velocity blur both for our main snow
00:27:52.080 objects and also instances of particles
00:27:55.000 like this so how can we make those
00:27:57.120 particles look like
00:27:58.640 well let's jump into a material library
00:28:00.320 and let's take a look let's first of all
00:28:02.120 take a look at our snow material this
00:28:04.440 basically mostly is a material X
00:28:06.840 standard surface and on that standard
00:28:08.960 surface I have a base color set to a
00:28:11.840 very light blue then I have set the
00:28:14.519 roughness way down D value of zero and
00:28:17.399 then to actually make this look like
00:28:19.399 snow the main thing that we want to play
00:28:21.559 with is the subsurface scattering so in
00:28:23.799 here I just played with the subsurface
00:28:26.159 ratio up here and the subsurface a scale
00:28:28.640 down here until I found something that
00:28:31.679 did look like snow in the end and then I
00:28:34.039 also gave my subsurface color this light
00:28:36.200 blue color the same as my base and
00:28:38.360 finally to add some glints to my snow
00:28:40.720 all I did is basically create a very
00:28:44.080 noisy normal image using cops that you
00:28:46.480 can also find in the scene find download
00:28:48.720 and I added this as a normal map with a
00:28:51.320 very strong scale like this and this is
00:28:53.960 basically my entire normal map setup and
00:28:56.360 my entire snow setup done and and for m
00:28:58.840 not particles this is even simpler this
00:29:01.679 is just all done in the material X
00:29:04.360 standard surface again we have this sort
00:29:06.600 of light bluish color in here in the
00:29:09.000 base color again we have zero roughness
00:29:11.600 on the spec color and to sort of fake
00:29:13.559 some subs surface scattering on our
00:29:15.279 particles since we can't enable it there
00:29:18.200 the one thing that I did in the end is
00:29:20.080 turned on the opacity to a really really
00:29:22.679 low value a value of 06 and this in the
00:29:25.960 end gave my particles also a very snow
00:29:28.559 like a very soft color and this is
00:29:31.039 basically everything there is to
00:29:32.760 rendering and simulating snow inside
00:29:34.519 Houdini this has gotten a whole lot
00:29:36.360 easier with the new mpm solver you just
00:29:38.720 have to sacrifice a bit of disc space
00:29:41.440 and a bit of time to get there but in
00:29:43.640 the end this with very little tweaking
00:29:46.320 will give you very nice results and I
00:29:48.600 think this is a very worthy new addition
00:29:51.600 to the set of solvers that we have in
00:29:53.480 hini but this is it for today and until
00:29:56.080 next time it's cheers and goodbye and if
00:29:58.600 you like us and want to support us or
00:30:00.559 just want to learn more about hudini in
00:30:02.399 in of courses consider becoming a patron
00:30:04.679 of ours and to everyone already
00:30:06.679 supporting us thanks so much Guys
00:30:08.880 Without You anma in this form would not
00:30:11.320 be possible thank you

----------------------------------------
Contents of YouTube-Transcript/Entagma/Free Houdini Tutorial Sci Fi Panel Deformer with OpenSubDiv Patches.txt:
# tactiq.io free youtube transcript
# Free Houdini Tutorial: Sci Fi Panel Deformer with OpenSubDiv Patches
# https://www.youtube.com/watch/Qro8zmy60VI

00:00:02.679 in today's video I want to rebuild a
00:00:05.160 tool from an addon this tissue addon for
00:00:07.839 blender and this is an add-on that I'm
00:00:10.160 quite fond of because back in the day
00:00:12.120 when I didn't know Houdini and blender
00:00:14.320 geometry notes wasn't a thing this is
00:00:16.320 the tool I used to create organic shapes
00:00:19.000 for my Works organic shapes that looked
00:00:21.240 somewhat like this and the main tool
00:00:23.680 from this addon that I'm interested in
00:00:26.080 works a bit like this we can build a
00:00:28.359 square patch of ch ometry a component
00:00:31.880 and we can have some base mesh and what
00:00:34.200 we can do with the add-on is we can take
00:00:36.280 this component this patch and simply
00:00:38.360 copy it onto every phase of our base mes
00:00:41.840 and in the end this results in this new
00:00:44.079 a lot more interesting geomety right
00:00:45.800 here so if you want to rebuild this in
00:00:47.800 Houdini is there any geometry concept
00:00:51.399 any technique that we can use to make
00:00:53.280 our life easier and well there is and
00:00:55.920 that technique is called pruv
00:00:58.000 coordinates this is something that that
00:01:00.440 we tackled a bit in previous tutorials
00:01:04.080 however we didn't spend much time here
00:01:06.439 so I want to use the first part of this
00:01:08.840 tutorial to build some intuition into
00:01:11.439 how those premu V coordinates actually
00:01:13.759 work so first of all let's start in an
00:01:16.200 mty scene let's drop down a geonode
00:01:18.960 let's dive inside and first of all as a
00:01:21.479 test object I just want to drop down a
00:01:23.560 platonic and for now let's simply set
00:01:26.000 this to cube now those pruv coordinates
00:01:28.759 that I talked about are in some ways
00:01:31.400 similar to traditional UV coordinates
00:01:34.320 however there are still some differences
00:01:35.880 and I first of all want to visualize
00:01:37.600 them to visualize those I first of all
00:01:40.640 want to drop down simply a null as an
00:01:43.640 input let's call it in and first of all
00:01:46.280 I want to scatter points on my Cube here
00:01:48.880 and I want to use those points to later
00:01:51.840 sample the premier V coordinates that I
00:01:54.119 talked about for this we need a whole
00:01:56.320 lot of points so in this case let's just
00:01:59.000 turn off the relax iterations and let's
00:02:01.399 just up the number of points to a
00:02:03.240 million like this and now let's drop
00:02:05.759 down a point Wrangle and let's use this
00:02:08.479 to look up the closest Prem V coordinate
00:02:10.959 on each phase of a base G for each point
00:02:13.959 that we're working on here so let's we
00:02:15.840 of points in the first input and our
00:02:17.519 main geometry in the second input now to
00:02:19.840 sample the prier coordinates there is a
00:02:22.599 function that we can use and it's called
00:02:24.599 XYZ dist this expects first of all a GS
00:02:27.680 stream this will be GS stream one for
00:02:29.360 the second input then a position to
00:02:31.640 sample from this is our VP the position
00:02:34.080 of a point and then this is a function
00:02:36.840 that won't return a value that we can
00:02:39.159 later save inside a variable that we
00:02:41.640 write in front of this function this
00:02:43.400 expects to have some variables in here
00:02:46.680 that this function can simply write to
00:02:48.480 and this will be first of all the
00:02:50.159 Primitive face that is closest to the
00:02:52.440 point and the UV coordinate that we're
00:02:55.040 interested in the Premier V coordinate
00:02:57.120 we need to create those variables that
00:02:59.040 we passed in so first of all let's
00:03:01.239 create an in variable called Prim and
00:03:03.840 then also a vector variable called UV
00:03:07.280 like this and what I want to do with
00:03:09.680 this UV coordinate that I sampled is I
00:03:12.040 simply want to write it out to a UV
00:03:14.599 attribute so V add UV is equal to a UV
00:03:19.159 variable that we created something like
00:03:21.400 this to make this visible I want to use
00:03:23.920 an ad from map to Simply color our
00:03:26.280 points with a simple UV grid and if we
00:03:28.480 drop this down as we can see what our
00:03:30.720 Prim UV coordinates are are essentially
00:03:33.120 a unwrapped UV Square for each face of
00:03:36.000 our object we can maybe make this a bit
00:03:38.879 more intuitive a bit better to see if we
00:03:41.760 drop down just another Point triangle
00:03:43.840 and we simply use this to lur from a
00:03:46.400 position in 3D space to a position in UV
00:03:48.720 space so to do this let's write V at p
00:03:51.879 is equal to a lurb a linear
00:03:54.200 interpolation from a VDP position to a v
00:03:57.879 UV position and let's learn with a
00:04:00.280 simple slider and if we move our slider
00:04:02.400 here every phas of a cube simply moves
00:04:05.280 to its UV position like this this is for
00:04:07.519 qus let's maybe try triangles as well so
00:04:10.760 let's set a platonic from Cube to
00:04:12.879 tetrahedron now UV coordinates look a
00:04:15.200 bit strange let's see what's happening
00:04:17.160 here let's move them to UV space and as
00:04:20.238 we can see each triangle face and a mesh
00:04:23.120 is simply a u v Square in here cut in
00:04:25.919 half and let's take a look at anons as
00:04:28.240 well let's turn this maybe into a doic
00:04:30.759 aedon no Premier V coordinates look like
00:04:33.639 this and at this point it's a bit hard
00:04:36.520 to see so let's maybe introduce in front
00:04:39.199 of input object a blast node and simply
00:04:41.680 blast everything but the first primitive
00:04:44.680 something like this and if we now
00:04:47.320 transform this to UV space we can see
00:04:49.520 that a UV Square gets simply wrapped
00:04:51.960 around the center of our angon and what
00:04:55.120 we could imagine if we take a look at
00:04:57.120 this lur function here is instead of
00:04:59.560 taking simply a lot of points that form
00:05:01.759 a UV grid we could build a patch of
00:05:04.080 geometry in this UV space and then also
00:05:07.360 use a function to transform it to the
00:05:09.720 primu V Space which would move it to
00:05:11.639 each face of our object and this is
00:05:14.000 exactly what we want to do today there
00:05:16.120 is one thing that I want to change in
00:05:18.120 here because right now I'm using the
00:05:20.120 prim UV coordinates of Houdini and
00:05:23.120 there's another set of Premier V
00:05:25.080 coordinates that we can use that I think
00:05:27.319 is a bit better suited for our needs and
00:05:29.800 this is the Optive patch coordinates we
00:05:32.880 can get an idea how they look if we
00:05:35.759 translate from udini Prim UV coordinates
00:05:38.960 to this new set of UV coordinates first
00:05:41.280 of all let's turn off the blast note
00:05:43.240 again let's take a look at the full
00:05:44.440 geometry and now in here the function
00:05:47.280 that we want to use in this case is
00:05:49.240 called OSD for Optive and look up patch
00:05:53.520 like this and this should be on GS3
00:05:56.080 Monon we have to put in the Primitive
00:05:58.160 that we found up here with XY zist
00:06:00.440 function let's put in Prim right here
00:06:03.120 then we have to put in the UV
00:06:04.919 coordinates that we found with this
00:06:06.400 function so this will be UV dox and UV
00:06:11.280 doy and then again we want to write what
00:06:14.319 we found here out to some variables and
00:06:17.000 in this case let's make this a bit
00:06:18.479 larger this will be instead of a prim
00:06:21.039 this will be a UV patch and this will be
00:06:24.120 a float called patch U for the U
00:06:26.960 coordinate and float called patch V for
00:06:31.080 the V coordinate like this and again
00:06:34.120 we'll have to create those variables so
00:06:36.720 let's create an end variable called
00:06:39.039 patch and a float variable called patch
00:06:42.280 U and Patch V like this and again we
00:06:45.479 want to write this out to our UV
00:06:47.440 coordinates so in this case let's use a
00:06:50.599 set function and set this to patch U
00:06:53.599 patch V and zero like this and now our
00:06:56.520 patch coordinates have changed and let's
00:06:59.240 say take a look at how they are changed
00:07:00.960 let's maybe first of all switch to a
00:07:02.599 simpler solid let's switch back to our
00:07:05.039 tetraedron and if we know use a blend
00:07:08.639 slider on the last Wrangle there's stuff
00:07:12.080 happening it's still a bit much let's
00:07:14.440 maybe just focus on one phas let's see
00:07:17.080 what's happening here again and now we
00:07:19.280 can see how those open stive coordinates
00:07:21.360 work essentially each phase gets split
00:07:24.199 into a number of quads depending on how
00:07:27.160 many points are around these faces and
00:07:29.560 this is also true for angon so let's
00:07:32.080 take a look at the do aedon again we can
00:07:34.599 see the same pattern here The Only
00:07:36.840 Exception is the cube or a quad because
00:07:40.599 in this case we still get our normal UV
00:07:42.840 grid and I think this tessellation is a
00:07:45.520 lot nicer than the default one with
00:07:47.639 Houdini and also we get an extra bit of
00:07:50.000 functionality by using those OSD
00:07:52.919 functions in Houdini because OSD has a
00:07:55.720 neat feature again this is built around
00:07:57.960 the Optive but workflow and open subti
00:08:00.840 gives us the possibility to also write
00:08:03.919 back attributes for example the P
00:08:05.840 attribute but write them back in a way
00:08:07.960 as if our geometry would be infinitely
00:08:10.759 subdivided so to quickly demonstrate
00:08:13.000 this I can create a vector pause for my
00:08:16.240 points position and I can look up this
00:08:18.759 Vector PA again with a OSD function so
00:08:21.800 in this case OSD limit surface and this
00:08:24.520 will take in continue stream the name of
00:08:28.039 the attribute that we want to sample
00:08:30.319 then uh OSD patch that we found earlier
00:08:33.200 then our patch U and our patch V and
00:08:36.479 finally the variable that we want to
00:08:37.839 write to in this case pause and now
00:08:39.919 let's write this back to a position so V
00:08:42.240 ATP is equal to pause and now for this
00:08:45.040 single face this doesn't change much so
00:08:47.240 let's disable our blast node but now as
00:08:49.640 we can see our Cube has turned into a
00:08:52.160 sphere or something similar to a sphere
00:08:54.640 basically a cube that is infinitely
00:08:57.200 subdivided and we can also check this by
00:08:59.839 dropping down a subdivide note and
00:09:01.959 setting the level really really high a
00:09:04.240 level of four and compare this to a
00:09:06.959 point re angle in the end and the
00:09:08.959 subdivide note and yes these are both
00:09:11.320 the same shape so this will not only
00:09:13.519 allow us to copy our patch geud to our
00:09:15.720 faces but also to copy this in a very
00:09:18.760 smooth way now those OSD tricks is
00:09:21.120 something that I learned from constant
00:09:23.480 in Markus he already published two great
00:09:25.720 tutorials with some other techniques
00:09:27.760 regarding those these are linked down in
00:09:29.440 the description I can highly recommend
00:09:31.600 those they are some really really handy
00:09:34.160 techniques but now let's finally move on
00:09:36.240 to our main setup and get building here
00:09:38.959 first of all I want to bring in two
00:09:40.839 files so let's drop down a file note and
00:09:43.200 this will first of all be my patch and
00:09:45.399 you can find this in the SC files that
00:09:47.399 you can download and this will be patch
00:09:50.480 o3b and this is simply a bit of geometri
00:09:53.560 that I simply poly modeled in blender
00:09:55.839 then I also want to bring in a base here
00:09:58.680 that we want to copy on to and you can
00:10:01.079 also find this in the scene files and
00:10:03.240 you can also find the tea image scene
00:10:05.880 file in there if you cares and how I did
00:10:08.720 the preview animation or the teaser
00:10:10.640 animation but this will be Target o03
00:10:13.360 and this is this is simple piece of
00:10:15.640 geometry right here and now let's work
00:10:17.800 on getting this patch onto this target
00:10:20.240 Geo and the first thing that I want to
00:10:22.680 do is I want to set up a for Loop and a
00:10:24.800 for Loop that should run as many times
00:10:27.320 as we have subdivision Pat PES in our
00:10:30.160 main geometry here so we should find
00:10:32.560 first of all the total number of OSD
00:10:34.680 patches for this let's simply drop down
00:10:37.240 an attri rank let's s this onto our
00:10:40.160 Target view let's call this maybe num
00:10:43.440 patches let's set the run over to detail
00:10:47.920 and I want to create an attribute called
00:10:50.519 num patches as well and I can find the
00:10:53.519 number of Patches by using the
00:10:56.440 _ patch count function and this simply
00:10:59.560 gets as an input the geostream so
00:11:01.680 geostream zero and now if you go to our
00:11:04.120 GE spreadsheet on to detail we have on
00:11:06.720 num patches right here and crucially
00:11:09.200 this number of patches is different to
00:11:11.240 the number of Primitives in a mesh
00:11:13.200 because again we're dividing each
00:11:15.000 primitive up depending how many points
00:11:17.160 or vertices that primitive has now let's
00:11:19.680 set up a for Loop for this I want to use
00:11:22.160 a for loop with feedback as a base
00:11:25.800 however I want to modify this quite a
00:11:27.760 bit first of all let byon geometry in
00:11:31.000 here and I want to set first of all the
00:11:33.120 number of iterations that this Loop runs
00:11:35.440 equal to the number of patches that we
00:11:38.200 found here so on the interations
00:11:40.600 parameter right here I want to write an
00:11:42.399 expression a detail expression I want to
00:11:45.120 reference my num patches note right here
00:11:48.519 like this the attribute that I want to
00:11:50.720 grab is called num patches and finally I
00:11:53.160 want to grab the first component of that
00:11:54.800 attribute and I got some error here
00:11:57.240 let's take a look and it's the this
00:11:59.240 semicolon at the back we don't need this
00:12:01.240 here no this should run like this next I
00:12:04.480 want to set the Goa method of this Loop
00:12:07.560 here not to feedback each iteration I
00:12:10.000 simply want to merge each iteration I
00:12:11.920 want to merge each patch that we're
00:12:13.680 creating back into a whole mesh in the
00:12:15.720 end then I want to move on to the begin
00:12:18.839 note of a fall Loop right here and I
00:12:21.160 want to set this not to fetch feedback I
00:12:24.199 going to set this to fetch input so
00:12:26.240 we're just referencing this geometry
00:12:28.360 that we're putting in right here over
00:12:30.160 and over and over again we also need the
00:12:32.519 same node for our input patch so let's
00:12:35.399 wi this in here as well and I also need
00:12:38.680 a meta import node so let's click this
00:12:41.680 button right here because I later want
00:12:43.720 to reference the current Loops iteration
00:12:46.000 like this and now if this done I can
00:12:48.199 finally drop down a point Wrangle and
00:12:50.760 start writing our deforma in here now
00:12:53.120 for this point angle the first input
00:12:55.240 should be the patch the second input
00:12:57.920 should be the geometry that we're
00:12:59.800 copying on to and the third node should
00:13:02.240 be a meta import node of reference to
00:13:04.959 the current Loops iteration and inside
00:13:07.079 our patch I first of all want to grab
00:13:09.399 the current Loop satation because this
00:13:11.079 will be the patch that we're currently
00:13:12.920 processing let's call and Patch is equal
00:13:16.199 to a detail function that should look on
00:13:19.000 G stream 2 and the attribute that we
00:13:21.199 want to grab is called iteration like
00:13:23.279 this and now what I simply want to do is
00:13:25.560 I want to use the same as the limit
00:13:28.320 surface function that we used earlier I
00:13:30.639 want to use this to sample the position
00:13:33.560 that we want to move each point to
00:13:36.040 because as we can see with this patch
00:13:38.320 this patch is already built inside the
00:13:41.240 pruv space that we talked about earlier
00:13:43.560 this Square from a point of 0 0 to 1 one
00:13:47.399 and I want to Simply look up the point
00:13:48.920 coordinates and find new coordinates in
00:13:51.240 the space of the current patch that
00:13:53.000 we're processing so to do this let's use
00:13:55.839 our Rd limit surface function let's look
00:13:58.240 on to your stream one we want to grab
00:14:00.639 the P attribute we want to use the patch
00:14:03.440 that we found and again we want to look
00:14:05.680 for the UV coordinate of the piece of
00:14:08.199 geometry that we created so this will be
00:14:10.199 V ATP dox doy because we built that
00:14:14.360 object in the UV space of our Prem V
00:14:17.480 coordinates and finally we need the
00:14:19.839 variable that we want to write to and in
00:14:21.759 this case this will be a pause and we
00:14:24.000 need to create pause let's create a
00:14:26.279 vector called pause as a variable and
00:14:28.360 now finally let's write this back out so
00:14:30.959 V ATP is equal to pause and as soon as
00:14:34.480 we do this we see stuff happening and
00:14:37.199 this is already solder working we have a
00:14:40.199 patch geometry now copied onto Each
00:14:43.120 corner of our faces which is exactly
00:14:45.680 what we want the only problems that I
00:14:47.880 can see is that our geometry is quite
00:14:50.240 flat because we're not taking into
00:14:52.160 account the Z component of our position
00:14:55.279 vector and also we have these Square
00:14:57.959 patches in here here which use a
00:14:59.639 different coordinate system and these
00:15:01.600 look quite odd here as well so these are
00:15:03.920 two problems that we need to fix let's
00:15:06.199 maybe first of all work on making AET 3D
00:15:09.880 and my idea here is to not only sample
00:15:13.160 our position from a use the lookup patch
00:15:16.480 but also the normal and then we can move
00:15:18.959 each point that we're processing along
00:15:20.800 this normal Vector the length of its own
00:15:23.079 Z component let's try this first of all
00:15:25.399 our chetry needs normals so let's simply
00:15:27.639 drop down a normal node onto this second
00:15:31.160 GS room right here and let's add normals
00:15:33.800 to points like this and in here I want
00:15:36.079 to look up the normal Vector the same
00:15:38.880 way as I did with my position Vector so
00:15:41.120 let's create a vector called Norm this
00:15:43.240 should grab an attribute called n and
00:15:45.600 this should write it to our Norm
00:15:47.560 variable and now we need to update our
00:15:50.560 VP function down here so WEP will now be
00:15:54.560 our position plus our normal times our V
00:15:58.759 at P do Z coordinate like this and now
00:16:02.480 this gets a lot more 3D a bit too much
00:16:05.000 3D let's turn this down a bit and in
00:16:07.399 this case I want to simply just multiply
00:16:10.319 it by some constant in my case a value
00:16:12.839 of 02 like this and now this looks a lot
00:16:15.800 better right now this geometry is turned
00:16:17.800 inside out we can easily fix this by
00:16:20.279 just inverting our constant right here
00:16:22.839 minus two this looks now a bit better
00:16:25.440 and we can drop down a normal node down
00:16:28.079 here to fix our normals as well and now
00:16:30.959 this is looking quite good and we're
00:16:32.839 actually quite finished already we just
00:16:35.279 have to fix those Square patches up here
00:16:38.240 so what I want to do here to fix those
00:16:40.399 is quite a simple and quick and dirty
00:16:42.639 fix I want to just look up the square
00:16:45.440 faces inside my mesh and I want to just
00:16:47.600 divide them down the middle so to select
00:16:50.160 our square faces let's drop down a group
00:16:53.319 expression Noe let's create a group
00:16:55.639 called quads and to find those quads the
00:16:59.000 function that I can use is the prim
00:17:02.120 vertex count function this needs a
00:17:04.799 current T Stream So T stream zero and up
00:17:08.359 Prim num and you want to Simply check if
00:17:10.720 this is equal to four and we've got some
00:17:13.480 error let's take a look and I got a typo
00:17:16.640 here Prim vertex count like this and now
00:17:19.839 this selects our square faces and we can
00:17:22.439 simply turn this into triangles with a
00:17:24.520 divide note let's drop this down and
00:17:27.319 just work on our quads and now these are
00:17:30.640 both triangles and if we now take a look
00:17:33.520 at our geometry now this looks like the
00:17:36.440 thing that we want now we're pretty much
00:17:38.880 done here I just want to do some small
00:17:41.840 simple things to make this tool a bit
00:17:43.919 more usable first of all we should make
00:17:46.600 sure that this input patch that we're
00:17:49.120 putting into our tool right here always
00:17:51.640 lives inside this Prem V coordinate
00:17:54.640 space and we can do this with a match
00:17:56.520 size function he match size size note
00:17:59.120 let's drop this down let's use scale to
00:18:01.919 fit and let's update the target position
00:18:05.400 the target box position up here and this
00:18:07.840 should go to a position of .5 in X and
00:18:11.880 .5 in y and zero in Z so now it's
00:18:15.520 definitely always inside that Prem V
00:18:18.520 space and then another thing that we
00:18:20.840 need to do is we need to fuse to gather
00:18:23.200 those points along the edges in here
00:18:25.360 because right now they're still just
00:18:27.280 open points so open edges and for this
00:18:30.080 down here we can use a group note where
00:18:33.880 this below our match size let's call
00:18:36.159 this group open let's set the group type
00:18:38.640 to points let's disable our base group
00:18:40.960 and include by edes and include by
00:18:42.840 unshared edges this just select some
00:18:45.440 points right here at the edges and then
00:18:47.600 after our Loop down here we can drop
00:18:49.960 down a fuse node where this in and
00:18:53.280 simply work on open points and I think I
00:18:57.400 may need to adjust just the snapping
00:18:59.600 distance let's maybe add a zero in here
00:19:02.000 and yeah now this looks better and now
00:19:04.120 we should be able to drop down a
00:19:05.880 subdivide note make our Mees a bit more
00:19:07.880 smooth and yeah this is working so this
00:19:10.520 is my take on rebuilding a bit of the
00:19:13.360 functionality of the tissue addon inside
00:19:16.000 hudini and also my tag on working with
00:19:19.320 the OSD functions inside hudini because
00:19:22.679 I think they are really really handy and
00:19:25.480 not many people know about them again if
00:19:27.400 you want to know more about the Prem
00:19:29.280 functions you can also take a look at
00:19:31.000 the tutorials by Conan marnus they are
00:19:33.200 linked in the description and until next
00:19:35.440 time it's cheers and goodbye and if you
00:19:38.000 like us and want to support us or just
00:19:40.480 want to learn more about hudini in in of
00:19:42.640 courses consider becoming a patron of
00:19:44.799 ours and to everyone already supporting
00:19:47.400 us thank you so much guys without you
00:19:49.799 and tagma would not be possible with a
00:19:52.200 very special thank you going out to
00:19:54.240 muhamed alabri Mia Ichigo Joseph Hardon
00:19:57.720 and David D and thanks so much guys

----------------------------------------
Contents of YouTube-Transcript/Entagma/Easy Houdini Jam2Go Datamoshing in Copernicus.txt:
# tactiq.io free youtube transcript
# Easy Houdini: Jam2Go Datamoshing in Copernicus
# https://www.youtube.com/watch/w3tNaWLPSAI

00:00:02.240 like probably all of you I've seen the
00:00:05.160 amazing data mushing setup fellow
00:00:07.120 YouTuber champ too build in Unreal
00:00:09.080 Engine some weeks ago and I couldn't
00:00:11.040 help wondering if I could pull off the
00:00:13.160 same effect in Houdini using Copernicus
00:00:16.000 and as it turns out it's actually quite
00:00:18.359 easy and fun so that's what we're going
00:00:20.240 to do in this episode so again first of
00:00:22.800 all all credit for the main idea of the
00:00:25.519 setup goes to this guy goes to jam to go
00:00:28.400 who made this amazing amazing video
00:00:31.000 about building a data mushing effect in
00:00:33.280 Unreal Engine link is in the description
00:00:35.640 but now let's talk about how we're doing
00:00:37.120 this in hudini and let's first of all
00:00:38.640 talk about data mushing and what this
00:00:40.640 actually is so usually as 3D artists we
00:00:43.719 tend to think of a video file as an
00:00:47.079 image sequence however for some video
00:00:49.879 files that is not true especially for
00:00:52.680 video files that are very compressed
00:00:54.879 only a few of those frames inside of
00:00:57.280 that video are actually images that we
00:00:59.480 can take a look at and we call those if
00:01:01.480 frames the vast majority of frames
00:01:03.879 inside such an video file are so-called
00:01:06.000 P frames and those do not store images
00:01:08.680 what they store instead are movements of
00:01:11.439 single Pixel groups throughout the image
00:01:13.960 or throughout the video and the reason
00:01:15.880 we're doing this is those P frames
00:01:18.400 usually need to store a lot less details
00:01:21.280 than the equivalent iframe which makes
00:01:23.240 them far easier to compress and this in
00:01:25.920 the end leads to a smaller video file so
00:01:28.439 what we're doing in data mhing Ed at
00:01:30.040 least in the traditional sense is we're
00:01:32.159 going to take one of those compressed
00:01:33.960 video files and we're simply going to
00:01:35.799 start removing ey frames and now those P
00:01:38.360 frames simply have to push around and
00:01:40.680 mosh around the last ey frame this one
00:01:43.280 right here a lot more a lot further and
00:01:45.719 this in the end leads to all those nice
00:01:47.560 and glitchy artifacts that we're after
00:01:49.399 here but again this is the traditional
00:01:51.479 approach and both in unreal and hini we
00:01:54.759 don't have if frames and P frames so
00:01:56.960 what are we going to do here and this is
00:01:58.640 where the idea from champ to comes in so
00:02:01.320 while we do not have if frames and P
00:02:03.479 frames what we do have is something
00:02:05.840 called a beauty pass and something
00:02:07.320 called a motion Vector pass and for the
00:02:09.479 youngsters in the audience motion Vector
00:02:11.640 passes are a somewhat old school way of
00:02:14.519 doing motion blur not while rendering
00:02:16.879 but while compositing and pretty much
00:02:19.000 any render engine can output a motion
00:02:21.160 Vector pass and again all this is is
00:02:23.519 something that stores movement is
00:02:25.400 something very similar to an actual P
00:02:27.480 frame in a compressed video so what we
00:02:29.680 can do to recreate this effect is we can
00:02:32.400 simply get rid of a lot of our actual
00:02:34.800 Beauty passes and simply take one single
00:02:37.560 frame of a beauty pass and over the next
00:02:40.280 frames use a motion Vector passes to
00:02:42.959 distort that beauty pass further and
00:02:45.200 further and further and what we're going
00:02:47.159 to get out in the end again really
00:02:50.440 really looks like something that we get
00:02:52.840 by traditional data mushing and also
00:02:55.400 since we're not relying on Ancient video
00:02:57.280 codex to do this data mushing effect we
00:02:59.400 have some more perks we have a lot more
00:03:01.800 timing control because we can set those
00:03:04.080 ey frames those quote unquote eye frames
00:03:06.360 wherever we want we can also stay in
00:03:08.799 Asus 32bit linear color throughout our
00:03:11.360 entire process give us a lot more
00:03:13.360 options later in color grading and also
00:03:15.959 of course since we're in cernus we can
00:03:18.080 use masks and filters and noises and all
00:03:20.879 this other stuff to really tweak the
00:03:22.840 effect really make this thing
00:03:24.319 interesting but now let's jump into udia
00:03:26.560 and let's actually build this I first of
00:03:28.560 all want to talk about renders settings
00:03:30.560 again this is something that every
00:03:32.159 render engine every program should be
00:03:34.239 able to do however building this in
00:03:36.239 karma and Solaris has some CS so I will
00:03:39.040 quickly go over them so what you're
00:03:40.959 going to do in karma is first of all
00:03:43.480 build your setup as usual and then once
00:03:46.480 you're done there you're going to drop
00:03:48.400 down first of all a cach node and on
00:03:50.760 this cach note you're going to set the
00:03:52.439 cach behavior to always cash all frames
00:03:55.519 and this is mandatory within Solaris to
00:03:58.040 get accurate motion Vector passes also
00:04:00.360 again since I think this effect gets a
00:04:02.640 lot cooler when we start using masks I
00:04:04.879 want to set up some masks as well and
00:04:07.239 you can do this within Karma very
00:04:09.040 quickly by dropping down a Karma
00:04:10.799 cryptomed node and in here checking
00:04:13.280 either crypto Primitives or crypto
00:04:15.159 materials and finally in the render
00:04:17.320 settings under image output we want to
00:04:19.358 head over to aovs under utility we
00:04:22.400 should have one pass called motion
00:04:24.160 vectors and we want to enable this and
00:04:26.280 our cryptomed pass should already be
00:04:28.240 enabled just by using this note note in
00:04:30.080 here also if you want to do the noising
00:04:32.520 this absolutely works so you can turn
00:04:34.199 this on but also if you are going to use
00:04:37.320 a crypt pass you have to use something
00:04:40.600 that's not lossy compression so in this
00:04:43.080 case I'm using a z single scan line
00:04:45.800 usually when exporting exrs I would
00:04:48.000 choose dwab because this is a lot
00:04:50.360 smaller however in this case I have to
00:04:52.639 stick to zip you can find this setup
00:04:55.160 right here in your scene file downloads
00:04:56.919 and you can simply use this to export
00:04:58.880 your rended frame and keep going with
00:05:00.800 the setup now to actually build the
00:05:02.680 setup I'm going to jump into an mty
00:05:04.680 scene file and again I want to build
00:05:06.919 this in the obj context because I want
00:05:09.120 to make use of a sub solver so first of
00:05:11.520 all let's drop down a note let's dive
00:05:13.960 inside and in here I want to drop down a
00:05:16.759 cop Network and this cop Network in here
00:05:19.520 is just there to load in first of all a
00:05:22.479 different frames to display our
00:05:24.160 different frames and later again we're
00:05:26.400 going to build the rest inside the subs
00:05:28.120 server but for now let's jump in this
00:05:30.160 cop Network and let's load in the image
00:05:32.160 sequence that we rended out so I'm going
00:05:34.240 to drop down a file note and in my
00:05:36.720 render folder I'm going to grab this
00:05:39.720 sequence right here which goes from
00:05:41.639 frame 72 to frame 144 let it accept here
00:05:46.199 again we need to set up our timeline so
00:05:48.080 this goes from frame 72 to frame 144
00:05:53.120 like this now we have a start and an end
00:05:55.440 frame like this and also to make this
00:05:57.639 display correctly I want to Simply right
00:05:59.960 click the display options right here
00:06:01.880 enable color correction and set the tone
00:06:04.600 mapping to Aces this is what I use for
00:06:06.840 rendering and again this is all we're
00:06:08.720 going to do in this copet this is just
00:06:10.720 there to load our files so let's jump
00:06:12.919 back out this copet is also outputting a
00:06:15.840 Houdini volume that is our picture like
00:06:18.360 this and let's now drop down a sub
00:06:21.000 solver and let's keep working in here so
00:06:23.800 on the sub solver I first of all want to
00:06:26.000 set up the start frame the frame where I
00:06:28.080 want to start actually mhing my data and
00:06:31.160 in this case I'm going to set the
00:06:32.759 starting frame to a value of 96 and I
00:06:35.840 also want to use this Frame to later
00:06:37.680 switch between our main stream right
00:06:39.960 here and our solver stream our data
00:06:41.800 mushing stream right here so I'm going
00:06:43.560 to drop down a switch Noe in here I'm
00:06:45.479 going to wire in my copet into my solver
00:06:47.840 the solver into my switch node and then
00:06:49.800 the copet also into my switch node as a
00:06:51.960 second input and on my solver I'm going
00:06:54.160 to right click my start frame say copy
00:06:56.520 parameter and in my switch I want to
00:06:59.080 check if dollar F so current frame is
00:07:02.160 smaller than a relative reference like
00:07:04.400 this so until frame 96 this is just
00:07:07.720 using this input from a cop net right
00:07:09.960 here and after frame 96 it's actually
00:07:12.360 using a solver one additional thing that
00:07:14.639 I want to do since exrs inside cernus
00:07:17.759 are somewhat slow and I want to have a
00:07:20.039 quick playback the solver already has a
00:07:22.240 caching mode however this G stream right
00:07:24.759 here hasn't so I'm simply going to drop
00:07:26.840 down a cache note on this G stream as
00:07:29.280 well to all make this playback really
00:07:31.840 fast now we've done with this part of
00:07:34.319 the setup and we can finally jump into
00:07:36.479 our sub solver first of all again I want
00:07:39.080 to make use of my starting frame and I
00:07:41.280 want to switch between this two stream
00:07:43.479 and this T Stream So previous frame or
00:07:45.759 input one based on a starting frame so
00:07:48.599 again another switch note let's wire in
00:07:51.159 the previous frame first and then our
00:07:53.120 input one in here and we simply want to
00:07:56.199 check if our dollar f is equal to again
00:07:59.759 the relative reference to a starting
00:08:01.400 frame so something like this and finally
00:08:03.680 in here I'm going to drop down a null
00:08:06.199 this will be a reference to my CNET that
00:08:08.240 I'm going to drop down in second I'm
00:08:10.159 going to call this in and finally we're
00:08:12.840 going to drop down our main copet and wi
00:08:15.319 this into the output like this let's
00:08:17.199 highlight our component let's jump
00:08:18.720 inside and let's first of all bring in
00:08:21.039 this frame for this I'm going to use a
00:08:23.039 sub import node I'm going to check use
00:08:25.199 external soap and I'm going to jump out
00:08:27.240 of this node out of the next node and
00:08:29.560 I'm going to select my in null right
00:08:31.319 here to turn this into a cops layer I'm
00:08:33.719 going to use a go2 layer note and I have
00:08:36.760 to match the right signature so let's
00:08:38.679 turn this to rgba like this and now we
00:08:42.080 actually have a cops image that we can
00:08:44.000 work with so this is our Beauty pass now
00:08:46.920 we have to load up our motion Vector
00:08:49.200 pass for this again I'm going to use a
00:08:51.720 file node and again I'm going to load in
00:08:54.240 the image sequence that I rendered out
00:08:56.160 and to get all my aovs from this file
00:08:59.000 node I'm I'm going to hit the add aovs
00:09:01.079 from file button down here so in the end
00:09:03.360 we should have again our Beauty P which
00:09:05.360 we won't use in this case however also
00:09:07.440 motion vectors and our crypto objects
00:09:09.720 let's not worry about the crypto objects
00:09:11.519 for now what we're instead going to do
00:09:13.200 is we're simply going to grab our motion
00:09:14.959 Vector pass and we're going to use this
00:09:17.079 to distort our main Beauty pass so all
00:09:19.800 we need to build this is a distort note
00:09:23.160 like this this takes in first of all the
00:09:25.800 source and then also a direction and
00:09:28.399 this will be my motion vectors however
00:09:31.120 right now this is an RGB value this only
00:09:34.120 wants a two-dimensional value and the
00:09:36.640 somewhat strangely name node inside cops
00:09:39.240 that does this for us is an RGB to UV
00:09:42.000 node again this does not convert our RGB
00:09:44.399 values in here to UV coordinates this is
00:09:46.720 just turning a 3D Vector into a 2d
00:09:49.760 Vector so you're going to v a motion
00:09:51.600 vectors in here and the UV into the
00:09:53.880 direction like this and finally we're
00:09:56.320 going to end this with a null and we're
00:09:58.360 going to wire in the output of our
00:09:59.959 distort node in here now we should
00:10:01.360 already see some Distortion happening
00:10:03.320 and if we go to our distort node and go
00:10:05.480 to the parameters and play with the
00:10:07.640 Distortion scale we should also be able
00:10:09.480 to see something that really already
00:10:11.680 starts looking like data mushing which
00:10:13.680 is exactly what we want now we have to
00:10:15.920 dial in this value that we're going to
00:10:17.600 add in here this is something that
00:10:19.399 depends both on the resolution and then
00:10:22.320 also the speed of your animation and in
00:10:25.240 the end I think it's best to just
00:10:27.360 eyeball this value and in this case for
00:10:29.519 the setup that we're building in here I
00:10:31.320 found a value of
00:10:32.839 0.01 to work nicely for this resolution
00:10:35.720 and the speed and this should be pretty
00:10:38.160 much all we need to do for our base
00:10:39.760 setup so let's quickly try this out
00:10:41.959 let's jump back out let's highlight our
00:10:44.600 switch down here and let's quickly play
00:10:47.000 through our animation again this will
00:10:49.120 first of all play somewhat slowly
00:10:51.279 because exrs are slow within Copernicus
00:10:54.480 however once we've run through our
00:10:55.959 timeline ones we should see some nice
00:10:57.839 outputs and after bit of waiting we have
00:11:00.480 this really nice data M result so this
00:11:03.279 is our basic setup done now we can
00:11:05.639 refine it and really have some fun here
00:11:08.040 so let's jump back into our solver back
00:11:10.920 into our cop nut let's make sure we're
00:11:12.880 on frame 96 our cop nut does actually
00:11:15.680 have some data to work with and let's
00:11:17.760 keep adding stuff to this the first
00:11:19.720 thing that I want to do in here is right
00:11:21.680 now I think the data mhing streaks are
00:11:24.279 looking a bit too clean we're missing
00:11:26.560 some of these compression artifacts that
00:11:28.839 we going to see with those really old
00:11:31.240 really compressed video formats so to
00:11:33.320 sort of ulate this I just want to add a
00:11:35.399 little bit of noise to my Distortion
00:11:37.800 vectors to my motion vectors so to do
00:11:40.000 this I'm first of all going to start
00:11:41.519 with a fractal noise I'm going to pipe
00:11:43.600 in my motion vectors as a size reference
00:11:46.040 and to get sort of Blocky artifacts I'm
00:11:48.240 going to set the noise type to w a
00:11:51.079 cellular FS2 minus fub1 and I'm going to
00:11:54.079 set the metric to Manhattan and this
00:11:56.800 sort of gets us some blocky shapes that
00:11:58.720 we can work with with right now this is
00:12:00.279 just mono noise however we want slope
00:12:02.480 directions so I'm going to search for
00:12:05.000 the slope Direction cop node I'm going
00:12:07.040 to wire this in here and now we have
00:12:09.160 something that looks quite similar here
00:12:11.000 to a motion Vector pass and the last
00:12:13.480 thing that I want to do in here is
00:12:15.279 simply blend this with our motion
00:12:16.920 vectors so let's drop down a blend note
00:12:19.360 our motion vectors goes into the
00:12:21.079 background and our noise into the
00:12:23.600 foreground and I want just a small
00:12:26.480 amount of noise in here so let's set
00:12:28.639 this tobo of 05 just have a tiny bit of
00:12:32.240 noise in here in our motion vectors and
00:12:35.040 this is what I want to pipe in the end
00:12:37.600 into the direction input so this is the
00:12:40.079 first thing that I want to do in here
00:12:41.760 the next thing that I want to do is I
00:12:43.880 actually want to restrict the area that
00:12:47.040 I want to MH either to just my alien EG
00:12:50.320 object right here in the middle or
00:12:52.160 everything else and for this again I
00:12:54.079 want to make use of those Crypt mats no
00:12:56.440 cops or cernus is still in beta and
00:12:59.440 crypts in Copernicus are very in beta
00:13:02.720 which makes them somewhat hard to use
00:13:04.920 there's one node that we can use to get
00:13:07.040 to a crypt and this is the Crypt node
00:13:09.720 and on this cryptomed node we can simply
00:13:11.639 wire in a first crypto aov in here and
00:13:15.279 now this is where it gets somewhat
00:13:17.440 tedious to use because we don't actually
00:13:20.600 have a picker in here yet a picker where
00:13:23.320 we can pick out the right crypto object
00:13:25.800 in this case we just have to remember
00:13:28.160 the right path that that be set within
00:13:30.240 Solaris for a object and in this case
00:13:33.160 I'm just going to add this in I'm just
00:13:35.720 going to paste this in and I want to
00:13:38.120 select the background which hides under
00:13:40.959 slgd SL mesore 0 like this and this is
00:13:45.560 now a mask for a background again this
00:13:48.639 is quite tedious I also think that
00:13:51.160 rohand Derby made a video about how to
00:13:53.600 make Crypt mats work in cernus and make
00:13:56.680 this a bit easier for you I'm also going
00:13:58.639 to link this in the description however
00:14:00.600 in this case I want to just keep going
00:14:02.360 with this I want to use this in the end
00:14:05.040 to blend between my standard Beauty pass
00:14:08.160 in here and my distorted Beauty pass
00:14:10.600 let's first of all grab another blend
00:14:13.240 note let's wire this after our distort
00:14:15.639 node in front of a null and in this case
00:14:18.759 our distorted output should be the
00:14:20.880 foreground not the background so let's
00:14:22.600 write in like this then I want to take
00:14:24.920 my beauty pass in here from my file node
00:14:28.040 the C output and I want to bring it over
00:14:31.199 and wire this into the background of my
00:14:33.519 blend and finally I want to go down to
00:14:35.839 my cryptomed mask and I want to go from
00:14:38.519 my mask up into the mask input of this
00:14:41.279 blend note right here so entire notary
00:14:44.000 now should look like this and again this
00:14:46.759 should be all we need to do here so
00:14:48.560 let's again jump back out let's jump
00:14:51.079 back to a switch note and again let's
00:14:53.519 play our animation and let's also maybe
00:14:55.839 reset the simulation on the solver and
00:14:57.839 let's see what we get oh and beginner
00:14:59.759 arror in here of course the display flag
00:15:02.839 inside our CET inside the solver doesn't
00:15:04.880 matter so let's quickly jump back inside
00:15:07.240 back to a CNET and let's set a display
00:15:09.160 flag add on null up here and again after
00:15:11.360 a bit of waiting we now have this really
00:15:13.839 trippy kidcope looking data mushing
00:15:16.480 effect in here which I think looks a lot
00:15:19.079 better than our default effect and a lot
00:15:21.160 more interesting and again this is just
00:15:23.759 scratching the surface of what you can
00:15:25.639 do inside of this cop net inside of a
00:15:27.639 solver node you can add more noises you
00:15:30.480 can add more filters you can just go
00:15:33.120 wild in here and really build a lot of
00:15:35.319 really different really cool looking
00:15:36.800 effects the very last thing that I want
00:15:38.880 to quickly do in here is I want to just
00:15:41.720 quickly also build a setup to write
00:15:43.639 those images back out to disk and for
00:15:46.160 this you guess it I'm going to use one
00:15:48.639 last CNET in the setup so I'm just going
00:15:51.120 to drop down another null call this out
00:15:54.079 drop down another cop Network wi this in
00:15:57.519 or drop this below and here again use a
00:16:00.560 so import again use an external soap
00:16:03.800 again let's choose out again let's
00:16:05.720 choose a go2 layer node let's select
00:16:08.959 rgba and let's finally drop down a Rob
00:16:13.000 image output we can drag in the geometry
00:16:15.880 to layer in here into the cop path and
00:16:18.480 then in here you have your typical
00:16:19.959 output settings and for outputting this
00:16:22.399 say as a JPEG file we're going to select
00:16:24.959 our srgb display and then also ases 1.0
00:16:28.600 strr video like this or you can leave
00:16:30.959 all those settings at default and write
00:16:32.880 it out as ns are if you want to do a lot
00:16:35.040 more color grading later but this is it
00:16:37.360 for today and until next time it's
00:16:39.680 cheers and goodbye and also if you like
00:16:42.279 what we're doing please consider
00:16:43.800 becoming a patron of our not only for
00:16:46.240 supporting anaga but also for access to
00:16:48.800 inp courses like our new ml11 course
00:16:52.560 which teaches you all about machine
00:16:54.519 learning or if you want something
00:16:56.440 simpler we have a newly prevent beginner
00:16:59.800 series of Houdini with around 40 videos
00:17:02.759 teaching you everything you need to know
00:17:04.559 about getting started in Houdini you can
00:17:06.359 find this and a lot of other courses on
00:17:08.720 a patron and also let me say thank you
00:17:11.000 so much to all our existing patrons
00:17:13.359 without you this channel would not be
00:17:15.400 possible thank you

----------------------------------------
Contents of YouTube-Transcript/Entagma/Guest Tutorial Truchet Tiles by Simon Fiedler.txt:
# tactiq.io free youtube transcript
# Guest Tutorial: Truchet Tiles by Simon Fiedler
# https://www.youtube.com/watch/uRy_I8U_n_0

00:00:03.280 hey guys this is salmon with anma a
00:00:05.440 while ago while scrolling through
00:00:06.839 Instagram I found this guy here who
00:00:08.440 builds custom leather balls in this
00:00:10.200 specific example he builds a ball out of
00:00:12.360 so-called tret tiles which is a special
00:00:14.719 kind of pattern which can be arranged in
00:00:16.520 a grid and however you rotate the
00:00:18.920 separate tiles it will generate a unique
00:00:21.160 but continuous pattern on the surface I
00:00:23.480 thought this look super interesting and
00:00:25.000 wanted to give it a shot in Houdini so
00:00:26.720 let's dive inside and start so as usual
00:00:29.400 let's put down on an empty geometry
00:00:30.880 container dive inside and in there we
00:00:33.920 start off with a circle set the
00:00:35.680 orientation of the circle to be Z x-axis
00:00:39.360 and the divisions we adjust to be six we
00:00:43.360 have this six-sided shape over here and
00:00:46.800 next thing we want to do is we append a
00:00:48.960 poly extrude soap put that here wire it
00:00:51.399 up with the flag on it and the distance
00:00:53.640 should be 0.5 of course we need to make
00:00:55.920 sure that extrude back is also activated
00:00:58.440 so that we have a solid piece of
00:01:00.000 geometry so this will be our hexagonal
00:01:02.519 tile next is to build the inside of the
00:01:04.839 tile the the actual lines that we need
00:01:07.479 to create to build our tet tile so first
00:01:10.640 of all let's create another Circle flag
00:01:12.880 on here we also set the orientation to
00:01:15.119 be on the Z x plane uniform scale should
00:01:17.759 be set to 0.5 and the center should be
00:01:21.240 one in X Direction and 0 0 on the both
00:01:24.520 other A's and we will adjust the
00:01:27.479 divisions to be 64 something like that
00:01:30.479 next we will append a mirror so to
00:01:32.799 mirror the circle on the other side as
00:01:34.520 well so it looks like this and if I put
00:01:37.000 the ghosting flag here on our Circle for
00:01:39.000 example you can see we now get the um
00:01:41.200 two parts on the right and on the left
00:01:42.960 side all right next uh we want to create
00:01:45.399 a line in the center so let's have a
00:01:47.759 line and directly merge that with our
00:01:50.520 mirrored circles take those two merge
00:01:52.920 together put the flag on here and let's
00:01:54.960 also adjust the line a bit so the
00:01:56.880 direction should be pointing in Z
00:01:59.079 Direction so it's 0 0 1 and the length
00:02:02.840 should be two and we will also set the
00:02:06.280 origin to be minus one like that so we
00:02:08.840 have our one line in the center and the
00:02:10.639 two circles on the outside to give them
00:02:13.520 an outline we use the poly expand 2D
00:02:16.239 node po xend 2D put it right underneath
00:02:19.640 here put the flag on it and if we switch
00:02:21.840 to wireframe mode you can see that we
00:02:23.720 basically already have what we want but
00:02:26.080 the circles are closed here in the
00:02:28.200 center so and we can easily that by
00:02:30.640 using a hole s and put that afterwards
00:02:33.440 and put the flag on it and it basically
00:02:35.800 just cuts the circles in two places so
00:02:39.319 that it's possible to have the inside
00:02:41.280 Hollow here so what we want to do now is
00:02:43.599 also extrude them to get some solid
00:02:45.920 geometry so we use a poly extrude again
00:02:48.840 and set the depth to be the distance to
00:02:52.200 be
00:02:53.000 0.35 and of course also activate output
00:02:56.640 back all right so we have our cutout
00:02:59.200 geometry and we have the solid geometry
00:03:01.599 of our tile and now it's time to bring
00:03:04.080 them together using a Boolean on the
00:03:06.360 left side we connect the tile and on the
00:03:08.920 right side we connect our cutting
00:03:10.360 geometry put the flag on it it's already
00:03:12.959 set to subtract and it kind of works you
00:03:15.200 see we get some artifacts over here and
00:03:17.519 this is because our cutting geometry is
00:03:19.599 exactly on the same height in y than our
00:03:23.280 solid geometry and we can easily solve
00:03:25.239 that by simply pushing this geometry
00:03:27.519 here slightly upwards so let's use a
00:03:29.760 transform soap put that underneath here
00:03:31.920 not a trace sorry for that transform put
00:03:35.920 that somewhere here and move it upwards
00:03:38.360 maybe 0.5 should be enough this it's
00:03:41.360 just a tiny little bit so you can see it
00:03:43.120 jumps upwards and if you now activate
00:03:44.720 the Boolean it looks very very clean so
00:03:47.640 next we want to Bevel the edges a little
00:03:49.319 bit so we use a poly bevel set the
00:03:51.840 distance to something very very small so
00:03:54.640 let's see what looks good oh this is
00:03:56.319 already way too much maybe something
00:03:57.879 like that 0.01 and I don't want to Bevel
00:04:00.879 every Edge that exists but only the 90°
00:04:03.760 angles so we go to exclusions activate
00:04:06.519 ignore flat edges and set the maximum
00:04:09.280 normal angle to be 89 so we only get
00:04:11.959 like bevels here on the really really
00:04:13.519 sharp Corners also I want to adjust the
00:04:15.840 divisions to be three instead of one and
00:04:18.079 this should give us very nice round
00:04:20.440 corners here so if I deactivate the
00:04:22.680 wireframe and remove the template flag
00:04:25.280 here you should see we have super clean
00:04:27.440 and nice geometry over here so we have
00:04:30.360 some little normal artifacts over here
00:04:32.840 but we can solve that by using a normal
00:04:34.479 s pend here set the waiting method to by
00:04:37.759 face area and the cusp angle to be 40°
00:04:40.520 for example so this should look nice and
00:04:42.520 clean and just for visualization
00:04:44.680 purposes I will go back to the Boolean
00:04:47.120 and activate the B inside a group and
00:04:49.680 here at the end iend a color up restrict
00:04:52.560 that to our B inside a group uh let's
00:04:55.720 set this to be a primitive color and
00:04:58.160 give it a pink color for example so you
00:05:00.800 should see something like that and to be
00:05:02.960 uh nicely organized let's put a null at
00:05:05.720 the end and call this one out tile all
00:05:09.280 right perfect so this is our geometry
00:05:11.120 that we want to work with our tret tile
00:05:13.240 next would be to um generate our grid
00:05:16.080 where we can put those tiles on and then
00:05:18.720 rotate them in different ways before we
00:05:20.759 can start to arrange our grid here let's
00:05:22.639 quickly analyze what we need to do so
00:05:24.560 let's switch to the top viewport scroll
00:05:26.240 in a bit and let's scroll in here I will
00:05:29.199 quickly create a transform to put that
00:05:31.880 here wire it up and activate the
00:05:34.400 template flag go to the viewport and
00:05:37.120 push our tile in the position that we
00:05:39.840 need it to be and then we can see what
00:05:42.080 we need to do so as you can see in X
00:05:44.000 direction we have to move our tile one
00:05:46.479 and a half units to the right because
00:05:48.400 our tile is one unit wide and we need to
00:05:50.840 offset offset it in in this way here and
00:05:53.800 in Z Direction actually we need to push
00:05:55.800 it down like half the dimension in in
00:05:59.240 the Z direction of our T so half the
00:06:02.120 length of this z- axis we need to push
00:06:04.560 it down so we can easily write that up
00:06:06.319 in an expression and let that do the
00:06:08.639 work for us so for that I will use a
00:06:11.160 line flag on that here and let's
00:06:14.319 deactivate the template flag over there
00:06:16.680 and let's change the orientation to be
00:06:18.560 in Z Direction like that and um let's
00:06:22.919 set the points to be 10 points all right
00:06:25.720 and now the length of our line let me
00:06:27.919 activate points and point number so you
00:06:30.039 can see the 10 points here the length of
00:06:32.680 our line should be adjusted by our
00:06:34.680 expression so what we can use here is
00:06:37.319 the bbox expression which actually takes
00:06:39.960 the bounding box of our object that we
00:06:42.639 reference in there and gives us uh
00:06:44.759 different kinds of information about the
00:06:46.240 bounding box in order to do that I could
00:06:48.479 write in the expression directly but
00:06:50.199 then it would be very long because I
00:06:51.680 have to type in the path to this object
00:06:54.000 but there's another neat little way that
00:06:55.720 we can use and this is a spare input
00:06:57.840 field so just activate your your uh your
00:07:00.560 line stop here click on the Cog wheel
00:07:02.720 and then we add a spare input so this
00:07:05.599 generates this field over here and then
00:07:07.759 make sure that under view show
00:07:09.759 dependency links for spare inputs is
00:07:11.479 activated and now while having this one
00:07:14.720 selected just drag and drop your tile in
00:07:17.240 here and you can see that this purple
00:07:19.120 dash line is now generated let's get rid
00:07:21.919 of this transform soap and this just
00:07:24.080 indicates that in this so here some
00:07:27.120 information is brought in from this one
00:07:29.280 here so it's referenced in an expression
00:07:31.080 for example um you can see now we have
00:07:33.919 our path here and we can start to type
00:07:36.319 in our bbox expression here so we type
00:07:38.919 bbox open parenthesis then you get this
00:07:41.639 little help box and this shows us what
00:07:44.400 we what this expression expects so it
00:07:47.080 wants the string surface node which is
00:07:49.360 the link to this node here then a comma
00:07:52.479 and then it wants to have the type that
00:07:54.840 you want to read out and the available
00:07:56.919 types are listed down here so you can
00:07:58.879 check where the X minimum position of
00:08:01.360 your bounding box is or in any other
00:08:03.440 dimension but you also get information
00:08:05.560 about the size and we are interested in
00:08:08.080 this one here so the size of our
00:08:10.879 bounding box in the z-axis so um instead
00:08:14.599 of typing in this path now I can simply
00:08:17.080 write minus one so minus one references
00:08:19.960 your spare input field down here then
00:08:22.120 comma
00:08:23.199 dcore C size close the bracket and let's
00:08:26.759 click here and see what happens so you
00:08:28.280 see that now the line actually snapped
00:08:30.879 on this length here which is the
00:08:32.640 dimension of our tile so let's click on
00:08:34.958 that to see that better but as I said we
00:08:36.919 don't want to offset our tiles by the
00:08:40.320 whole length of the uh Z Dimension we
00:08:43.320 want to divide that by two so divided by
00:08:45.839 two you can see that now and this
00:08:47.760 actually is exactly half the length of
00:08:50.720 the Z Dimension but uh the problem that
00:08:53.480 we are facing now is as you can see um
00:08:55.600 our 10 points are now distributed over
00:08:57.800 this length here but we actually want to
00:08:59.800 have each segment to have this length so
00:09:02.519 we need to multiply this by the number
00:09:05.480 of segments that we have uh one quick
00:09:07.680 reminder as you can see here we have 10
00:09:09.800 points 0 to 9 uh but it's nine segments
00:09:12.880 in between so you have to take this
00:09:14.480 point number and subtract one to get the
00:09:16.680 right amount of segments so we can check
00:09:18.839 how this field here is called so the
00:09:20.800 parameters called points so simply
00:09:22.880 multiply this one here by a channel
00:09:25.240 which is called points like that and now
00:09:28.040 we have to subtract one
00:09:29.880 and to have the right order of
00:09:31.279 calculations here we have to put this
00:09:33.480 last part as well in parenthesis like
00:09:36.120 that and you have seen that now the line
00:09:39.240 snapped uh to this length here and when
00:09:41.760 you change the amount of points it will
00:09:43.640 also grow so this worked set it back to
00:09:46.160 10 now let's select every second point
00:09:48.480 and move them over to the right so we
00:09:50.320 take a group range note Group by range
00:09:53.000 put that here with the flag on it we
00:09:55.399 call this one offset the group type
00:09:57.640 should be points and we select one of
00:10:00.839 two points so you see that every other
00:10:03.000 point is now selected next would be to
00:10:05.040 use a transform sub put that over here
00:10:07.399 put a flag on it and we only want to run
00:10:10.120 over the offset group and in the
00:10:12.680 translate X we type in 1.5 because this
00:10:15.640 is what we saw earlier so you get this
00:10:17.720 zigzag pattern and if you now use a copy
00:10:20.200 to points sub put it down here left
00:10:22.519 input should be our tile right input
00:10:24.720 should be our template points put the
00:10:26.440 flag on it let me deactivate this stuff
00:10:29.079 you you can see that we now have a very
00:10:30.839 very nicely organized pattern everything
00:10:33.480 is continuous and it's perfectly aligned
00:10:35.920 and if you go back to your line you can
00:10:38.000 change the amount of points and it will
00:10:40.079 adjust itself accordingly perfect so now
00:10:43.399 let's take care about the other
00:10:44.680 dimension here so we can simply use a
00:10:46.560 copy transform put that behind here and
00:10:49.839 since we have uh two tiles next to each
00:10:52.279 other and want to copy that we have to
00:10:54.279 offset It 2 * 1.5 now so simply type in
00:10:58.160 translate 3 in this case and this also
00:11:01.600 adjusts perfectly so if you change the
00:11:04.560 total number of copies here you can do
00:11:06.920 that and for the other axis you can
00:11:09.160 adjust it here of course you can connect
00:11:11.279 those two to sliders or put them somehow
00:11:13.360 together but I'll just leave it like
00:11:14.920 that for now all right so our pattern is
00:11:17.000 created uh last thing we need to do is
00:11:19.200 take care of the orientation of the
00:11:21.120 tiles now so before we set up the
00:11:23.360 orientation types let's just see and
00:11:26.320 check what we need to do here so again
00:11:28.600 I'll use a trans form wire that up to
00:11:30.639 our tile put the flag on it and let's
00:11:33.320 quickly see what we need to do so
00:11:34.760 basically we want to rotate our tile
00:11:37.079 around this axis here and those are our
00:11:39.440 different states that we have here and
00:11:41.720 as you can see um to get to uh the next
00:11:45.480 Edge we need to rotate it by 6 60° so
00:11:48.160 every 60° there's a new orientation and
00:11:51.639 basically we want to create an attribute
00:11:53.720 which goes from 0 to 5 so the uh first
00:11:57.000 variant that we have is 0 * 60° rotated
00:12:00.560 and the last one is 5times 60° rotated
00:12:03.760 so let's first of all go down here we
00:12:06.040 can get rid of this transform up again
00:12:08.279 and right after our copy which is our
00:12:10.920 points we will create an attribute
00:12:13.760 adjust integer like that wire that up
00:12:16.519 and first of all let's call our
00:12:18.920 attribute rot for rotation the pattern
00:12:22.279 type should be random our minimum value
00:12:24.600 is zero and the maximum value is five so
00:12:27.760 the rest can be adjusted later so let's
00:12:29.760 keep it like that and now we need a
00:12:32.199 little bit of Vex um I'm sure there's
00:12:34.519 other ways to do it but in this case
00:12:36.800 this is really really the easiest way to
00:12:38.680 do it so we use an attribute triangle
00:12:41.639 put it right underneath here put the
00:12:43.480 flag on it and in here let's type in
00:12:45.560 some stuff so first of all we need to
00:12:47.279 specify the axis where we want to rotate
00:12:50.519 around so we type in Vector axis equals
00:12:55.320 the curly brackets and we want to rotate
00:12:57.560 around the Y AIS so let's type in 0
00:13:00.600 comma 1 comma 0 semicolon at the end
00:13:04.519 let's go in the next line uh next up is
00:13:07.480 the angle which we want to use to rotate
00:13:10.480 around so let's call this angle and this
00:13:14.000 would be 60 times the integer attribute
00:13:18.600 R so it reads out the rotation attribute
00:13:21.760 from each point which is something
00:13:23.639 between 0 and 5 and multiplies that by
00:13:26.120 60 we have to convert this to radians
00:13:29.399 though so this is easily done by just
00:13:32.839 typing in radians and put this
00:13:35.240 calculation within parenthesis and last
00:13:37.720 step would be to set up the Orient
00:13:40.720 attribute which you can do like this at
00:13:43.360 Orient equals and uh Orient is a querian
00:13:46.880 attribute so we have to write
00:13:49.360 Quan and here you get the help card
00:13:51.639 again and you simply write down the
00:13:55.199 angle which is the radiance up here so
00:13:58.000 how much you want to rotate
00:13:59.560 and the axis which comes from Top here
00:14:02.519 so the axis which you want to use to
00:14:05.040 rotate around and that's basically it so
00:14:07.440 if we now go to our copy to points and
00:14:10.000 by the way we can select the copy to
00:14:12.040 points and activate pack and instance to
00:14:14.160 make everything nice and fast you can
00:14:16.079 already see what happened here so you
00:14:17.720 get this nice distribution and this very
00:14:20.680 nice arrangement of lines and if you go
00:14:23.880 into your attribute adjust where we
00:14:26.519 specified this here you can play around
00:14:28.680 with the seed for example and each seed
00:14:30.959 will you give you very different
00:14:32.279 patterns and you can also go into the
00:14:34.759 copy make much more of those let's zoom
00:14:37.519 out a bit here for example something
00:14:39.160 like that and give the line more points
00:14:41.399 as well so you get this very big pattern
00:14:43.639 and now it fills up the whole screen and
00:14:45.360 you can see you get very very
00:14:46.839 interesting patterns here and for
00:14:48.800 example what I also liked if you go into
00:14:50.600 your adjust integer like that you can
00:14:53.399 change that the pattern type from random
00:14:55.880 to be a noise and if you now play around
00:14:58.320 with a noise size you should be able if
00:15:00.920 you make the element size very big to
00:15:03.399 see now uh groups of orientations here
00:15:06.079 which I really like so you get mainly
00:15:08.079 orientations in that direction here or
00:15:10.000 in the other one you can start to play
00:15:12.079 around with this curve here and change
00:15:13.920 it so this is a super neat effect and I
00:15:16.839 really like uh the look of it now it's
00:15:19.160 just your imagination what holds you
00:15:20.800 back so take this here start to run some
00:15:23.759 simulations through those hallways here
00:15:26.440 or whatever you have in mind this is
00:15:28.319 basically the end of of the tutorial so
00:15:30.040 I hope you liked it a lot I really
00:15:31.639 enjoyed building this and I think it's a
00:15:33.720 very cool way to build nice patterns by
00:15:36.279 the way uh while researching I found
00:15:38.800 this website here as well uh you can
00:15:40.639 scroll through it there's a ton of
00:15:42.199 examples of other tret tiles so it
00:15:44.560 doesn't stop here there's also
00:15:46.279 threedimensional tret tiles um make sure
00:15:49.000 to take a look at that and you can use
00:15:51.279 it in the same way that we build our
00:15:53.959 setup here so uh that's it for now I
00:15:56.360 hope you liked it let me know in the
00:15:57.920 comments what you want to see next and
00:15:59.839 I'll see you in the next one bye-bye

----------------------------------------
